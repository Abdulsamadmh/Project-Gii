{"version":3,"file":"static/js/395.c67aa946.chunk.js","mappings":"8NAAA,SAASA,EAAaC,GAElB,MAA4B,qBAAjBC,cAAgCD,aAAiBC,eACxB,UAAtBD,EAAME,aAEbF,aAAiBG,UAC5B,CACA,SAASC,EAAaJ,GAElB,QADqBA,EAAMK,OAE/B,CCJA,SAASC,EAAqBC,GAC1B,OAAO,SAACP,GACJ,IAAMD,EAAeC,aAAiBG,aACZJ,GACrBA,GAAiC,IAAjBC,EAAMQ,SAEvBD,EAAaP,EAErB,CACJ,CACA,IAAMS,EAAmB,CAAEC,MAAO,EAAGC,MAAO,GAC5C,SAASC,EAAeC,GAAuB,IAApBC,EAAY,UAAH,6CAAG,OAC7BC,EAAeF,EAAER,QAAQ,IAAMQ,EAAEG,eAAe,GAChDC,EAAQF,GAAgBN,EAC9B,MAAO,CACHS,EAAGD,EAAMH,EAAY,KACrBK,EAAGF,EAAMH,EAAY,KAE7B,CACA,SAASM,EAAeH,GAA2B,IAApBH,EAAY,UAAH,6CAAG,OACvC,MAAO,CACHI,EAAGD,EAAMH,EAAY,KACrBK,EAAGF,EAAMH,EAAY,KAE7B,CACA,SAASO,EAAiBrB,GAA2B,IAApBc,EAAY,UAAH,6CAAG,OACzC,MAAO,CACHG,MAAOb,EAAaJ,GACdY,EAAeZ,EAAOc,GACtBM,EAAepB,EAAOc,GAEpC,CACA,IAAMQ,EAAc,SAACC,GAAgD,IAAvCC,EAA6B,UAAH,8CAC9CC,EAAW,SAACzB,GAAK,OAAKuB,EAAQvB,EAAOqB,EAAiBrB,GAAO,EACnE,OAAOwB,EACDlB,EAAqBmB,GACrBA,CACV,E,WCrCMC,EAAwB,SAACC,GAAO,OAAe,IAAVA,CAAc,ECJzD,SAASC,EAAYC,EAAQC,EAAWP,GAAsC,IAA7BQ,EAAU,UAAH,6CAAG,CAAEC,SAAS,GAElE,OADAH,EAAOI,iBAAiBH,EAAWP,EAASQ,GACrC,kBAAMF,EAAOK,oBAAoBJ,EAAWP,EAAQ,CAC/D,CAsBA,SAASY,EAAYC,EAAKN,EAAWP,EAASQ,IAC1CM,EAAAA,EAAAA,YAAU,WACN,IAAMC,EAAUF,EAAIG,QACpB,GAAIhB,GAAWe,EACX,OAAOV,EAAYU,EAASR,EAAWP,EAASQ,EAExD,GAAG,CAACK,EAAKN,EAAWP,EAASQ,GACjC,C,eC9BMS,EAAkB,CACpBC,YAAa,YACbC,YAAa,YACbC,UAAW,UACXC,cAAe,cACfC,YAAa,YACbC,WAAY,WACZC,aAAc,aACdC,aAAc,cAEZC,EAAkB,CACpBR,YAAa,aACbC,YAAa,YACbC,UAAW,WACXC,cAAe,eAEnB,SAASM,EAAoBC,GACzB,OClBgCC,EAAAA,GAAsC,OAAzBC,OAAOC,cDmBzCH,EClBmBC,EAAAA,GAAqC,OAAxBC,OAAOE,aDqBvCN,EAAgBE,GCpBGC,EAAAA,GAAoC,OAAvBC,OAAOG,YDuBvChB,EAAgBW,GAEpBA,CACX,CACA,SAASM,EAAgB5B,EAAQC,EAAWP,EAASQ,GACjD,OAAOH,EAAYC,EAAQqB,EAAoBpB,GAAYR,EAAYC,EAAuB,gBAAdO,GAA8BC,EAClH,CACA,SAAS2B,EAAgBtB,EAAKN,EAAWP,EAASQ,GAC9C,OAAOI,EAAYC,EAAKc,EAAoBpB,GAAYP,GAAWD,EAAYC,EAAuB,gBAAdO,GAA8BC,EAC1H,CErCA,IAAM4B,EAAU,SAAC1C,GAAK,OAAKA,EAAM2C,eAAe,MAAQ3C,EAAM2C,eAAe,IAAI,ECE3EC,EAAY,SAAC5C,GAAK,OAAK0C,EAAQ1C,IAAUA,EAAM2C,eAAe,IAAI,ECGlEE,EAAQ,SAACC,GAAC,MAAkB,kBAANA,CAAc,ECDpCC,EAAa,SAACC,EAAGC,GAAC,OAAKC,KAAKC,IAAIH,EAAIC,EAAE,EAC5C,SAASG,EAASJ,EAAGC,GACjB,GAAIJ,EAAMG,IAAMH,EAAMI,GAClB,OAAOF,EAAWC,EAAGC,GAEpB,GAAIP,EAAQM,IAAMN,EAAQO,GAAI,CAC/B,IAAMI,EAASN,EAAWC,EAAE/C,EAAGgD,EAAEhD,GAC3BqD,EAASP,EAAWC,EAAE9C,EAAG+C,EAAE/C,GAC3BqD,EAASX,EAAUI,IAAMJ,EAAUK,GAAKF,EAAWC,EAAEQ,EAAGP,EAAEO,GAAK,EACrE,OAAON,KAAKO,KAAKP,KAAKQ,IAAIL,EAAQ,GAAKH,KAAKQ,IAAIJ,EAAQ,GAAKJ,KAAKQ,IAAIH,EAAQ,GAClF,CACJ,CCfA,IAAMI,EAAmB,SAACX,EAAGC,GAAC,OAAK,SAACH,GAAC,OAAKG,EAAED,EAAEF,GAAG,GAC3Cc,EAAO,WAAH,2BAAOC,EAAY,yBAAZA,EAAY,uBAAKA,EAAaC,OAAOH,EAAiB,ECSjEI,EAAU,WACZ,WAAYhF,EAAOiF,GAAuC,oEAAJ,CAAC,EAAxBC,EAAkB,EAAlBA,mBA2D3B,IA3D6C,eAI7CC,KAAKC,WAAa,KAIlBD,KAAKE,cAAgB,KAIrBF,KAAKG,kBAAoB,KAIzBH,KAAKF,SAAW,CAAC,EACjBE,KAAKI,YAAc,WACf,GAAM,EAAKF,eAAiB,EAAKC,kBAAjC,CAEA,IAAME,EAAOC,EAAW,EAAKH,kBAAmB,EAAKI,SAC/CC,EAAmC,OAApB,EAAKP,WAIpBQ,EAA0BvB,EAASmB,EAAKK,OAAQ,CAAE3E,EAAG,EAAGC,EAAG,KAAQ,EACzE,GAAKwE,GAAiBC,EAAtB,CAEA,IAAQ3E,EAAUuE,EAAVvE,MACA6E,GAAcC,EAAAA,EAAAA,MAAdD,UACR,EAAKJ,QAAQM,MAAK,kBAAK/E,GAAK,IAAE6E,UAAAA,KAC9B,MAA4B,EAAKb,SAAzBgB,EAAO,EAAPA,QAASC,EAAM,EAANA,OACZP,IACDM,GAAWA,EAAQ,EAAKZ,cAAeG,GACvC,EAAKJ,WAAa,EAAKC,eAE3Ba,GAAUA,EAAO,EAAKb,cAAeG,EAT3B,CARA,CAkBd,EACAL,KAAKgB,kBAAoB,SAACnG,EAAOwF,GAC7B,EAAKH,cAAgBrF,EACrB,EAAKsF,kBAAoBc,EAAeZ,EAAM,EAAKN,oBAE/CnF,EAAaC,IAA4B,IAAlBA,EAAMqG,QAC7B,EAAKC,gBAAgBtG,EAAOwF,GAIhCe,EAAAA,GAAAA,OAAY,EAAKhB,aAAa,EAClC,EACAJ,KAAKmB,gBAAkB,SAACtG,EAAOwF,GAC3B,EAAKgB,MACL,MAAgC,EAAKvB,SAA7BwB,EAAK,EAALA,MAAOC,EAAY,EAAZA,aACTC,EAAUlB,EAAWW,EAAeZ,EAAM,EAAKN,oBAAqB,EAAKQ,SAC3E,EAAKN,YAAcqB,GACnBA,EAAMzG,EAAO2G,GAEjBD,GAAgBA,EAAa1G,EAAO2G,EACxC,IAEIvG,EAAaJ,IAAUA,EAAMK,QAAQuG,OAAS,GAAlD,CAEAzB,KAAKF,SAAWA,EAChBE,KAAKD,mBAAqBA,EAC1B,IAAMM,EAAOnE,EAAiBrB,GACxB6G,EAAcT,EAAeZ,EAAML,KAAKD,oBACtCjE,EAAU4F,EAAV5F,MACR,GAAsB8E,EAAAA,EAAAA,MAAdD,EAAS,EAATA,UACRX,KAAKO,QAAU,EAAC,kBAAKzE,GAAK,IAAE6E,UAAAA,KAC5B,IAAQgB,EAAmB7B,EAAnB6B,eACRA,GACIA,EAAe9G,EAAOyF,EAAWoB,EAAa1B,KAAKO,UACvDP,KAAK4B,gBAAkBlC,EAAKpB,EAAgBJ,OAAQ,cAAe8B,KAAKgB,mBAAoB1C,EAAgBJ,OAAQ,YAAa8B,KAAKmB,iBAAkB7C,EAAgBJ,OAAQ,gBAAiB8B,KAAKmB,iBAX5L,CAYd,CAOC,OAPA,sCACD,SAAerB,GACXE,KAAKF,SAAWA,CACpB,GAAC,iBACD,WACIE,KAAK4B,iBAAmB5B,KAAK4B,kBAC7BC,EAAAA,GAAAA,OAAkB7B,KAAKI,YAC3B,KAAC,EAhFW,GAkFhB,SAASa,EAAeZ,EAAMN,GAC1B,OAAOA,EAAqB,CAAEjE,MAAOiE,EAAmBM,EAAKvE,QAAWuE,CAC5E,CACA,SAASyB,EAAchD,EAAGC,GACtB,MAAO,CAAEhD,EAAG+C,EAAE/C,EAAIgD,EAAEhD,EAAGC,EAAG8C,EAAE9C,EAAI+C,EAAE/C,EACtC,CACA,SAASsE,EAAW,EAAWC,GAAS,IAAlBzE,EAAK,EAALA,MAClB,MAAO,CACHA,MAAAA,EACAiG,MAAOD,EAAchG,EAAOkG,EAAgBzB,IAC5CG,OAAQoB,EAAchG,EAAOmG,EAAiB1B,IAC9C2B,SAAUC,EAAY5B,EAAS,IAEvC,CACA,SAAS0B,EAAiB1B,GACtB,OAAOA,EAAQ,EACnB,CACA,SAASyB,EAAgBzB,GACrB,OAAOA,EAAQA,EAAQkB,OAAS,EACpC,CACA,SAASU,EAAY5B,EAAS6B,GAC1B,GAAI7B,EAAQkB,OAAS,EACjB,MAAO,CAAE1F,EAAG,EAAGC,EAAG,GAKtB,IAHA,IAAIqG,EAAI9B,EAAQkB,OAAS,EACrBa,EAAmB,KACjBC,EAAYP,EAAgBzB,GAC3B8B,GAAK,IACRC,EAAmB/B,EAAQ8B,KACvBE,EAAU5B,UAAY2B,EAAiB3B,UACvCpE,EAAsB6F,MAG1BC,IAEJ,IAAKC,EACD,MAAO,CAAEvG,EAAG,EAAGC,EAAG,GAEtB,IAAMwG,GAAQD,EAAU5B,UAAY2B,EAAiB3B,WAAa,IAClE,GAAa,IAAT6B,EACA,MAAO,CAAEzG,EAAG,EAAGC,EAAG,GAEtB,IAAMyG,EAAkB,CACpB1G,GAAIwG,EAAUxG,EAAIuG,EAAiBvG,GAAKyG,EACxCxG,GAAIuG,EAAUvG,EAAIsG,EAAiBtG,GAAKwG,GAQ5C,OANIC,EAAgB1G,IAAM2G,MACtBD,EAAgB1G,EAAI,GAEpB0G,EAAgBzG,IAAM0G,MACtBD,EAAgBzG,EAAI,GAEjByG,CACX,CCjJA,SAASE,EAAW3E,GAChB,IAAI4E,EAAO,KACX,OAAO,WAIH,OAAa,OAATA,IACAA,EAAO5E,EAJM,WACb4E,EAAO,IACX,EAMJ,CACJ,CACA,IAAMC,EAAuBF,EAAW,kBAClCG,EAAqBH,EAAW,gBACtC,SAASI,EAAcC,GACnB,IAAIJ,GAAO,EACX,GAAa,MAATI,EACAJ,EAAOE,SAEN,GAAa,MAATE,EACLJ,EAAOC,QAEN,CACD,IAAMI,EAAiBJ,IACjBK,EAAeJ,IACjBG,GAAkBC,EAClBN,EAAO,WACHK,IACAC,GACJ,GAIID,GACAA,IACAC,GACAA,IAEZ,CACA,OAAON,CACX,CACA,SAASO,IAGL,IAAMC,EAAkBL,GAAc,GACtC,OAAKK,IAELA,KACO,EACX,C,eClDMC,EAAM,SAACC,EAAMC,EAAIC,GAAQ,OAAMA,EAAWF,EAAOE,EAAWD,EAAKD,CAAI,ECArEE,EAAW,SAACF,EAAMC,EAAIE,GACxB,IAAMC,EAAmBH,EAAKD,EAC9B,OAA4B,IAArBI,EAAyB,GAAKD,EAAQH,GAAQI,CACzD,ECHMC,EAAQ,SAACC,EAAKC,EAAKjF,GAAC,OAAKI,KAAK4E,IAAI5E,KAAK6E,IAAIjF,EAAGgF,GAAMC,EAAI,ECE9D,SAASC,EAAWC,GAChB,OAAOA,EAAKF,IAAME,EAAKH,GAC3B,CACA,SAASI,EAAOP,GAAuC,IAAhC/G,EAAS,UAAH,6CAAG,EAAGuH,EAAc,UAAH,6CAAG,IAC7C,OAAO/E,EAASuE,EAAO/G,GAAUuH,CACrC,CACA,SAASC,EAAcnC,EAAOoC,EAAQzH,GAAsB,IAAd0H,EAAS,UAAH,6CAAG,GACnDrC,EAAMqC,OAASA,EACfrC,EAAMsC,YAAchB,EAAIc,EAAOP,IAAKO,EAAON,IAAK9B,EAAMqC,QACtDrC,EAAMuC,MAAQR,EAAWpH,GAAUoH,EAAWK,IAC1CH,EAAOjC,EAAMuC,MAAO,EAAG,OAAWC,MAAMxC,EAAMuC,UAC9CvC,EAAMuC,MAAQ,GAClBvC,EAAMyC,UACFnB,EAAI3G,EAAOkH,IAAKlH,EAAOmH,IAAK9B,EAAMqC,QAAUrC,EAAMsC,aAClDL,EAAOjC,EAAMyC,YAAcD,MAAMxC,EAAMyC,cACvCzC,EAAMyC,UAAY,EAC1B,CACA,SAASC,EAAa1C,EAAOoC,EAAQzH,EAAQ0H,GACzCF,EAAcnC,EAAMhG,EAAGoI,EAAOpI,EAAGW,EAAOX,EAAc,OAAXqI,QAA8B,IAAXA,OAAoB,EAASA,EAAOM,SAClGR,EAAcnC,EAAM/F,EAAGmI,EAAOnI,EAAGU,EAAOV,EAAc,OAAXoI,QAA8B,IAAXA,OAAoB,EAASA,EAAOO,QACtG,CACA,SAASC,EAAiBlI,EAAQmI,EAAUC,GACxCpI,EAAOkH,IAAMkB,EAAOlB,IAAMiB,EAASjB,IACnClH,EAAOmH,IAAMnH,EAAOkH,IAAME,EAAWe,EACzC,CAKA,SAASE,EAAyBrI,EAAQsI,EAAQF,GAC9CpI,EAAOkH,IAAMoB,EAAOpB,IAAMkB,EAAOlB,IACjClH,EAAOmH,IAAMnH,EAAOkH,IAAME,EAAWkB,EACzC,CACA,SAASC,GAAqBvI,EAAQsI,EAAQF,GAC1CC,EAAyBrI,EAAOX,EAAGiJ,EAAOjJ,EAAG+I,EAAO/I,GACpDgJ,EAAyBrI,EAAOV,EAAGgJ,EAAOhJ,EAAG8I,EAAO9I,EACxD,CCdA,SAASkJ,GAA4BnB,EAAMH,EAAKC,GAC5C,MAAO,CACHD,SAAauB,IAARvB,EAAoBG,EAAKH,IAAMA,OAAMuB,EAC1CtB,SAAasB,IAARtB,EACCE,EAAKF,IAAMA,GAAOE,EAAKF,IAAME,EAAKH,UAClCuB,EAEd,CAcA,SAASC,GAA4BC,EAAYC,GAC7C,IAAI1B,EAAM0B,EAAgB1B,IAAMyB,EAAWzB,IACvCC,EAAMyB,EAAgBzB,IAAMwB,EAAWxB,IAG3C,GAAIyB,EAAgBzB,IAAMyB,EAAgB1B,IACtCyB,EAAWxB,IAAMwB,EAAWzB,IAAK,OACpB,CAACC,EAAKD,GAAlBA,EAAG,KAAEC,EAAG,IACb,CACA,MAAO,CAAED,IAAAA,EAAKC,IAAAA,EAClB,CAuCA,IC9FI0B,GD8FEC,GAAiB,IAgBvB,SAASC,GAAmBC,EAAaC,EAAUC,GAC/C,MAAO,CACHhC,IAAKiC,GAAoBH,EAAaC,GACtC9B,IAAKgC,GAAoBH,EAAaE,GAE9C,CACA,SAASC,GAAoBH,EAAaI,GACtC,IAAIC,EACJ,MAA8B,kBAAhBL,EACRA,EAC8B,QAA7BK,EAAKL,EAAYI,UAA2B,IAAPC,EAAgBA,EAAK,CACrE,ECxHA,SAAWR,GACPA,EAAuB,QAAI,UAC3BA,EAAqB,MAAI,aACzBA,EAAmB,IAAI,WACvBA,EAAoB,KAAI,YACxBA,EAAqB,MAAI,aACzBA,EAAsB,OAAI,cAC1BA,EAAoB,KAAI,MAC3B,CARD,CAQGA,KAAkBA,GAAgB,CAAC,ICTtC,SAASS,GAASC,GACd,MAAO,CAACA,EAAS,KAAMA,EAAS,KACpC,CCGA,SAASC,GAAwB,GAA+B,IAA7BC,EAAG,EAAHA,IAC/B,MAAO,CACHpK,EAAG,CAAE6H,IAF+B,EAAJwC,KAEhBvC,IAF2B,EAALwC,OAGtCrK,EAAG,CAAE4H,IAAKuC,EAAKtC,IAHoC,EAANyC,QAKrD,C,gBCVA,SAASC,GAAgBjC,GACrB,YAAiBa,IAAVb,GAAiC,IAAVA,CAClC,CACA,SAASkC,GAAS,GAA2B,IAAzBlC,EAAK,EAALA,MAAOmC,EAAM,EAANA,OAAQC,EAAM,EAANA,OAC/B,OAASH,GAAgBjC,KACpBiC,GAAgBE,KAChBF,GAAgBG,EACzB,CACA,SAASC,GAAaC,GAClB,OAAQJ,GAASI,IACbC,GAAaD,EAAO7K,IACpB8K,GAAaD,EAAO5K,IACpB4K,EAAOtH,GACPsH,EAAOE,QACPF,EAAOG,SACPH,EAAOI,OACf,CACA,SAASH,GAAapD,GAClB,OAAOA,GAAmB,OAAVA,CACpB,CCbA,SAASwD,GAAWnL,EAAOwI,EAAOD,GAG9B,OAAOA,EADQC,GADYxI,EAAQuI,EAGvC,CAIA,SAAS6C,GAAgBpL,EAAO0I,EAAWF,EAAOD,EAAa8C,GAI3D,YAHiBhC,IAAbgC,IACArL,EAAQmL,GAAWnL,EAAOqL,EAAU9C,IAEjC4C,GAAWnL,EAAOwI,EAAOD,GAAeG,CACnD,CAIA,SAAS4C,GAAerD,GAAuD,IAAjDS,EAAY,UAAH,6CAAG,EAAGF,EAAQ,UAAH,6CAAG,EAAGD,EAAW,uCAAE8C,EAAQ,uCACzEpD,EAAKH,IAAMsD,GAAgBnD,EAAKH,IAAKY,EAAWF,EAAOD,EAAa8C,GACpEpD,EAAKF,IAAMqD,GAAgBnD,EAAKF,IAAKW,EAAWF,EAAOD,EAAa8C,EACxE,CAIA,SAASE,GAAcC,EAAK,GAAU,IAARvL,EAAC,EAADA,EAAGC,EAAC,EAADA,EAC7BoL,GAAeE,EAAIvL,EAAGA,EAAEyI,UAAWzI,EAAEuI,MAAOvI,EAAEsI,aAC9C+C,GAAeE,EAAItL,EAAGA,EAAEwI,UAAWxI,EAAEsI,MAAOtI,EAAEqI,YAClD,CAuCA,SAASkD,GAAcxD,EAAM7E,GACzB6E,EAAKH,IAAMG,EAAKH,IAAM1E,EACtB6E,EAAKF,IAAME,EAAKF,IAAM3E,CAC1B,CAMA,SAASsI,GAAczD,EAAM0D,EAAY,GAA4B,oBAA3BC,EAAG,KAAEC,EAAQ,KAAEC,EAAS,KACxDC,OAAuC1C,IAA1BsC,EAAWG,GAA2BH,EAAWG,GAAa,GAC3EvD,EAAchB,EAAIU,EAAKH,IAAKG,EAAKF,IAAKgE,GAE5CT,GAAerD,EAAM0D,EAAWC,GAAMD,EAAWE,GAAWtD,EAAaoD,EAAWnD,MACxF,CAIA,IAAMwD,GAAQ,CAAC,IAAK,SAAU,WACxBC,GAAQ,CAAC,IAAK,SAAU,WAI9B,SAASC,GAAaV,EAAKW,GACvBT,GAAcF,EAAIvL,EAAGkM,EAAWH,IAChCN,GAAcF,EAAItL,EAAGiM,EAAWF,GACpC,CC/FA,SAASG,GAAmBC,EAAUlH,GAClC,OAAOiF,GHeX,SAA4BpK,EAAOmF,GAC/B,IAAKA,EACD,OAAOnF,EACX,IAAMsM,EAAUnH,EAAe,CAAElF,EAAGD,EAAMsK,KAAMpK,EAAGF,EAAMqK,MACnDkC,EAAcpH,EAAe,CAAElF,EAAGD,EAAMuK,MAAOrK,EAAGF,EAAMwK,SAC9D,MAAO,CACHH,IAAKiC,EAAQpM,EACboK,KAAMgC,EAAQrM,EACduK,OAAQ+B,EAAYrM,EACpBqK,MAAOgC,EAAYtM,EAE3B,CG1BmCuM,CAAmBH,EAASI,wBAAyBtH,GACxF,C,uCCFMuH,GAAU,KAKhB,SAASC,GAAW,GAA4D,IACxEC,EACAC,EAFwE,IAA1DC,SAAAA,OAAQ,IAAG,MAAG,MAAEC,OAAAA,OAAM,IAAG,MAAI,MAAE3G,SAAAA,OAAQ,IAAG,IAAC,MAAE4G,KAAAA,OAAI,IAAG,IAAC,EAInEC,EAAe,EAAIF,EACvBE,EAAepF,EAPA,IACA,EAM8BoF,GAC7CH,EAAWjF,EAVK,IACA,GAS2BiF,EAAW,KAClDG,EAAe,GACfL,EAAW,SAACM,GACR,IAAMC,EAAmBD,EAAeD,EAClChH,EAAQkH,EAAmBL,EAC3B9J,EAAImK,EAAmB/G,EACvBnD,EAAImK,GAAgBF,EAAcD,GAClCI,EAAInK,KAAKoK,KAAKrH,GACpB,OAAOyG,GAAW1J,EAAIC,EAAKoK,CAC/B,EACAR,EAAa,SAACK,GACV,IACMjH,EADmBiH,EAAeD,EACPH,EAC3BS,EAAItH,EAAQG,EAAWA,EACvBxG,EAAIsD,KAAKQ,IAAIuJ,EAAc,GAAK/J,KAAKQ,IAAIwJ,EAAc,GAAKJ,EAC5DU,EAAItK,KAAKoK,KAAKrH,GACdwH,EAAIL,GAAgBlK,KAAKQ,IAAIwJ,EAAc,GAAID,GAErD,QADgBL,EAASM,GAAgBR,GAAU,GAAK,EAAI,KACzCa,EAAI3N,GAAK4N,GAAMC,CACtC,IAGAb,EAAW,SAACM,GAGR,OAFUhK,KAAKoK,KAAKJ,EAAeJ,KACxBI,EAAe9G,GAAY0G,EAAW,GAC1C,IACX,EACAD,EAAa,SAACK,GAGV,OAFUhK,KAAKoK,KAAKJ,EAAeJ,IACIA,EAAWA,GAAvC1G,EAAW8G,GAE1B,GAEJ,IACMA,EAmBV,SAAyBN,EAAUC,EAAYa,GAE3C,IADA,IAAIC,EAASD,EACJnH,EAAI,EAAGA,EAHG,GAGiBA,IAChCoH,GAAkBf,EAASe,GAAUd,EAAWc,GAEpD,OAAOA,CACX,CAzByBC,CAAgBhB,EAAUC,EAD1B,EAAIC,GAGzB,GADAA,GAAsB,IAClBrE,MAAMyE,GACN,MAAO,CACHW,UAAW,IACXC,QAAS,GACThB,SAAAA,GAIJ,IAAMe,EAAY3K,KAAKQ,IAAIwJ,EAAc,GAAKF,EAC9C,MAAO,CACHa,UAAAA,EACAC,QAAwB,EAAfb,EAAmB/J,KAAKO,KAAKuJ,EAAOa,GAC7Cf,SAAAA,EAGZ,CASA,SAASM,GAAgBF,EAAcD,GACnC,OAAOC,EAAehK,KAAKO,KAAK,EAAIwJ,EAAeA,EACvD,CCzEA,IAAMc,GAAe,CAAC,WAAY,UAC5BC,GAAc,CAAC,YAAa,UAAW,QAC7C,SAASC,GAAanN,EAASoN,GAC3B,OAAOA,EAAKC,MAAK,SAACvC,GAAG,YAAsBvC,IAAjBvI,EAAQ8K,EAAkB,GACxD,CAWA,SAASwC,GAAOnE,GACZ,IAAI,EAAqDA,EAAnDzC,KAAAA,OAAI,IAAG,IAAG,IAAyCyC,EAAvCxC,GAAAA,OAAE,IAAG,IAAG,IAA+BwC,EAA7BoE,UAAAA,OAAS,IAAG,IAAC,EAAEC,EAAcrE,EAAdqE,UAAkBxN,GAAUyN,EAAAA,GAAAA,IAAOtE,EAAI,CAAC,OAAQ,KAAM,YAAa,cACxGuE,EAAQ,CAAEC,MAAM,EAAO9G,MAAOH,GACpC,EAbJ,SAA0B1G,GACtB,IAAI4N,EAAgBC,OAAOC,OAAO,CAAExI,SAAU,EAAKyH,UAAW,IAAKC,QAAS,GAAId,KAAM,EAAK6B,wBAAwB,GAAS/N,GAC5H,IAAKmN,GAAanN,EAASkN,KACvBC,GAAanN,EAASiN,IAAe,CACrC,IAAMe,EAAUnC,GAAW7L,IAC3B4N,EAAgBC,OAAOC,OAAOD,OAAOC,OAAOD,OAAOC,OAAO,CAAC,EAAGF,GAAgBI,GAAU,CAAE1I,SAAU,EAAK4G,KAAM,KACjG6B,wBAAyB,CAC3C,CACA,OAAOH,CACX,CAIoFK,CAAiBjO,GAA3F+M,EAAS,EAATA,UAAWC,EAAO,EAAPA,QAASd,EAAI,EAAJA,KAAM5G,EAAQ,EAARA,SAAU0G,EAAQ,EAARA,SAAU+B,EAAsB,EAAtBA,uBAChDG,EAAgBC,GAChBC,EAAkBD,GACtB,SAASE,IACL,IAAMC,EAAkBhJ,GAAaA,EAAW,IAAQ,EAClDiJ,EAAe5H,EAAKD,EACpByF,EAAea,GAAW,EAAI5K,KAAKO,KAAKoK,EAAYb,IACpDsC,EAAsBpM,KAAKO,KAAKoK,EAAYb,GAAQ,IAI1D,QAHkB3D,IAAdiF,IACAA,EAAYpL,KAAK4E,IAAI5E,KAAKC,IAAIsE,EAAKD,GAAQ,IAAK,KAEhDyF,EAAe,EAAG,CAClB,IAAMsC,EAAcnC,GAAgBkC,EAAqBrC,GACzD+B,EAAgB,SAACQ,GACb,IAAM5C,EAAW1J,KAAKoK,KAAKL,EAAeqC,EAAsBE,GAChE,OAAQ/H,EACJmF,IACOwC,EACCnC,EAAeqC,EAAsBD,GACrCE,EACArM,KAAKuM,IAAIF,EAAcC,GACvBH,EAAenM,KAAKwM,IAAIH,EAAcC,GACtD,EACAN,EAAkB,SAACM,GACf,IAAM5C,EAAW1J,KAAKoK,KAAKL,EAAeqC,EAAsBE,GAChE,OAAQvC,EACJqC,EACA1C,GACE1J,KAAKuM,IAAIF,EAAcC,IACpBJ,EACGnC,EACIqC,EACAD,GACRE,EACAF,EAAenM,KAAKwM,IAAIH,EAAcC,IAC1C5C,GACK1J,KAAKwM,IAAIH,EAAcC,IACnBJ,EACGnC,EACIqC,EACAD,GACRE,EACIF,EACAnM,KAAKuM,IAAIF,EAAcC,GAC3C,CACJ,MACK,GAAqB,IAAjBvC,EACL+B,EAAgB,SAACQ,GAAC,OAAK/H,EACnBvE,KAAKoK,KAAKgC,EAAsBE,IAC3BH,GACID,EAAkBE,EAAsBD,GACrCG,EAAE,MAEjB,CACD,IAAMG,EAAoBL,EAAsBpM,KAAKO,KAAKwJ,EAAeA,EAAe,GACxF+B,EAAgB,SAACQ,GACb,IAAM5C,EAAW1J,KAAKoK,KAAKL,EAAeqC,EAAsBE,GAC1DI,EAAW1M,KAAK4E,IAAI6H,EAAoBH,EAAG,KACjD,OAAQ/H,EACHmF,IACKwC,EACEnC,EAAeqC,EAAsBD,GACrCnM,KAAK2M,KAAKD,GACVD,EACIN,EACAnM,KAAK4M,KAAKF,IAClBD,CACZ,CACJ,CACJ,CAEA,OADAR,IACO,CACHY,KAAM,SAACP,GACH,IAAMlO,EAAU0N,EAAcQ,GAC9B,GAAKX,EAQDL,EAAMC,KAAOe,GAAK1C,MARO,CACzB,IAAMnG,EAAuC,IAArBuI,EAAgBM,GAClCQ,EAA2B9M,KAAKC,IAAIwD,IAAoB0H,EACxD4B,EAA+B/M,KAAKC,IAAIsE,EAAKnG,IAAYgN,EAC/DE,EAAMC,KACFuB,GAA4BC,CACpC,CAKA,OADAzB,EAAM7G,MAAQ6G,EAAMC,KAAOhH,EAAKnG,EACzBkN,CACX,EACA0B,WAAY,WACR9J,GAAYA,EAAS,MACR,CAACqB,EAAID,GAAjBA,EAAI,KAAEC,EAAE,KACT0H,GACJ,EAER,CACAf,GAAO+B,mBAAqB,SAACnN,EAAGC,GAAC,MAAkB,kBAAND,GAA+B,kBAANC,CAAc,EACpF,IAAMgM,GAAO,SAACmB,GAAE,OAAK,CAAC,E,mCClHhBC,GAAgB,SAACC,EAAMC,GAAQ,OAAK,SAACzN,GACvC,OAAO0N,SAASC,EAAAA,GAAAA,IAAS3N,IAAM4N,GAAAA,GAAAA,KAAsB5N,IAAMA,EAAE6N,WAAWL,IACnEC,GAAY5B,OAAOiC,UAAUjO,eAAekO,KAAK/N,EAAGyN,GAC7D,CAAC,EACKO,GAAa,SAACC,EAAOC,EAAOC,GAAK,OAAK,SAACnO,GAAM,MAC/C,KAAK2N,EAAAA,GAAAA,IAAS3N,GACV,OAAOA,EACX,MAAyBA,EAAEoO,MAAMC,GAAAA,IAAW,gBAArCnO,EAAC,KAAEC,EAAC,KAAEoK,EAAC,KAAE+D,EAAK,KACrB,OAAO,EAAP,cACKL,EAAQM,WAAWrO,KAAE,UACrBgO,EAAQK,WAAWpO,KAAE,UACrBgO,EAAQI,WAAWhE,KAAE,uBACLhE,IAAV+H,EAAsBC,WAAWD,GAAS,GAAC,CAE1D,CAAC,ECZKE,IAAezJ,EAAAA,GAAAA,IAAM,EAAG,KACxB0J,GAAU5C,OAAOC,OAAOD,OAAOC,OAAO,CAAC,EAAG4C,GAAAA,IAAS,CAAErF,UAAW,SAACrJ,GAAC,OAAKI,KAAKuO,MAAMH,GAAaxO,GAAG,IAClG4O,GAAO,CACTC,KAAMtB,GAAc,MAAO,OAC3BuB,MAAOd,GAAW,MAAO,QAAS,QAClC3E,UAAW,gBAAG0F,EAAG,EAAHA,IAAKC,EAAK,EAALA,MAAOC,EAAI,EAAJA,KAAI,IAAEX,MAAOY,OAAO,IAAG,IAAC,QAAO,QACrDT,GAAQpF,UAAU0F,GAClB,KACAN,GAAQpF,UAAU2F,GAClB,KACAP,GAAQpF,UAAU4F,GAClB,MACAE,EAAAA,GAAAA,IAASb,GAAAA,GAAAA,UAAgBY,IACzB,GAAG,GCcX,IAAME,GAAM,CACRP,KAAMtB,GAAc,KACpBuB,MA9BJ,SAAkB9O,GACd,IAAIqP,EAAI,GACJ1E,EAAI,GACJxK,EAAI,GACJD,EAAI,GAiBR,OAhBIF,EAAE6C,OAAS,GACXwM,EAAIrP,EAAEsP,OAAO,EAAG,GAChB3E,EAAI3K,EAAEsP,OAAO,EAAG,GAChBnP,EAAIH,EAAEsP,OAAO,EAAG,GAChBpP,EAAIF,EAAEsP,OAAO,EAAG,KAGhBD,EAAIrP,EAAEsP,OAAO,EAAG,GAChB3E,EAAI3K,EAAEsP,OAAO,EAAG,GAChBnP,EAAIH,EAAEsP,OAAO,EAAG,GAChBpP,EAAIF,EAAEsP,OAAO,EAAG,GAChBD,GAAKA,EACL1E,GAAKA,EACLxK,GAAKA,EACLD,GAAKA,GAEF,CACH6O,IAAKQ,SAASF,EAAG,IACjBL,MAAOO,SAAS5E,EAAG,IACnBsE,KAAMM,SAASpP,EAAG,IAClBmO,MAAOpO,EAAIqP,SAASrP,EAAG,IAAM,IAAM,EAE3C,EAIImJ,UAAWuF,GAAKvF,W,YC7BdmG,GAAO,CACTX,KAAMtB,GAAc,MAAO,OAC3BuB,MAAOd,GAAW,MAAO,aAAc,aACvC3E,UAAW,YAAwD,IAArDoG,EAAG,EAAHA,IAAKC,EAAU,EAAVA,WAAYC,EAAS,EAATA,UAAS,IAAErB,MAAOY,OAAO,IAAG,IAAC,EACxD,MAAQ,QACJ9O,KAAKuO,MAAMc,GACX,KACAG,GAAAA,GAAAA,WAAkBT,EAAAA,GAAAA,IAASO,IAC3B,KACAE,GAAAA,GAAAA,WAAkBT,EAAAA,GAAAA,IAASQ,IAC3B,MACAR,EAAAA,GAAAA,IAASb,GAAAA,GAAAA,UAAgBY,IACzB,GACR,GClBJ,SAASW,GAASC,EAAGC,EAAGrD,GAKpB,OAJIA,EAAI,IACJA,GAAK,GACLA,EAAI,IACJA,GAAK,GACLA,EAAI,EAAI,EACDoD,EAAc,GAATC,EAAID,GAASpD,EACzBA,EAAI,GACGqD,EACPrD,EAAI,EAAI,EACDoD,GAAKC,EAAID,IAAM,EAAI,EAAIpD,GAAK,EAChCoD,CACX,CACA,SAASE,GAAW,GAAuC,IAArCP,EAAG,EAAHA,IAAKC,EAAU,EAAVA,WAAYC,EAAS,EAATA,UAAWrB,EAAK,EAALA,MAC9CmB,GAAO,IAEPE,GAAa,IACb,IAAIZ,EAAM,EACNC,EAAQ,EACRC,EAAO,EACX,GALAS,GAAc,IAQT,CACD,IAAMK,EAAIJ,EAAY,GAChBA,GAAa,EAAID,GACjBC,EAAYD,EAAaC,EAAYD,EACrCI,EAAI,EAAIH,EAAYI,EAC1BhB,EAAMc,GAASC,EAAGC,EAAGN,EAAM,EAAI,GAC/BT,EAAQa,GAASC,EAAGC,EAAGN,GACvBR,EAAOY,GAASC,EAAGC,EAAGN,EAAM,EAAI,EACpC,MAVIV,EAAMC,EAAQC,EAAOU,EAWzB,MAAO,CACHZ,IAAK3O,KAAKuO,MAAY,IAANI,GAChBC,MAAO5O,KAAKuO,MAAc,IAARK,GAClBC,KAAM7O,KAAKuO,MAAa,IAAPM,GACjBX,MAAAA,EAER,CCjCA,IAAM2B,GAAiB,SAACvL,EAAMC,EAAI3E,GAC9B,IAAMkQ,EAAWxL,EAAOA,EAClByL,EAASxL,EAAKA,EACpB,OAAOvE,KAAKO,KAAKP,KAAK6E,IAAI,EAAGjF,GAAKmQ,EAASD,GAAYA,GAC3D,EACME,GAAa,CAAChB,GAAKR,GAAMY,IACzBa,GAAe,SAACrQ,GAAC,OAAKoQ,GAAWE,MAAK,SAAC9C,GAAI,OAAKA,EAAKqB,KAAK7O,EAAE,GAAC,EAC7DuQ,GAAgB,SAACC,GAAK,iBAASA,EAAK,yEACpCC,GAAW,SAAC/L,EAAMC,GACpB,IAAI+L,EAAgBL,GAAa3L,GAC7BiM,EAAcN,GAAa1L,GACJ4L,GAAc7L,GAChB6L,GAAc5L,GACvC,IAAIiM,EAAYF,EAAc5B,MAAMpK,GAChCmM,EAAUF,EAAY7B,MAAMnK,GAC5B+L,IAAkBlB,KAClBoB,EAAYZ,GAAWY,GACvBF,EAAgB9B,IAEhB+B,IAAgBnB,KAChBqB,EAAUb,GAAWa,GACrBF,EAAc/B,IAElB,IAAMkC,EAAUjF,OAAOC,OAAO,CAAC,EAAG8E,GAClC,OAAO,SAAC5Q,GACJ,IAAK,IAAM8I,KAAOgI,EACF,UAARhI,IACAgI,EAAQhI,GAAOmH,GAAeW,EAAU9H,GAAM+H,EAAQ/H,GAAM9I,IAIpE,OADA8Q,EAAQxC,MAAQ7J,EAAImM,EAAUtC,MAAOuC,EAAQvC,MAAOtO,GAC7C0Q,EAAcrH,UAAUyH,EACnC,CACJ,ECjCMN,GAAQ,CACV3B,KAAM,SAAC7O,GAAC,OAAK4O,GAAKC,KAAK7O,IAAMoP,GAAIP,KAAK7O,IAAMwP,GAAKX,KAAK7O,EAAE,EACxD8O,MAAO,SAAC9O,GACJ,OAAI4O,GAAKC,KAAK7O,GACH4O,GAAKE,MAAM9O,GAEbwP,GAAKX,KAAK7O,GACRwP,GAAKV,MAAM9O,GAGXoP,GAAIN,MAAM9O,EAEzB,EACAqJ,UAAW,SAACrJ,GACR,OAAO2N,EAAAA,GAAAA,IAAS3N,GACVA,EACAA,EAAEH,eAAe,OACb+O,GAAKvF,UAAUrJ,GACfwP,GAAKnG,UAAUrJ,EAC7B,GCpBE+Q,GAAa,OACbC,GAAc,OAOpB,SAASC,GAAQjR,GACI,kBAANA,IACPA,EAAI,GAAH,OAAMA,IACX,IAAMgI,EAAS,GACXkJ,EAAY,EACVC,EAASnR,EAAEoO,MAAMgD,GAAAA,IACnBD,IACAD,EAAYC,EAAOtO,OACnB7C,EAAIA,EAAEqR,QAAQD,GAAAA,GAAYL,IAC1B/I,EAAO/F,KAAI,MAAX+F,GAAM,QAASmJ,EAAOG,IAAId,GAAM1B,UAEpC,IAAMyC,EAAUvR,EAAEoO,MAAMC,GAAAA,IAKxB,OAJIkD,IACAvR,EAAIA,EAAEqR,QAAQhD,GAAAA,GAAY2C,IAC1BhJ,EAAO/F,KAAI,MAAX+F,GAAM,QAASuJ,EAAQD,IAAI5C,GAAAA,GAAAA,UAExB,CAAE1G,OAAAA,EAAQkJ,UAAAA,EAAWM,UAAWxR,EAC3C,CACA,SAAS8O,GAAM9O,GACX,OAAOiR,GAAQjR,GAAGgI,MACtB,CACA,SAASyJ,GAAkBzR,GACvB,MAAyCiR,GAAQjR,GAAzCgI,EAAM,EAANA,OAAQkJ,EAAS,EAATA,UAAWM,EAAS,EAATA,UACrBE,EAAY1J,EAAOnF,OACzB,OAAO,SAAC7C,GAEJ,IADA,IAAI2R,EAASH,EACJ/N,EAAI,EAAGA,EAAIiO,EAAWjO,IAC3BkO,EAASA,EAAON,QAAQ5N,EAAIyN,EAAYH,GAAaC,GAAavN,EAAIyN,EAAYV,GAAMnH,UAAUrJ,EAAEyD,KAAM0L,EAAAA,GAAAA,IAASnP,EAAEyD,KAEzH,OAAOkO,CACX,CACJ,CACA,IAAMC,GAAuB,SAAC5R,GAAC,MAAkB,kBAANA,EAAiB,EAAIA,CAAC,EAMjE,IAAM6R,GAAU,CAAEhD,KA5ClB,SAAc7O,GACV,IAAImH,EAAI2K,EAAIC,EAAIC,EAChB,OAAQrM,MAAM3F,KACV2N,EAAAA,GAAAA,IAAS3N,KAC6E,QAApF8R,EAAoC,QAA9B3K,EAAKnH,EAAEoO,MAAMC,GAAAA,WAAgC,IAAPlH,OAAgB,EAASA,EAAGtE,cAA2B,IAAPiP,EAAgBA,EAAK,IAA2F,QAApFE,EAAoC,QAA9BD,EAAK/R,EAAEoO,MAAMgD,GAAAA,WAAgC,IAAPW,OAAgB,EAASA,EAAGlP,cAA2B,IAAPmP,EAAgBA,EAAK,GAAK,CACxP,EAuCwBlD,MAAAA,GAAO2C,kBAAAA,GAAmBQ,kBALlD,SAA2BjS,GACvB,IAAMkS,EAASpD,GAAM9O,GAErB,OADoByR,GAAkBzR,EAC/BmS,CAAYD,EAAOZ,IAAIM,IAClC,GC1CA,SAASQ,GAAS5M,EAAQ1H,GACtB,OAAIiC,EAAMyF,GACC,SAACxF,GAAC,OAAKyE,EAAIe,EAAQ1H,EAAQkC,EAAE,EAE/BwQ,GAAM3B,KAAKrJ,GACTiL,GAASjL,EAAQ1H,GAGjBuU,GAAW7M,EAAQ1H,EAElC,CACA,IAAMwU,GAAW,SAAC5N,EAAMC,GACpB,IAAMgN,GAAS,QAAIjN,GACbgN,EAAYC,EAAO9O,OACnB0P,EAAa7N,EAAK4M,KAAI,SAACkB,EAAU/O,GAAC,OAAK2O,GAASI,EAAU7N,EAAGlB,GAAG,IACtE,OAAO,SAACzD,GACJ,IAAK,IAAIyD,EAAI,EAAGA,EAAIiO,EAAWjO,IAC3BkO,EAAOlO,GAAK8O,EAAW9O,GAAGzD,GAE9B,OAAO2R,CACX,CACJ,EACMc,GAAY,SAACjN,EAAQ1H,GACvB,IAAM6T,EAAS9F,OAAOC,OAAOD,OAAOC,OAAO,CAAC,EAAGtG,GAAS1H,GAClDyU,EAAa,CAAC,EACpB,IAAK,IAAMzJ,KAAO6I,OACMpL,IAAhBf,EAAOsD,SAAsCvC,IAAhBzI,EAAOgL,KACpCyJ,EAAWzJ,GAAOsJ,GAAS5M,EAAOsD,GAAMhL,EAAOgL,KAGvD,OAAO,SAAC9I,GACJ,IAAK,IAAM8I,KAAOyJ,EACdZ,EAAO7I,GAAOyJ,EAAWzJ,GAAK9I,GAElC,OAAO2R,CACX,CACJ,EACA,SAASV,GAAQpM,GAMb,IALA,IAAMqN,EAASL,GAAQ/C,MAAMjK,GACvB6M,EAAYQ,EAAOrP,OACrB6P,EAAa,EACbC,EAAS,EACTC,EAAS,EACJnP,EAAI,EAAGA,EAAIiO,EAAWjO,IACvBiP,GAAmC,kBAAdR,EAAOzO,GAC5BiP,SAGsBnM,IAAlB2L,EAAOzO,GAAGgM,IACVmD,IAGAD,IAIZ,MAAO,CAAET,OAAAA,EAAQQ,WAAAA,EAAYC,OAAAA,EAAQC,OAAAA,EACzC,CACA,IAAMP,GAAa,SAAC7M,EAAQ1H,GACxB,IAAM+U,EAAWhB,GAAQJ,kBAAkB3T,GACrCgV,EAAc7B,GAAQzL,GACtBuN,EAAc9B,GAAQnT,GAI5B,OAHuBgV,EAAYF,SAAWG,EAAYH,QACtDE,EAAYH,SAAWI,EAAYJ,QACnCG,EAAYJ,YAAcK,EAAYL,WAE/B5R,EAAKwR,GAASQ,EAAYZ,OAAQa,EAAYb,QAASW,IAGhD,mBAAF,OAAqBrN,EAAM,kBAAU1H,EAAM,4KAChD,SAACgS,GAAC,gBAAQA,EAAI,EAAIhS,EAAS0H,EAAM,EAEhD,ECtEMwN,GAAY,SAACtO,EAAMC,GAAE,OAAK,SAACmL,GAAC,OAAKrL,EAAIC,EAAMC,EAAImL,EAAE,GAoBvD,SAASmD,GAAatB,EAAQuB,EAAMC,GAIhC,IAHA,IApBwBnT,EAoBlBoT,EAAS,GACTC,EAAeF,IApBJ,kBADOnT,EAqB+B2R,EAAO,IAnBnDqB,GAEW,kBAANhT,EACRwQ,GAAM3B,KAAK7O,GACJyQ,GAGA4B,GAGNiB,MAAMC,QAAQvT,GACZsS,GAEW,kBAANtS,EACLyS,QADN,GAOCe,EAAY7B,EAAO9O,OAAS,EACzBY,EAAI,EAAGA,EAAI+P,EAAW/P,IAAK,CAChC,IAAIgQ,EAAQJ,EAAa1B,EAAOlO,GAAIkO,EAAOlO,EAAI,IAC/C,GAAIyP,EAAM,CACN,IAAMQ,EAAiBJ,MAAMC,QAAQL,GAAQA,EAAKzP,GAAKyP,EACvDO,EAAQ3S,EAAK4S,EAAgBD,EACjC,CACAL,EAAOnR,KAAKwR,EAChB,CACA,OAAOL,CACX,CACA,SAASO,GAAgB,EAAD,GAAsB,oBAApBjP,EAAI,KAAEC,EAAE,KAAI8O,GAAJ,aAAS,GACvC,OAAO,SAACzT,GAAC,OAAKyT,EAAM7O,EAASF,EAAMC,EAAI3E,GAAG,CAC9C,CACA,SAAS4T,GAAgBC,EAAOT,GAC5B,IAAMU,EAAcD,EAAMhR,OACpBkR,EAAiBD,EAAc,EACrC,OAAO,SAAC9T,GACJ,IAAIgU,EAAa,EACbC,GAAkB,EAQtB,GAPIjU,GAAK6T,EAAM,GACXI,GAAkB,EAEbjU,GAAK6T,EAAME,KAChBC,EAAaD,EAAiB,EAC9BE,GAAkB,IAEjBA,EAAiB,CAElB,IADA,IAAIxQ,EAAI,EACDA,EAAIqQ,KACHD,EAAMpQ,GAAKzD,GAAKyD,IAAMsQ,GADNtQ,KAKxBuQ,EAAavQ,EAAI,CACrB,CACA,IAAMyQ,EAAkBtP,EAASiP,EAAMG,GAAaH,EAAMG,EAAa,GAAIhU,GAC3E,OAAOoT,EAAOY,GAAYE,EAC9B,CACJ,CACA,SAASC,GAAYN,EAAOlC,GAAqD,6DAAJ,CAAC,EAAC,IAAzC5M,MAAOqP,OAAO,IAAG,GAAI,EAAElB,EAAI,EAAJA,KAAMO,EAAK,EAALA,MACzDK,EAAcD,EAAMhR,OACA8O,EAAO9O,QACtBqQ,IAASI,MAAMC,QAAQL,IAASA,EAAKrQ,OAC5CgR,EAAM,GAAKA,EAAMC,EAAc,KAC/BD,EAAQ,GAAGQ,OAAOR,GAClBlC,EAAS,GAAG0C,OAAO1C,GACnBkC,EAAMS,UACN3C,EAAO2C,WAEX,IAAMlB,EAASH,GAAatB,EAAQuB,EAAMO,GACpCc,EAA+B,IAAhBT,EACfH,GAAgBE,EAAOT,GACvBQ,GAAgBC,EAAOT,GAC7B,OAAOgB,EACD,SAACpU,GAAC,OAAKuU,EAAaxP,EAAM8O,EAAM,GAAIA,EAAMC,EAAc,GAAI9T,GAAG,EAC/DuU,CACV,CCzFA,IAEsBC,GAFhBC,GAAgB,SAAAC,GAAM,OAAI,SAAA5E,GAAC,OAAI,EAAI4E,EAAO,EAAI5E,EAAE,GAChD6E,GAAe,SAAAD,GAAM,OAAI,SAAA5E,GAAC,OAAIA,GAAK,GAAM4E,EAAO,EAAI5E,GAAK,GAAK,EAAI4E,EAAO,GAAK,EAAI5E,KAAO,CAAC,GAE1F8E,GAAe,SAACJ,GAAK,OAAK,SAAA1E,GAAC,OAAIA,EAAIA,IAAM0E,EAAQ,GAAK1E,EAAI0E,EAAM,GCGhEK,GAAS,SAAA/E,GAAC,OAAIA,CAAC,EACfgF,IDLgBN,GCKM,EDLI,SAAA1E,GAAC,OAAI1P,KAAKQ,IAAIkP,EAAG0E,GAAM,GCMjDO,GAAUN,GAAcK,IACxBE,GAAYL,GAAaG,IACzBG,GAAS,SAAAnF,GAAC,OAAI,EAAI1P,KAAKuM,IAAIvM,KAAK8U,KAAKpF,GAAG,EACxCqF,GAAUV,GAAcQ,IACxBG,GAAYT,GAAaQ,IACzBE,GAAST,GAXoB,OAY7BU,GAAUb,GAAcY,IACxBE,GAAYZ,GAAaU,IACzBG,GDZmB,SAAChB,GACtB,IAAMiB,EAAab,GAAaJ,GAChC,OAAO,SAAA1E,GAAC,OAAKA,GAAK,GAAK,EACjB,GAAM2F,EAAW3F,GACjB,IAAO,EAAI1P,KAAKQ,IAAI,GAAI,IAAMkP,EAAI,IAAI,CAChD,CCOmB4F,CAdgB,OAkB7BC,GAAY,SAAC7F,GACf,GAAU,IAANA,GAAiB,IAANA,EACX,OAAOA,EACX,IAAM8F,EAAK9F,EAAIA,EACf,OAAOA,EArBoB,mBAsBrB,OAAS8F,EACT9F,EAtBsB,kBAuBlB,MAAQ8F,EAAK,IAAM9F,EAAI,IACvBA,EAvBiB,GAYpB,mBAYY8F,EAXZ,kBAWsB9F,EAVtB,kBAWO,KAAOA,EAAIA,EAAI,MAAQA,EAAI,KAC7C,EACM+F,GAAWpB,GAAckB,IC7B/B,SAASG,GAAc9N,EAAQ0M,GAC3B,OAAO1M,EAAOsJ,KAAI,kBAAMoD,GAAUM,EAAS,IAAEe,OAAO,EAAG/N,EAAOnF,OAAS,EAC3E,CAQA,SAASmT,GAAU,GAAqD,QAAnDtR,KAAAA,OAAI,IAAG,IAAC,MAAEC,GAAAA,OAAE,IAAG,IAAC,EAAEuO,EAAI,EAAJA,KAAMpR,EAAM,EAANA,OAAM,IAAEkI,SAAAA,OAAQ,IAAG,MAAG,EACzD0B,EAAQ,CAAEC,MAAM,EAAO9G,MAAOH,GAC9BsD,EAASsL,MAAMC,QAAQ5O,GAAMA,EAAK,CAACD,EAAMC,GACzCsR,EANV,SAA8BnU,EAAQkI,GAClC,OAAOlI,EAAOwP,KAAI,SAAC4E,GAAC,OAAKA,EAAIlM,CAAQ,GACzC,CAIkBmM,CAAqBrU,GAAUA,EAAOe,SAAWmF,EAAOnF,OAChEf,EAXV,SAAuBkG,GACnB,IAAM0J,EAAY1J,EAAOnF,OACzB,OAAOmF,EAAOsJ,KAAI,SAAC8E,EAAQ3S,GAAC,OAAW,IAANA,EAAUA,GAAKiO,EAAY,GAAK,CAAC,GACtE,CASU2E,CAAcrO,GAASgC,GAC7B,SAASsM,IACL,OAAOnC,GAAY8B,EAAOjO,EAAQ,CAC9BkL,KAAMI,MAAMC,QAAQL,GAAQA,EAAO4C,GAAc9N,EAAQkL,IAEjE,CACA,IAAIqB,EAAe+B,IACnB,MAAO,CACHrJ,KAAM,SAACP,GAGH,OAFAhB,EAAM7G,MAAQ0P,EAAa7H,GAC3BhB,EAAMC,KAAOe,GAAK1C,EACX0B,CACX,EACA0B,WAAY,WACRpF,EAAOsM,UACPC,EAAe+B,GACnB,EAER,CChCA,IAAMC,GAAQ,CAAEP,UAAAA,GAAW1K,OAAAA,GAAQkL,MCJnC,SAAe,GAA6F,QAA3FlT,SAAAA,OAAQ,IAAG,IAAC,MAAEoB,KAAAA,OAAI,IAAG,IAAC,MAAE8P,MAAAA,OAAK,IAAG,KAAG,MAAEiC,aAAAA,OAAY,IAAG,MAAG,MAAEjL,UAAAA,OAAS,IAAG,KAAG,EAAEkL,EAAY,EAAZA,aACjFhL,EAAQ,CAAEC,MAAM,EAAO9G,MAAOH,GAChCiS,EAAYnC,EAAQlR,EAClBsT,EAAQlS,EAAOiS,EACf7Y,OAA0ByI,IAAjBmQ,EAA6BE,EAAQF,EAAaE,GAGjE,OAFI9Y,IAAW8Y,IACXD,EAAY7Y,EAAS4G,GAClB,CACHuI,KAAM,SAACP,GACH,IAAMvJ,GAASwT,EAAYvW,KAAKoK,KAAKkC,EAAI+J,GAGzC,OAFA/K,EAAMC,OAASxI,EAAQqI,GAAarI,GAASqI,GAC7CE,EAAM7G,MAAQ6G,EAAMC,KAAO7N,EAASA,EAASqF,EACtCuI,CACX,EACA0B,WAAY,WAAQ,EAE5B,GChBA,SAASyJ,GAAYC,EAAS9M,GAAqB,IAAX+M,EAAQ,UAAH,6CAAG,EAC5C,OAAOD,EAAU9M,EAAW+M,CAChC,CCIA,IAAMC,GAAY,SAACC,GACf,IAAMC,EAAgB,SAAH,OAAM/T,EAAK,EAALA,MAAK,OAAO8T,EAAO9T,EAAM,EAClD,MAAO,CACHgU,MAAO,kBAAM3U,EAAAA,GAAAA,OAAY0U,GAAe,EAAK,EAC7CE,KAAM,kBAAMnU,EAAAA,GAAAA,OAAkBiU,EAAc,EAEpD,EACA,SAASG,GAAQlQ,GACb,IAAI2K,EAAIC,EAGJuF,EAGAC,EAGAC,EARE9S,EAAwKyC,EAAxKzC,KAAI,EAAoKyC,EAAlKsQ,SAAAA,OAAQ,IAAG,GAAI,IAAmJtQ,EAAjJuQ,OAAAA,OAAM,IAAG,EAAAV,GAAS,IAA+H7P,EAA7H2P,QAAAA,OAAO,IAAG,IAAC,IAAkH3P,EAAhHwQ,OAAQC,OAAS,IAAG,IAAC,IAA2FzQ,EAAzF0Q,WAAAA,OAAU,IAAG,SAAM,IAAsE1Q,EAApE2Q,YAAAA,OAAW,IAAG,IAAC,EAAEC,EAAmD5Q,EAAnD4Q,OAAQC,EAA2C7Q,EAA3C6Q,OAAQC,EAAmC9Q,EAAnC8Q,WAAYC,EAAuB/Q,EAAvB+Q,SAAUC,EAAahR,EAAbgR,SAAiBna,GAAUyN,EAAAA,GAAAA,IAAOtE,EAAI,CAAC,OAAQ,WAAY,SAAU,UAAW,SAAU,aAAc,cAAe,SAAU,SAAU,aAAc,WAAY,aAChUxC,EAAO3G,EAAP2G,GAEFyT,EAAc,EACdC,EAAmBra,EAAQgM,SAE3BsO,GAAa,EACbC,GAAoB,EAElBC,EHnBV,SAAoCC,GAChC,GAAInF,MAAMC,QAAQkF,EAAO9T,IACrB,OAAOqR,GAEN,GAAIO,GAAMkC,EAAOjL,MAClB,OAAO+I,GAAMkC,EAAOjL,MAExB,IAAMpC,EAAO,IAAIsN,IAAI7M,OAAOT,KAAKqN,IACjC,OAAIrN,EAAKuN,IAAI,SACRvN,EAAKuN,IAAI,cAAgBvN,EAAKuN,IAAI,gBAC5B3C,GAEF5K,EAAKuN,IAAI,iBACdvN,EAAKuN,IAAI,cACTvN,EAAKuN,IAAI,SACTvN,EAAKuN,IAAI,YACTvN,EAAKuN,IAAI,cACTvN,EAAKuN,IAAI,aACFrN,GAEJ0K,EACX,CGFqB4C,CAA2B5a,IACM,QAA7C+T,GAAMD,EAAK0G,GAAUnL,0BAAuC,IAAP0E,OAAgB,EAASA,EAAGhE,KAAK+D,EAAIpN,EAAMC,MACjG6S,EAAwBrD,GAAY,CAAC,EAAG,KAAM,CAACzP,EAAMC,GAAK,CACtDI,OAAO,IAEXL,EAAO,EACPC,EAAK,KAET,IAAMkU,EAAYL,EAAS3M,OAAOC,OAAOD,OAAOC,OAAO,CAAC,EAAG9N,GAAU,CAAE0G,KAAAA,EAAMC,GAAAA,KAC7E,SAASgT,IACLS,IACmB,YAAfP,EAEAf,EDlCZ,SAAwBA,EAAS9M,GAA+C,IAArC+M,EAAQ,UAAH,6CAAG,EAC/C,OADsE,UAAH,+CAG7D/M,GAAY8M,EAAU9M,GAAY+M,EADlCF,GAAY7M,GAAY8M,EAAS9M,EAAU+M,EAErD,CC8BsB+B,CAAehC,EAASuB,EAAkBP,EADpDS,EAAoBH,EAAc,IAAM,IAIxCtB,EAAUD,GAAYC,EAASuB,EAAkBP,GAC9B,WAAfD,GACAgB,EAAUzL,cAElBkL,GAAa,EACbJ,GAAYA,GAChB,CAKA,SAASjB,EAAO9T,GAIZ,GAHKoV,IACDpV,GAASA,GACb2T,GAAW3T,GACNmV,EAAY,CACb,IAAM5M,EAAQmN,EAAU5L,KAAK7M,KAAK6E,IAAI,EAAG6R,IACzCS,EAAS7L,EAAM7G,MACX2S,IACAD,EAASC,EAAsBD,IACnCe,EAAaC,EAAoB7M,EAAMC,KAAOmL,GAAW,CAC7D,CACa,OAAbqB,QAAkC,IAAbA,GAA+BA,EAASZ,GACzDe,IACoB,IAAhBF,IACqB,OAArBC,QAAkD,IAArBA,IAAkDA,EAAmBvB,IAClGsB,EAAcR,ED1D9B,SAA+Bd,EAAS9M,EAAU+M,EAAOwB,GACrD,OAAOA,EAAoBzB,GAAW9M,EAAW+M,EAAQD,IAAYC,CACzE,CCyDgBgC,CAAsBjC,EAASuB,EAAkBP,EAAaS,IAAsBZ,KAnB5FL,EAAeF,OACfa,GAAcA,KAwBlB,CAOA,OADAR,IAJe,OAAXM,QAA8B,IAAXA,GAA6BA,KAChDT,EAAiBI,EAAOT,IACTE,SAGZ,CACHC,KAAM,WACS,OAAXY,QAA8B,IAAXA,GAA6BA,IAChDV,EAAeF,MACnB,EAER,C,eCpFA,IAAMlX,GAAI,SAAC8Y,EAAIC,GAAE,OAAK,EAAM,EAAMA,EAAK,EAAMD,CAAE,EACzC7Y,GAAI,SAAC6Y,EAAIC,GAAE,OAAK,EAAMA,EAAK,EAAMD,CAAE,EACnCzO,GAAI,SAACyO,GAAE,OAAK,EAAMA,CAAE,EACpBE,GAAa,SAACxM,EAAGsM,EAAIC,GAAE,QAAO/Y,GAAE8Y,EAAIC,GAAMvM,EAAIvM,GAAE6Y,EAAIC,IAAOvM,EAAInC,GAAEyO,IAAOtM,CAAC,EACzEyM,GAAW,SAACzM,EAAGsM,EAAIC,GAAE,OAAK,EAAM/Y,GAAE8Y,EAAIC,GAAMvM,EAAIA,EAAI,EAAMvM,GAAE6Y,EAAIC,GAAMvM,EAAInC,GAAEyO,EAAG,EAiCrF,IACMI,GAAkB,GACxB,SAASC,GAAYC,EAAKC,EAAKC,EAAKC,GAChC,GAAIH,IAAQC,GAAOC,IAAQC,EACvB,OAAO5E,GAEX,IADA,IAAM6E,EAAe,IAAIC,aALJ,IAMZlW,EAAI,EAAGA,EANK,KAMmBA,EACpCiW,EAAajW,GAAKyV,GAAWzV,EAAI2V,GAAiBE,EAAKE,GAE3D,SAASI,EAASC,GAId,IAHA,IAAIC,EAAgB,EAChBC,EAAgB,EACDC,KACZD,GAAgCL,EAAaK,IAAkBF,IAAME,EACxED,GAAiBV,KAEnBW,EACF,IAEME,EAAYH,GAFJD,EAAKH,EAAaK,KAC3BL,EAAaK,EAAgB,GAAKL,EAAaK,IACXX,GACnCc,EAAef,GAASc,EAAWX,EAAKE,GAC9C,OAAIU,GAjCW,KACvB,SAA8BL,EAAIM,EAASb,EAAKE,GAC5C,IAAK,IAAI/V,EAAI,EAAGA,EAHK,IAGmBA,EAAG,CACvC,IAAM2W,EAAejB,GAASgB,EAASb,EAAKE,GAC5C,GAAqB,IAAjBY,EACA,OAAOD,EAGXA,IADiBjB,GAAWiB,EAASb,EAAKE,GAAOK,GAC3BO,CAC1B,CACA,OAAOD,CACX,CAuBmBE,CAAqBR,EAAII,EAAWX,EAAKE,GAE1B,IAAjBU,EACED,EAvDnB,SAAyBJ,EAAIS,EAAIC,EAAIjB,EAAKE,GACtC,IAAIgB,EACAC,EACAhX,EAAI,EACR,IAEI+W,EAAWtB,GADXuB,EAAWH,GAAMC,EAAKD,GAAM,EACIhB,EAAKE,GAAOK,GAC7B,EACXU,EAAKE,EAGLH,EAAKG,QAEJra,KAAKC,IAAIma,GAfO,QAgBnB/W,EAfuB,IAgB7B,OAAOgX,CACX,CA0CmBC,CAAgBb,EAAIC,EAAeA,EAAgBV,GAAiBE,EAAKE,EAExF,CACA,OAAO,SAAC9M,GAAC,OAAW,IAANA,GAAiB,IAANA,EAAUA,EAAIwM,GAAWU,EAASlN,GAAI6M,EAAKE,EAAI,CAC5E,CCpEA,IAAMkB,GAAe,CACjB9F,OAAAA,GACAC,OAAAA,GACAE,UAAAA,GACAD,QAAAA,GACAE,OAAAA,GACAG,UAAAA,GACAD,QAAAA,GACAE,OAAAA,GACAE,UAAAA,GACAD,QAAAA,GACAE,WAAAA,GACAK,SAAAA,GACA+E,YPiBgB,SAAC9K,GAAC,OAAKA,EAAI,GACzB,IAAO,EAAM6F,GAAU,EAAU,EAAJ7F,IAC7B,GAAM6F,GAAc,EAAJ7F,EAAU,GAAO,EAAG,EOlBtC6F,UAAAA,IAEEkF,GAA6B,SAACC,GAChC,GAAIxH,MAAMC,QAAQuH,GAAa,CAEjBA,EAAWjY,OACrB,eAAyBiY,EAAU,GACnC,OAAOzB,GADE,KAAI,KAAI,KAAI,KAEzB,CACK,MAA0B,kBAAfyB,GAEsC,wBAAF,OAA0BA,EAAU,KAC7EH,GAAaG,IAEjBA,CACX,ECrBMC,GAAe,SAACjS,EAAKjE,GAEvB,MAAY,WAARiE,MAKiB,kBAAVjE,IAAsByO,MAAMC,QAAQ1O,OAE1B,kBAAVA,IACPgN,GAAQhD,KAAKhK,IACZA,EAAMgJ,WAAW,SAK1B,E,YCzBMmN,GAAoB,WAAH,MAAU,CAC7BxN,KAAM,SACNzC,UAAW,IACXC,QAAS,GACTO,UAAW,GACd,EACK0P,GAAyB,SAACtW,GAAE,MAAM,CACpC6I,KAAM,SACNzC,UAAW,IACXC,QAAgB,IAAPrG,EAAW,EAAIvE,KAAKO,KAAK,KAAO,GACzC4K,UAAW,GACd,EACK2P,GAAc,WAAH,MAAU,CACvB1N,KAAM,YACN0F,KAAM,SACNlJ,SAAU,GACb,EACKgM,GAAY,SAAChO,GAAM,MAAM,CAC3BwF,KAAM,YACNxD,SAAU,GACVhC,OAAAA,EACH,EACKmT,GAAqB,CACvBhe,EAAG6d,GACH5d,EAAG4d,GACHta,EAAGsa,GACH9S,OAAQ8S,GACR7S,QAAS6S,GACT5S,QAAS4S,GACTI,QAASJ,GACTnT,OAAQoT,GACRnT,OAAQmT,GACRvV,MAAOuV,GACPI,QAASH,GACTI,gBAAiBJ,GACjB1K,MAAO0K,GACPK,QAASN,ICnCPO,GAAc,IAAI9C,IAAI,CAAC,aAAc,WAAY,WAAY,YACnE,SAAS+C,GAAmBzb,GACxB,MAAoBA,EAAE0b,MAAM,GAAI,GAAGC,MAAM,KAAI,gBAAxCvc,EAAI,KAAEyF,EAAK,KAChB,GAAa,gBAATzF,EACA,OAAOY,EACX,MAAiB6E,EAAMuJ,MAAMC,GAAAA,KAAe,GAArCK,GAAuC,aAAjC,GACb,IAAKA,EACD,OAAO1O,EACX,IAAM4b,EAAO/W,EAAMwM,QAAQ3C,EAAQ,IAC/BmN,EAAeL,GAAY7C,IAAIvZ,GAAQ,EAAI,EAG/C,OAFIsP,IAAW7J,IACXgX,GAAgB,KACbzc,EAAO,IAAMyc,EAAeD,EAAO,GAC9C,CACA,IAAME,GAAgB,oBAChBC,GAASlQ,OAAOC,OAAOD,OAAOC,OAAO,CAAC,EAAG+F,IAAU,CAAEI,kBAAmB,SAACjS,GACvE,IAAMgc,EAAYhc,EAAEoO,MAAM0N,IAC1B,OAAOE,EAAYA,EAAU1K,IAAImK,IAAoBQ,KAAK,KAAOjc,CACrE,I,YCfEkc,IAAoB,kBACnBC,GAAAA,GAAgB,IAEnB3L,MAAAA,GACA8K,gBAAiB9K,GACjB4L,aAAc5L,GACd6L,KAAM7L,GACN8L,OAAQ9L,GAER+L,YAAa/L,GACbgM,eAAgBhM,GAChBiM,iBAAkBjM,GAClBkM,kBAAmBlM,GACnBmM,gBAAiBnM,GACjBuL,OAAAA,GACAa,aAAcb,KAKZc,GAAsB,SAAC/T,GAAG,OAAKoT,GAAkBpT,EAAI,ECvB3D,SAASmJ,GAAkBnJ,EAAKjE,GAC5B,IAAIsC,EACA2V,EAAmBD,GAAoB/T,GAI3C,OAHIgU,IAAqBf,KACrBe,EAAmBjL,IAE8B,QAA7C1K,EAAK2V,EAAiB7K,yBAAsC,IAAP9K,OAAgB,EAASA,EAAG4G,KAAK+O,EAAkBjY,EACpH,CCVA,IAAMkY,IACO,E,yKCqBb,SAASC,GAAoC,GAAkD,IAAhD9J,EAAI,EAAJA,KAAM+C,EAAK,EAALA,MAAOgH,EAAI,EAAJA,KAAMC,EAAI,EAAJA,KAAMC,EAAI,EAAJA,KAASC,GAAU,cACjFpf,GAAU,UAAKof,GA+CrB,OA9CInH,IACAjY,EAAgB,OAAIiY,GAIpBmH,EAAWpT,WACXhM,EAAkB,SAAIL,EAAsByf,EAAWpT,WACvDoT,EAAWtF,cACX9Z,EAAQ8Z,YAAcna,EAAsByf,EAAWtF,cAIvD5E,IACAlV,EAAc,KPJA,SAACkV,GACnB,OAAOI,MAAMC,QAAQL,IAA4B,kBAAZA,EAAK,EAC9C,COE0BmK,CAAcnK,GAC1BA,EAAK5B,IAAIuJ,IACTA,GAA2B3H,IAKb,UAApBkK,EAAW5P,OACXxP,EAAQwP,KAAO,cAIfyP,GAAQE,GAAQD,MAEM,EAClBD,EACAjf,EAAQ6Z,WAAa,UAEhBsF,EACLnf,EAAQ6Z,WAAa,OAEhBqF,IACLlf,EAAQ6Z,WAAa,UAEzB7Z,EAAQ2Z,OAASwF,GAAQF,GAAQC,GAAQE,EAAWzF,QAOhC,WAApByF,EAAW5P,OACXxP,EAAQwP,KAAO,aACZxP,CACX,CAIA,SAASsf,GAAuBF,EAAYtU,GACxC,IAAI3B,EAAI2K,EAER,OAAiG,QAAzFA,EAAsC,QAAhC3K,GADUoW,GAAmBH,EAAYtU,IAAQ,CAAC,GAC7BiO,aAA0B,IAAP5P,EAAgBA,EAAKiW,EAAWrG,aAA0B,IAAPjF,EAAgBA,EAAK,CAClI,CAQA,SAAS0L,GAA6BJ,EAAYpf,EAAS8K,GAcvD,OAbIwK,MAAMC,QAAQvV,EAAQ2G,UAA+B4B,IAAxB6W,EAAWpT,WACxCoT,EAAWpT,SAAW,IAT9B,SAA0BhM,GAClBsV,MAAMC,QAAQvV,EAAQ2G,KAAyB,OAAlB3G,EAAQ2G,GAAG,KACxC3G,EAAQ2G,IAAK,QAAI3G,EAAQ2G,IACzB3G,EAAQ2G,GAAG,GAAK3G,EAAQ0G,KAGhC,CAKI+Y,CAAiBzf,GA5ErB,SAA6B,GAAM,EAAJ0f,KAAW,EAAL3G,MAAoB,EAAb4G,cAA8B,EAAfC,gBAAiC,EAAhBC,iBAAwB,EAANlG,OAAkB,EAAVE,WAAuB,EAAXC,YAAiB,EAAJpT,KAAuB,IAAd0Y,GAAU,cAC9I,QAASvR,OAAOT,KAAKgS,GAAYva,MACrC,CA8ESib,CAAoBV,KACrBA,GAAa,kBACNA,GLzDc,SAACW,EAAUpZ,GACpC,IAAIqZ,EAQJ,OANIA,GADAC,EAAAA,GAAAA,GAAkBtZ,GACEqR,GAIhBmF,GAAmB4C,IAAa5C,GAAmBI,SAEpD,QAAE5W,GAAAA,GAAOqZ,EAAkBrZ,GACtC,CKgDeuZ,CAAqBpV,EAAK9K,EAAQ2G,OAGtC,kBACA3G,GACAgf,GAAoCI,GAE/C,CAIA,SAASe,GAAarV,EAAKjE,EAAO/G,EAAQsf,EAAYnF,GAClD,IAAMmG,EAAkBb,GAAmBH,EAAYtU,IAAQ,CAAC,EAC5DtD,OAAkCe,IAAzB6X,EAAgB1Z,KAAqB0Z,EAAgB1Z,KAAOG,EAAMwZ,MACzEC,EAAqBvD,GAAajS,EAAKhL,GAC9B,SAAX0H,GAAqB8Y,GAAwC,kBAAXxgB,EAKlD0H,EAASyM,GAAkBnJ,EAAKhL,GAE3BygB,GAAO/Y,IAA6B,kBAAX1H,EAC9B0H,EAASgZ,GAAY1gB,IAEfwV,MAAMC,QAAQzV,IACpBygB,GAAOzgB,IACW,kBAAX0H,IACP1H,EAAS0gB,GAAYhZ,IAEzB,IAAMiZ,EAAqB1D,GAAajS,EAAKtD,GAiC7C,MAhCmD,6BAAF,OAA+BsD,EAAG,kBAAUtD,EAAM,iBAAS1H,EAAM,cAAM0H,EAAM,sEAA8DA,EAAM,qCAA6B1H,EAAM,8BAgC7N2gB,GACHH,IACwB,IAAzBF,EAAgB5Q,KAjCpB,WACI,IAAMxP,EAAU,CACZ0G,KAAMc,EACNb,GAAI7G,EACJwF,SAAUuB,EAAMtB,cAChB0U,WAAAA,EACAE,SAAU,SAACnY,GAAC,OAAK6E,EAAM6Z,IAAI1e,EAAE,GAEjC,MAAgC,YAAzBoe,EAAgB5Q,MACM,UAAzB4Q,EAAgB5Q,KCvI5B,SAAiB,GAAsL,IAC/LmR,EAD+L,IAApLja,KAAAA,OAAI,IAAG,IAAC,MAAEpB,SAAAA,OAAQ,IAAG,IAAC,EAAE0B,EAAG,EAAHA,IAAKC,EAAG,EAAHA,IAAG,IAAEuP,MAAAA,OAAK,IAAG,KAAG,MAAEiC,aAAAA,OAAY,IAAG,MAAG,MAAEmI,gBAAAA,OAAe,IAAG,MAAG,MAAEC,cAAAA,OAAa,IAAG,KAAE,MAAErT,UAAAA,OAAS,IAAG,IAAC,EAAEkL,EAAY,EAAZA,aAAcgB,EAAM,EAANA,OAAQS,EAAQ,EAARA,SAAUF,EAAU,EAAVA,WAAYD,EAAM,EAANA,OAExL,SAAS8G,EAAc9e,GACnB,YAAgBuG,IAARvB,GAAqBhF,EAAIgF,QAAiBuB,IAARtB,GAAqBjF,EAAIiF,CACvE,CACA,SAAS8Z,EAAgB/e,GACrB,YAAYuG,IAARvB,EACOC,OACCsB,IAARtB,GAEG7E,KAAKC,IAAI2E,EAAMhF,GAAKI,KAAKC,IAAI4E,EAAMjF,GAD/BgF,EAC0CC,CACzD,CACA,SAAS+Z,EAAehhB,GACC,OAArB2gB,QAAkD,IAArBA,GAAuCA,EAAiBvH,OACrFuH,EAAmBtH,GAAQxL,OAAOC,OAAOD,OAAOC,OAAO,CAAC,EAAG9N,GAAU,CAAE0Z,OAAAA,EAAQS,SAAU,SAACnY,GAClF,IAAImH,EACS,OAAbgR,QAAkC,IAAbA,GAA+BA,EAASnY,GACjC,QAA3BmH,EAAKnJ,EAAQma,gBAA6B,IAAPhR,GAAyBA,EAAG4G,KAAK/P,EAASgC,EAClF,EAAGiY,WAAAA,EACHD,OAAAA,IACR,CACA,SAASiH,EAAYjhB,GACjBghB,EAAenT,OAAOC,OAAO,CAAE0B,KAAM,SAAUzC,UAAW6T,EAAiB5T,QAAS6T,EAAerT,UAAAA,GAAaxN,GACpH,CACA,GAAI8gB,EAAcpa,GACdua,EAAY,CAAEva,KAAAA,EAAMpB,SAAAA,EAAUqB,GAAIoa,EAAgBra,SAEjD,CACD,IAAI5G,EAAS0W,EAAQlR,EAAWoB,EACJ,qBAAjBgS,IACP5Y,EAAS4Y,EAAa5Y,IAC1B,IAEIohB,EACA1gB,EAHE2gB,EAAWJ,EAAgBjhB,GAC3BshB,EAAUD,IAAana,GAAO,EAAI,EAYxCga,EAAe,CACXxR,KAAM,QACN9I,KAAAA,EACApB,SAAAA,EACAmT,aAAAA,EACAjC,MAAAA,EACAhJ,UAAAA,EACAkL,aAAAA,EACAyB,SAAU2G,EAAchhB,GAjBN,SAACkC,GACnBkf,EAAO1gB,EACPA,EAAUwB,EACVsD,GAAW+b,EAAAA,GAAAA,GAAkBrf,EAAIkf,GAAMld,EAAAA,EAAAA,MAAemB,QACrC,IAAZic,GAAiBpf,EAAImf,IACR,IAAbC,GAAkBpf,EAAImf,IACvBF,EAAY,CAAEva,KAAM1E,EAAG2E,GAAIwa,EAAU7b,SAAAA,GAE7C,OASsDiD,GAE1D,CACA,MAAO,CACH6Q,KAAM,kBAA2B,OAArBuH,QAAkD,IAArBA,OAA8B,EAASA,EAAiBvH,MAAM,EAE/G,CD8EckI,EAAQ,kBAAKthB,GAAYogB,IACzB/G,IAAQ,kBACHmG,GAA6BY,EAAiBpgB,EAAS8K,IAAI,IAC9DqP,SAAU,SAACnY,GACPhC,EAAQma,SAASnY,GACjBoe,EAAgBjG,UAAYiG,EAAgBjG,SAASnY,EACzD,EACAiY,WAAY,WACRja,EAAQia,aACRmG,EAAgBnG,YAAcmG,EAAgBnG,YAClD,IAEZ,EACA,WACI,IAAMsH,GAAcC,EAAAA,GAAAA,GAA6B1hB,GAKjD,OAJA+G,EAAM6Z,IAAIa,GACVtH,IACAmG,EAAgBjG,UAAYiG,EAAgBjG,SAASoH,GACrDnB,EAAgBnG,YAAcmG,EAAgBnG,aACvC,CAAEb,KAAM,WAAQ,EAC3B,CAMJ,CACA,SAASmH,GAAO1Z,GACZ,OAAkB,IAAVA,GACc,kBAAVA,GACkB,IAAtB0J,WAAW1J,KACa,IAAxBA,EAAM4a,QAAQ,IAC1B,CACA,SAASjB,GAAYkB,GACjB,MAAoC,kBAAtBA,EACR,EACAzN,GAAkB,GAAIyN,EAChC,CACA,SAASnC,GAAmBH,EAAYtU,GACpC,OAAOsU,EAAWtU,IAAQsU,EAAoB,SAAKA,CACvD,CAKA,SAAS4B,GAAelW,EAAKjE,EAAO/G,GAAyB,IAAjBsf,EAAa,UAAH,6CAAG,CAAC,EAItD,OAHIL,KACAK,EAAa,CAAE5P,MAAM,IAElB3I,EAAMsS,OAAM,SAACc,GAChB,IAAI0H,EACAC,EACE/G,EAAYsF,GAAarV,EAAKjE,EAAO/G,EAAQsf,EAAYnF,GACzDlB,EAAQuG,GAAuBF,EAAYtU,GAC3CqO,EAAQ,WAAH,OAAUyI,EAAW/G,GAAW,EAO3C,OANI9B,EACA4I,EAAargB,OAAOugB,WAAW1I,EAAOxZ,EAAsBoZ,IAG5DI,IAEG,WACH2I,aAAaH,GACbC,GAAYA,EAASxI,MACzB,CACJ,GACJ,CE5LA,IAAM2I,GAAsB,IAAIC,QAK1BC,GAAyB,WAC3B,WAAYC,IAAe,eAIvB9e,KAAK+e,eAAiB,KACtB/e,KAAKgf,YAAa,EAClBhf,KAAKif,iBAAmB,KACxBjf,KAAKqE,YAAc,CAAEtI,EAAG,EAAGC,EAAG,GAI9BgE,KAAKkf,aAAc,EACnBlf,KAAKmf,uBAAwB,EAI7Bnf,KAAKof,QC7BY,CACrBrjB,EAFsB,CAAE6H,IAAK,EAAGC,IAAK,GAGrC7H,EAHsB,CAAE4H,IAAK,EAAGC,IAAK,ID+BjC7D,KAAK8e,cAAgBA,CACzB,CA8XC,OA9XA,6BACD,SAAMO,GAA4C,oEAAJ,CAAC,EAAC,IAA3BC,aAAAA,OAAY,IAAG,GAAK,EAIrC,IAAqC,IAAjCtf,KAAK8e,cAAcS,UAAvB,CAEA,IAAM5d,EAAiB,SAAC9G,GAGpB,EAAK2kB,gBACDF,GACA,EAAKA,aAAapjB,EAAiBrB,EAAO,QAAQiB,MAE1D,EACMgF,EAAU,SAACjG,EAAOwF,GACpB,IAAI0F,EAEJ,EAA+C,EAAK0Z,WAA5Czc,EAAI,EAAJA,KAAM0c,EAAe,EAAfA,gBAAiBC,EAAW,EAAXA,cAC3B3c,GAAS0c,IACL,EAAKX,gBACL,EAAKA,iBACT,EAAKA,eAAiBhc,EAAcC,GAE/B,EAAK+b,mBAGd,EAAKC,YAAa,EAClB,EAAKC,iBAAmB,KACxB,EAAKW,qBACD,EAAKd,cAAce,aACnB,EAAKf,cAAce,WAAWC,oBAAqB,EACnD,EAAKhB,cAAce,WAAWnjB,YAASyI,GAK3Ca,IAAS,SAACjC,GACN,IAAIgC,EAAI2K,EACJtT,EAAU,EAAK2iB,mBAAmBhc,GAAMkZ,OAAS,EAIrD,GAAIzO,GAAAA,GAAAA,KAAapR,GAAU,CACvB,IAAM4iB,EAA8G,QAA9FtP,EAA8C,QAAxC3K,EAAK,EAAK+Y,cAAce,kBAA+B,IAAP9Z,OAAgB,EAASA,EAAGf,cAA2B,IAAP0L,OAAgB,EAASA,EAAGuP,OAAOlc,GAC/J,GAAIic,EAEA5iB,EADe0G,EAAWkc,IACN7S,WAAW/P,GAAW,IAElD,CACA,EAAKiH,YAAYN,GAAQ3G,CAC7B,IAEgB,OAAhBuiB,QAAwC,IAAhBA,GAAkCA,EAAY9kB,EAAOwF,GAChC,QAA5C0F,EAAK,EAAK+Y,cAAcoB,sBAAmC,IAAPna,GAAyBA,EAAGoa,UAAU5a,GAAc6a,MAAM,GACnH,EACMrf,EAAS,SAAClG,EAAOwF,GAEnB,MAAyE,EAAKof,WAAtEC,EAAe,EAAfA,gBAAiBW,EAAiB,EAAjBA,kBAAmBC,EAAe,EAAfA,gBAAiBC,EAAM,EAANA,OAE7D,GAAKb,GAAoB,EAAKX,eAA9B,CAEA,IAAQre,EAAWL,EAAXK,OAER,GAAI2f,GAA+C,OAA1B,EAAKpB,iBAM1B,OALA,EAAKA,iBAAmBuB,GAAoB9f,QAEd,OAA1B,EAAKue,mBACe,OAApBqB,QAAgD,IAApBA,GAAsCA,EAAgB,EAAKrB,oBAK/F,EAAKwB,WAAW,IAAKpgB,EAAKvE,MAAO4E,GACjC,EAAK+f,WAAW,IAAKpgB,EAAKvE,MAAO4E,GAOjC,EAAKoe,cAAc4B,aAKR,OAAXH,QAA8B,IAAXA,GAA6BA,EAAO1lB,EAAOwF,EAzBpD,CA0Bd,EACMkB,EAAe,SAAC1G,EAAOwF,GAAI,OAAK,EAAK2V,KAAKnb,EAAOwF,EAAK,EAC5DL,KAAK2gB,WAAa,IAAI9gB,EAAWwf,EAAa,CAC1C1d,eAAAA,EACAb,QAAAA,EACAC,OAAAA,EACAQ,aAAAA,GACD,CAAExB,mBAAoBC,KAAK8e,cAAc8B,yBAxFlC,CAyFd,GAAC,kBACD,SAAK/lB,EAAOwF,GACR,IAAM2e,EAAahf,KAAKgf,WAExB,GADAhf,KAAK6gB,SACA7B,EAAL,CAEA,IAAQ9c,EAAa7B,EAAb6B,SACRlC,KAAK4d,eAAe1b,GACpB,IAAQ4e,EAAc9gB,KAAKyf,WAAnBqB,UACM,OAAdA,QAAoC,IAAdA,GAAgCA,EAAUjmB,EAAOwF,EAJ7D,CAKd,GAAC,oBACD,WACI,IAAI0F,EAAI2K,EACR1Q,KAAKgf,YAAa,EACdhf,KAAK8e,cAAce,aACnB7f,KAAK8e,cAAce,WAAWC,oBAAqB,GAE5B,QAA1B/Z,EAAK/F,KAAK2gB,kBAA+B,IAAP5a,GAAyBA,EAAG1E,MAC/DrB,KAAK2gB,gBAAaxb,GACUnF,KAAKyf,WAAzBC,iBACgB1f,KAAK+e,iBACzB/e,KAAK+e,iBACL/e,KAAK+e,eAAiB,MAEmB,QAA5CrO,EAAK1Q,KAAK8e,cAAcoB,sBAAmC,IAAPxP,GAAyBA,EAAGyP,UAAU5a,GAAc6a,MAAM,EACnH,GAAC,wBACD,SAAWrc,EAAMgd,EAAQrgB,GACrB,IAAQsC,EAAShD,KAAKyf,WAAdzc,KAER,GAAKtC,GAAWsgB,GAAWjd,EAAMf,EAAMhD,KAAKif,kBAA5C,CAEA,IAAMgC,EAAYjhB,KAAK+f,mBAAmBhc,GACtC8H,EAAO7L,KAAKqE,YAAYN,GAAQrD,EAAOqD,GAEvC/D,KAAKkf,aAAelf,KAAKkf,YAAYnb,KACrC8H,EpCpKZ,SAA0B/P,EAAO,EAAcsjB,GAAS,IAArBxb,EAAG,EAAHA,IAAKC,EAAG,EAAHA,IASpC,YARYsB,IAARvB,GAAqB9H,EAAQ8H,EAE7B9H,EAAQsjB,EAAU/b,EAAIO,EAAK9H,EAAOsjB,EAAQxb,KAAO5E,KAAK6E,IAAI/H,EAAO8H,QAEpDuB,IAARtB,GAAqB/H,EAAQ+H,IAElC/H,EAAQsjB,EAAU/b,EAAIQ,EAAK/H,EAAOsjB,EAAQvb,KAAO7E,KAAK4E,IAAI9H,EAAO+H,IAE9D/H,CACX,CoC0JmBolB,CAAiBrV,EAAM7L,KAAKkf,YAAYnb,GAAO/D,KAAKof,QAAQrb,KAEvEkd,EAAU3D,IAAIzR,EAPJ,CAQd,GAAC,gCACD,WAAqB,WACjB,EAAyC7L,KAAKyf,WAAtC0B,EAAe,EAAfA,gBAAiBzb,EAAW,EAAXA,YACjBV,GAAWhF,KAAK8e,cAAce,YAAc,CAAC,GAA7C7a,OACFoc,EAAkBphB,KAAKkf,YACzBiC,IAAmBE,EAAAA,EAAAA,GAAYF,GAC1BnhB,KAAKkf,cACNlf,KAAKkf,YAAclf,KAAKshB,yBAKxBthB,KAAKkf,eADLiC,IAAmBnc,IpCtJnC,SAAiCuc,EAAW,GAA8B,IAA5Bpb,EAAG,EAAHA,IAAKC,EAAI,EAAJA,KAAME,EAAM,EAANA,OAAQD,EAAK,EAALA,MAC7D,MAAO,CACHtK,EAAGmJ,GAA4Bqc,EAAUxlB,EAAGqK,EAAMC,GAClDrK,EAAGkJ,GAA4Bqc,EAAUvlB,EAAGmK,EAAKG,GAEzD,CoCkJmCkb,CAAwBxc,EAAOib,OAAQkB,GAMlEnhB,KAAKof,QpC/Fb,WAA0D,IAA9B1Z,EAAc,UAAH,6CAAGF,GAOtC,OANoB,IAAhBE,EACAA,EAAc,GAEO,IAAhBA,IACLA,EAAcF,IAEX,CACHzJ,EAAG0J,GAAmBC,EAAa,OAAQ,SAC3C1J,EAAGyJ,GAAmBC,EAAa,MAAO,UAElD,CoCoFuB+b,CAAmB/b,GAK9B0b,IAAoBphB,KAAKkf,aACzBla,GACAhF,KAAKkf,cACJlf,KAAKmf,uBACNnZ,IAAS,SAACjC,GACF,EAAKgc,mBAAmBhc,KACxB,EAAKmb,YAAYnb,GpCxHrC,SAA+BiB,EAAQka,GACnC,IAAMwC,EAAsB,CAAC,EAO7B,YANwBvc,IAApB+Z,EAAYtb,MACZ8d,EAAoB9d,IAAMsb,EAAYtb,IAAMoB,EAAOpB,UAE/BuB,IAApB+Z,EAAYrb,MACZ6d,EAAoB7d,IAAMqb,EAAYrb,IAAMmB,EAAOpB,KAEhD8d,CACX,CoC+G6CC,CAAsB3c,EAAOib,OAAOlc,GAAO,EAAKmb,YAAYnb,IAE7F,GAER,GAAC,mCACD,WACI,MAAmE/D,KAAKyf,WAA/CP,EAAW,EAA5BiC,gBAA8BS,EAAwB,EAAxBA,yBACtC,IAAK1C,KAAgBmC,EAAAA,EAAAA,GAAYnC,GAC7B,OAAO,EACX,IAAM2C,EAAqB3C,EAAY9hB,QAE/ByiB,EAAe7f,KAAK8e,cAApBe,WAER,IAAKA,IAAeA,EAAW7a,OAC3B,OAAO,EACX,IAAM8c,E9BrNd,SAAwB3kB,EAAS4kB,EAAoBhiB,GACjD,IAAMiiB,EAAc9Z,GAAmB/K,EAAS4C,GACxCkiB,EAAWF,EAAXE,OAKR,OAJIA,IACA1a,GAAcya,EAAYjmB,EAAGkmB,EAAOlmB,GACpCwL,GAAcya,EAAYhmB,EAAGimB,EAAOjmB,IAEjCgmB,CACX,C8B6M+BE,CAAeL,EAAoBhC,EAAWsC,KAAMniB,KAAK8e,cAAc8B,yBAC1FwB,EpCjKZ,SAAiCb,EAAWO,GACxC,MAAO,CACH/lB,EAAGqJ,GAA4Bmc,EAAUxlB,EAAG+lB,EAAe/lB,GAC3DC,EAAGoJ,GAA4Bmc,EAAUvlB,EAAG8lB,EAAe9lB,GAEnE,CoC4JkCqmB,CAAwBxC,EAAW7a,OAAOib,OAAQ6B,GAK5E,GAAIF,EAA0B,CAC1B,IAAMU,EAAkBV,EjCvNpC,SAAiC,GAAU,IAAR7lB,EAAC,EAADA,EAAGC,EAAC,EAADA,EAClC,MAAO,CAAEmK,IAAKnK,EAAE4H,IAAKyC,MAAOtK,EAAE8H,IAAKyC,OAAQtK,EAAE6H,IAAKuC,KAAMrK,EAAE6H,IAC9D,CiCqN6D2e,CAAwBH,IACzEpiB,KAAKmf,wBAA0BmD,EAC3BA,IACAF,EAAsBlc,GAAwBoc,GAEtD,CACA,OAAOF,CACX,GAAC,4BACD,SAAelgB,GAAU,WACrB,EAAoGlC,KAAKyf,WAAjGzc,EAAI,EAAJA,KAAMwf,EAAY,EAAZA,aAAc9c,EAAW,EAAXA,YAAa+c,EAAc,EAAdA,eAAgBC,EAAgB,EAAhBA,iBAAkBC,EAAmB,EAAnBA,oBACrEzD,EAAclf,KAAKkf,aAAe,CAAC,EACnC0D,EAAqB5c,IAAS,SAACjC,GACjC,IAAIgC,EACJ,GAAKib,GAAWjd,EAAMf,EAAM,EAAKic,kBAAjC,CAGA,IAAIjD,EAAoG,QAAtFjW,EAAqB,OAAhBmZ,QAAwC,IAAhBA,OAAyB,EAASA,EAAYnb,UAA0B,IAAPgC,EAAgBA,EAAK,CAAC,EAClI2c,IACA1G,EAAa,CAAEpY,IAAK,EAAGC,IAAK,IAOhC,IAAM2Z,EAAkB9X,EAAc,IAAM,IACtC+X,EAAgB/X,EAAc,GAAK,IACnCwY,GAAU,gBACZ9R,KAAM,UACNlK,SAAUsgB,EAAetgB,EAAS6B,GAAQ,EAC1CyZ,gBAAAA,EACAC,cAAAA,EACApI,aAAc,IACdjL,UAAW,EACXD,UAAW,IACRsY,GACAzG,GAKP,OAAO,EAAK6G,wBAAwB9e,EAAMma,EA1B1C,CA2BJ,IAEA,OAAO4E,QAAQC,IAAIH,GAAoBI,KAAKL,EAChD,GAAC,qCACD,SAAwB5e,EAAMiY,GAE1B,OAAO4B,GAAe7Z,EADJ/D,KAAK+f,mBAAmBhc,GACH,EAAGiY,EAC9C,GAAC,2BACD,WAAgB,WACZhW,IAAS,SAACjC,GAAI,OAAK,EAAKgc,mBAAmBhc,GAAMiS,MAAM,GAC3D,GACA,gCAMA,SAAmBjS,GACf,IAAIgC,EAAI2K,EACFuS,EAAU,QAAUlf,EAAKmf,cACzBC,EAAsBnjB,KAAK8e,cAAcW,WAAWwD,GAC1D,OAAOE,GAEDnjB,KAAK8e,cAAcsE,SAASrf,EAA4G,QAArG2M,EAAsD,QAAhD3K,EAAK/F,KAAK8e,cAAcW,WAAW4D,eAA4B,IAAPtd,OAAgB,EAASA,EAAGhC,UAA0B,IAAP2M,EAAgBA,EAAK,EAC/K,GAAC,0BACD,SAAa5U,GAAO,WAChBkK,IAAS,SAACjC,GAGN,GAAKid,GAAWjd,EAFC,EAAK0b,WAAdzc,KAEoB,EAAKic,kBAAjC,CAEA,IAAQY,EAAe,EAAKf,cAApBe,WACFoB,EAAY,EAAKlB,mBAAmBhc,GAC1C,GAAI8b,GAAcA,EAAW7a,OAAQ,CACjC,MAAqB6a,EAAW7a,OAAOib,OAAOlc,GAAtCH,EAAG,EAAHA,IAAKC,EAAG,EAAHA,IACbod,EAAU3D,IAAIxhB,EAAMiI,GAAQV,EAAIO,EAAKC,EAAK,IAC9C,CANU,CAOd,GACJ,GACA,4CAKA,WAAiC,IACzBkC,EADyB,OAE7B,EAAkC/F,KAAKyf,WAA/Bzc,EAAI,EAAJA,KAAMme,EAAe,EAAfA,gBACNtB,EAAe7f,KAAK8e,cAApBe,WACR,IAAKwB,EAAAA,EAAAA,GAAYF,IAAqBtB,GAAe7f,KAAKkf,YAA1D,CAMAlf,KAAKwf,gBAKL,IAAM8D,EAAc,CAAEvnB,EAAG,EAAGC,EAAG,GAC/BgK,IAAS,SAACjC,GACN,IAAMkd,EAAY,EAAKlB,mBAAmBhc,GAC1C,GAAIkd,EAAW,CACX,IAAM9K,EAAS8K,EAAUhE,MACzBqG,EAAYvf,GpCvQ5B,SAAoBI,EAAQzH,GACxB,IAAI0H,EAAS,GACPmf,EAAezf,EAAWK,GAC1Bqf,EAAe1f,EAAWpH,GAOhC,OANI8mB,EAAeD,EACfnf,EAASZ,EAAS9G,EAAOkH,IAAKlH,EAAOmH,IAAM0f,EAAcpf,EAAOP,KAE3D2f,EAAeC,IACpBpf,EAASZ,EAASW,EAAOP,IAAKO,EAAON,IAAM2f,EAAc9mB,EAAOkH,MAE7DD,EAAM,EAAG,EAAGS,EACvB,CoC4PoCqf,CAAW,CAAE7f,IAAKuS,EAAQtS,IAAKsS,GAAU,EAAK+I,YAAYnb,GAClF,CACJ,IAIA,IAAQ2f,EAAsB1jB,KAAK8e,cAAcW,WAAzCiE,kBACR1jB,KAAK8e,cAAc6E,cAAcC,MAAM3b,UAAYyb,EAC7CA,EAAkB,CAAC,EAAG,IACtB,OACqB,QAA1B3d,EAAK8Z,EAAWsC,YAAyB,IAAPpc,GAAyBA,EAAG8d,eAC/DhE,EAAWiE,eACX9jB,KAAK4f,qBAKL5Z,IAAS,SAACjC,GACN,GAAKid,GAAWjd,EAAMf,EAAM,MAA5B,CAKA,IAAMie,EAAY,EAAKlB,mBAAmBhc,GAC1C,EAAqB,EAAKmb,YAAYnb,GAA9BH,EAAG,EAAHA,IAAKC,EAAG,EAAHA,IACbod,EAAU3D,IAAIja,EAAIO,EAAKC,EAAKyf,EAAYvf,IAN9B,CAOd,GAzCU,CA0Cd,GAAC,0BACD,WAAe,IACPgC,EADO,OAEX4Y,GAAoBrB,IAAItd,KAAK8e,cAAe9e,MAC5C,IAIM+jB,EAAsBzlB,EAJZ0B,KAAK8e,cAAc6E,cAIkB,eAAe,SAAC9oB,GACjE,MAAsC,EAAK4kB,WAAnCzc,EAAI,EAAJA,KAAI,IAAEghB,aACdhhB,SAD0B,IAAG,GAAI,IACT,EAAK+S,MAAMlb,EACvC,IACMopB,EAAyB,WAC3B,IAAQ9C,EAAoB,EAAK1B,WAAzB0B,iBACJE,EAAAA,EAAAA,GAAYF,KACZ,EAAKjC,YAAc,EAAKoC,wBAEhC,EACQzB,EAAe7f,KAAK8e,cAApBe,WACFqE,EAA4BrE,EAAW/iB,iBAAiB,UAAWmnB,GACrEpE,IAAeA,EAAW7a,SACC,QAA1Be,EAAK8Z,EAAWsC,YAAyB,IAAPpc,GAAyBA,EAAG8d,eAC/DhE,EAAWiE,gBAEfG,IAKA,IAAME,EAAqB1nB,EAAYyB,OAAQ,UAAU,kBAAM,EAAKkmB,gCAAgC,IAK9FC,EAA2BxE,EAAW/iB,iBAAiB,aAAc,YAAiC,IAA9BiF,EAAK,EAALA,MAAOuiB,EAAgB,EAAhBA,iBAC7E,EAAKtF,YAAcsF,IACnBte,IAAS,SAACjC,GACN,IAAMwgB,EAAc,EAAKxE,mBAAmBhc,GACvCwgB,IAEL,EAAKlgB,YAAYN,IAAShC,EAAMgC,GAAMS,UACtC+f,EAAYjH,IAAIiH,EAAYtH,MAAQlb,EAAMgC,GAAMS,WACpD,IACA,EAAKsa,cAAc4B,aAE3B,IACA,OAAO,WACHyD,IACAJ,IACAG,IAC6B,OAA7BG,QAAkE,IAA7BA,GAA+CA,GACxF,CACJ,GAAC,sBACD,WACI,IAAMG,EAAQxkB,KAAK8e,cAAcW,WACjC,EAA0J+E,EAAlJxhB,KAAAA,OAAI,IAAG,GAAK,IAAsIwhB,EAApInE,kBAAAA,OAAiB,IAAG,GAAK,IAA2GmE,EAAzG9E,gBAAAA,OAAe,IAAG,GAAK,IAAkF8E,EAAhFrD,gBAAAA,OAAe,IAAG,GAAK,IAAyDqD,EAAvD9e,YAAAA,OAAW,IAAG,EAAAF,GAAc,IAA2Bgf,EAAzBhC,aAAAA,OAAY,IAAG,GAAI,EACpJ,OAAO,kBACAgC,GAAK,IACRxhB,KAAAA,EACAqd,kBAAAA,EACAX,gBAAAA,EACAyB,gBAAAA,EACAzb,YAAAA,EACA8c,aAAAA,GAER,KAAC,EAjZ0B,GAmZ/B,SAASxB,GAAWyD,EAAWzhB,EAAMic,GACjC,QAAkB,IAATjc,GAAiBA,IAASyhB,KACT,OAArBxF,GAA6BA,IAAqBwF,EAC3D,CAQA,SAASjE,GAAoB9f,GAA4B,IAApBgkB,EAAgB,UAAH,6CAAG,GAC7CD,EAAY,KAOhB,OANIzlB,KAAKC,IAAIyB,EAAO1E,GAAK0oB,EACrBD,EAAY,IAEPzlB,KAAKC,IAAIyB,EAAO3E,GAAK2oB,IAC1BD,EAAY,KAETA,CACX,C,gCE5bA,SAASE,GAAiB1e,GACtB,OAAO/I,EAAAA,EAAAA,YAAU,kBAAM,kBAAM+I,GAAU,IAAE,GAC7C,CCJA,IAAM2e,GAA0B,SAACC,GAAI,OAAK,SAACL,GAEvC,OADAK,EAAKL,GACE,IACX,CAAC,ECCKxhB,GAAO,CACT8hB,IAAKF,ICaT,SAAuB,GAAoE,IAAlEG,EAAK,EAALA,MAAOC,EAAU,EAAVA,WAAYC,EAAQ,EAARA,SAAUC,EAAiB,EAAjBA,kBAAmBpG,EAAa,EAAbA,cAC/DqG,EAAeJ,GAASC,GAAcC,GAAYC,EAClDvE,GAAayE,EAAAA,EAAAA,QAAO,MAClBrlB,GAAuBslB,EAAAA,EAAAA,YAAWC,GAAAA,GAAlCvlB,mBACFD,EAAW,CACb6B,eAAgBujB,EAChBpkB,QAASkkB,EACTjkB,OAAQgkB,EACRzjB,MAAO,SAACzG,EAAOwF,GACXsgB,EAAWvjB,QAAU,KACrB6nB,GAAYA,EAASpqB,EAAOwF,EAChC,IAEJnD,EAAAA,EAAAA,YAAU,WACqB,OAAvByjB,EAAWvjB,SACXujB,EAAWvjB,QAAQmoB,eAAezlB,EAE1C,IAMAvB,EAAgBugB,EAAe,cAAeqG,GAL9C,SAAuBtqB,GACnB8lB,EAAWvjB,QAAU,IAAIyC,EAAWhF,EAAOiF,EAAU,CACjDC,mBAAAA,GAER,GAEA4kB,IAAiB,kBAAMhE,EAAWvjB,SAAWujB,EAAWvjB,QAAQiE,KAAK,GACzE,IDrCI2B,KAAM4hB,IEGV,SAAiBJ,GACb,IAAsBgB,EAAqChB,EAAnDiB,aAAiC3G,EAAkB0F,EAAlB1F,cACnC2G,GAAeC,EAAAA,GAAAA,IAAY,kBAAM,IAAI7G,GAA0BC,EAAc,KAGnF5hB,EAAAA,EAAAA,YAAU,kBAAMsoB,GAAqBA,EAAkBG,UAAUF,EAAa,GAAE,CAACA,EAAcD,KAE/FtoB,EAAAA,EAAAA,YAAU,kBAAMuoB,EAAaG,cAAc,GAAE,CAACH,GAClD,K,oCCSA,SAASI,KACL,IAAMC,GAAUT,EAAAA,EAAAA,YAAWU,GAAAA,GAC3B,GAAgB,OAAZD,EACA,MAAO,EAAC,EAAM,MAClB,IAAQvG,EAAwCuG,EAAxCvG,UAAWyG,EAA6BF,EAA7BE,eAAgBC,EAAaH,EAAbG,SAI7BC,GAAKC,EAAAA,EAAAA,UACXjpB,EAAAA,EAAAA,YAAU,kBAAM+oB,EAASC,EAAG,GAAE,IAE9B,OAAQ3G,GAAayG,EAAiB,EAAC,EADlB,WAAH,OAASA,GAAkBA,EAAeE,EAAG,GACD,EAAC,EACnE,C,uCCpCA,SAASE,GAAgBC,EAAQtiB,GAC7B,OAAIA,EAAKF,MAAQE,EAAKH,IACX,EACHyiB,GAAUtiB,EAAKF,IAAME,EAAKH,KAAQ,GAC9C,CAQA,IAAM0iB,GAAsB,CACxBC,QAAS,SAACpQ,EAAQqQ,GACd,IAAKA,EAAK9pB,OACN,OAAOyZ,EAKX,GAAsB,kBAAXA,EAAqB,CAC5B,IAAIsQ,GAAAA,GAAAA,KAAQtQ,GAIR,OAAOA,EAHPA,EAAShJ,WAAWgJ,EAK5B,CAKA,IAAMpa,EAAIqqB,GAAgBjQ,EAAQqQ,EAAK9pB,OAAOX,GACxCC,EAAIoqB,GAAgBjQ,EAAQqQ,EAAK9pB,OAAOV,GAC9C,MAAO,GAAP,OAAUD,EAAC,aAAKC,EAAC,IACrB,G,YCnCJ,SAAS0qB,GAAcjjB,GACnB,MAAwB,kBAAVA,GAAsBA,EAAMgJ,WAAW,SACzD,CAUA,IAAMka,GAAmB,uDACzB,SAASC,GAAiBxpB,GACtB,IAAM4P,EAAQ2Z,GAAiBE,KAAKzpB,GACpC,IAAK4P,EACD,MAAO,CAAC,GACZ,eAA4BA,EAAK,GACjC,MAAO,CADO,KAAU,KAE5B,CAEA,SAAS8Z,GAAiB1pB,EAASD,GAAoB,IAAX4pB,EAAQ,UAAH,6CAAG,EACnB,yDAAF,OAA2D3pB,EAAO,wDAC7F,MAA0BwpB,GAAiBxpB,GAAQ,gBAA5C4pB,EAAK,KAAEC,EAAQ,KAEtB,GAAKD,EAAL,CAGA,IAAME,EAAWhpB,OAAOipB,iBAAiBhqB,GAASiqB,iBAAiBJ,GACnE,OAAIE,EACOA,EAASG,OAEXX,GAAcO,GAEZH,GAAiBG,EAAU9pB,EAAS4pB,EAAQ,GAG5CE,CAXD,CAad,CCrCA,IAAMK,GAAW,QACXC,GAAmB,CACrBhB,QAAS,SAACpQ,EAAQ,GAAmC,IAAjCqR,EAAS,EAATA,UAAWC,EAAe,EAAfA,gBACrBC,EAAWvR,EAIXwR,EAAuBxR,EAAOyR,SAAS,QACvCC,EAAe,GACjBF,IACAxR,EAASA,EAAOlG,QAAQ0W,IAAkB,SAAC3Z,GAEvC,OADA6a,EAAahnB,KAAKmM,GACXsa,EACX,KAEJ,IAAMQ,EAASrX,GAAQ/C,MAAMyI,GAE7B,GAAI2R,EAAOrmB,OAAS,EAChB,OAAOimB,EACX,IAAMjW,EAAWhB,GAAQJ,kBAAkB8F,GACrCzV,EAA8B,kBAAdonB,EAAO,GAAkB,EAAI,EAE7CC,EAASN,EAAgB1rB,EAAEuI,MAAQkjB,EAAUzrB,EAC7CisB,EAASP,EAAgBzrB,EAAEsI,MAAQkjB,EAAUxrB,EACnD8rB,EAAO,EAAIpnB,IAAWqnB,EACtBD,EAAO,EAAIpnB,IAAWsnB,EAOtB,IAAMC,EAAe5kB,EAAI0kB,EAAQC,EAAQ,IAEP,kBAAvBF,EAAO,EAAIpnB,KAClBonB,EAAO,EAAIpnB,IAAWunB,GAEQ,kBAAvBH,EAAO,EAAIpnB,KAClBonB,EAAO,EAAIpnB,IAAWunB,GAC1B,IAAI1X,EAASkB,EAASqW,GACtB,GAAIH,EAAsB,CACtB,IAAItlB,EAAI,EACRkO,EAASA,EAAON,QAAQqX,IAAU,WAC9B,IAAMY,EAAcL,EAAaxlB,GAEjC,OADAA,IACO6lB,CACX,GACJ,CACA,OAAO3X,CACX,G,YC3CE4X,GAAwB,uGA8FzB,OA9FyB,yCAM1B,WAAoB,WAChB,EAAoEnoB,KAAKwkB,MAAjE1F,EAAa,EAAbA,cAAesJ,EAAW,EAAXA,YAAaC,EAAiB,EAAjBA,kBAAmBC,EAAQ,EAARA,SAC/CzI,EAAef,EAAfe,YACR0I,EAAAA,GAAAA,GAAkBC,IACd3I,IACIuI,EAAYK,OACZL,EAAYK,MAAMC,IAAI7I,GACtBwI,GAAqBA,EAAkBpC,UAAYqC,GACnDD,EAAkBpC,SAASpG,GAE/BA,EAAWsC,KAAKwG,YAChB9I,EAAW/iB,iBAAiB,qBAAqB,WAC7C,EAAK8rB,cACT,IACA/I,EAAWgJ,YAAW,kBACfhJ,EAAWjjB,SAAO,IACrBopB,eAAgB,kBAAM,EAAK4C,cAAc,MAGjDE,GAAAA,EAAAA,gBAAuC,CAC3C,GAAC,qCACD,SAAwBC,GAAW,WAC/B,EAA6D/oB,KAAKwkB,MAA1DwE,EAAgB,EAAhBA,iBAAkBlK,EAAa,EAAbA,cAAe9b,EAAI,EAAJA,KAAMuc,EAAS,EAATA,UACzCM,EAAaf,EAAce,WACjC,OAAKA,GASLA,EAAWN,UAAYA,EACnBvc,GACA+lB,EAAUC,mBAAqBA,QACV7jB,IAArB6jB,EACAnJ,EAAWoJ,aAGXjpB,KAAK4oB,eAELG,EAAUxJ,YAAcA,IACpBA,EACAM,EAAWqJ,UAELrJ,EAAWsJ,YAMjB/nB,EAAAA,GAAAA,YAAgB,WACZ,IAAI2E,GACmC,QAAhCA,EAAK8Z,EAAWuJ,kBAA+B,IAAPrjB,OAAgB,EAASA,EAAGsjB,QAAQ5nB,SAC/E,EAAKmnB,cAEb,KAGD,MAnCI,IAoCf,GAAC,gCACD,WACI,IAAQ/I,EAAe7f,KAAKwkB,MAAM1F,cAA1Be,WACJA,IACAA,EAAWsC,KAAKwG,aACX9I,EAAWtC,kBAAoBsC,EAAWyJ,UAC3CtpB,KAAK4oB,eAGjB,GAAC,kCACD,WACI,MAA2E5oB,KAAKwkB,MAAxE1F,EAAa,EAAbA,cAAesJ,EAAW,EAAXA,YAAgCmB,EAAc,EAAjClB,kBAC5BxI,EAAef,EAAfe,WACJA,IACAA,EAAW2J,6BACS,OAAhBpB,QAAwC,IAAhBA,OAAyB,EAASA,EAAYK,QACtEL,EAAYK,MAAMgB,OAAO5J,IACN,OAAnB0J,QAA8C,IAAnBA,OAA4B,EAASA,EAAeG,aAC/EH,EAAeG,WAAW7J,GAEtC,GAAC,0BACD,WACI,IAAQ+I,EAAiB5oB,KAAKwkB,MAAtBoE,aACS,OAAjBA,QAA0C,IAAjBA,GAAmCA,GAChE,GAAC,oBACD,WACI,OAAO,IACX,KAAC,EA9FyB,CAASe,EAAAA,WAqGvC,IAAMnB,GAAyB,CAC3BoB,cAAc,kBACPtD,IAAmB,IACtBuD,QAAS,CACL,sBACA,uBACA,yBACA,6BAGRC,oBAAqBxD,GACrByD,qBAAsBzD,GACtB0D,uBAAwB1D,GACxB2D,wBAAyB3D,GACzB4D,UAAW3C,IC3HT4C,GAAiB,CACnBC,cDuGJ,SAAuB5F,GACnB,MAAkCqB,KAAa,gBAAxCtG,EAAS,KAAEqJ,EAAY,KACxBR,GAAc/C,EAAAA,EAAAA,YAAWgF,GAAAA,GAC/B,OAAQV,EAAAA,cAA6BxB,IAA0B,kBAAK3D,GAAK,IAAE4D,YAAaA,EAAaC,mBAAmBhD,EAAAA,EAAAA,YAAWiF,GAAAA,GAA2B/K,UAAWA,EAAWqJ,aAAcA,IACtM,G,YE9GA,SAAS2B,GAAe1e,EAAMiS,GAC1B,IAAK5L,MAAMC,QAAQ2L,GACf,OAAO,EACX,IAAM0M,EAAa1M,EAAKrc,OACxB,GAAI+oB,IAAe3e,EAAKpK,OACpB,OAAO,EACX,IAAK,IAAIY,EAAI,EAAGA,EAAImoB,EAAYnoB,IAC5B,GAAIyb,EAAKzb,KAAOwJ,EAAKxJ,GACjB,OAAO,EAEf,OAAO,CACX,CCRA,ICAMooB,GAAoB,SAAC7rB,GAAC,MAAK,aAAa6O,KAAK7O,EAAE,E,YCA/C8rB,GAAgB,SAAC9rB,GAAC,OAAK,SAACwN,GAAI,OAAKA,EAAKqB,KAAK7O,EAAE,GCI7C+rB,GAAsB,CAACrd,GAAAA,GAAQmZ,GAAAA,GAAIjY,GAAAA,GAASoc,GAAAA,GAASC,GAAAA,GAAIC,GAAAA,GCJlD,CACTrd,KAAM,SAAC7O,GAAC,MAAW,SAANA,CAAY,EACzB8O,MAAO,SAAC9O,GAAC,OAAKA,CAAC,IDMbmsB,GAAyB,SAACnsB,GAAC,OAAK+rB,GAAoBzb,KAAKwb,GAAc9rB,GAAG,EEJ1EosB,GAAa,GAAH,gBAAOL,IAAmB,CAAEvb,GAAOqB,KAI7Cwa,GAAgB,SAACrsB,GAAC,OAAKosB,GAAW9b,KAAKwb,GAAc9rB,GAAG,E,WCO9D,SAASssB,GAAepM,EAAepF,EAAYyR,GAC/C,IAAM3G,EAAQ1F,EAAcW,WAC5B,OAAO2L,EAAAA,GAAAA,GAAwB5G,EAAO9K,OAAuBvU,IAAXgmB,EAAuBA,EAAS3G,EAAM2G,OAf5F,SAAoBrM,GAChB,IAAM1hB,EAAU,CAAC,EAEjB,OADA0hB,EAAcuM,cAAa,SAAC5nB,EAAOiE,GAAG,OAAMtK,EAAQsK,GAAOjE,EAAMwZ,KAAK,IAC/D7f,CACX,CAWoGkuB,CAAWxM,GAP/G,SAAqBA,GACjB,IAAM5c,EAAW,CAAC,EAElB,OADA4c,EAAcuM,cAAa,SAAC5nB,EAAOiE,GAAG,OAAMxF,EAASwF,GAAOjE,EAAMtB,aAAa,IACxED,CACX,CAG+HC,CAAY2c,GAC3I,C,sCCRA,SAASyM,GAAezM,EAAepX,EAAKjE,GACpCqb,EAAc0M,SAAS9jB,GACvBoX,EAAcsE,SAAS1b,GAAK4V,IAAI7Z,GAGhCqb,EAAc2M,SAAS/jB,GAAK6c,EAAAA,GAAAA,GAAY9gB,GAEhD,CACA,SAASioB,GAAU5M,EAAepF,GAC9B,IAAMwN,EAAWgE,GAAepM,EAAepF,GAC/C,EAAyDwN,EAAWpI,EAAc6M,qBAAqBzE,GAAU,GAAS,CAAC,EAAC,IAAtH0E,cAAAA,OAAa,IAAG,GAAC,EAAC,EAAsBlvB,GAAtB,EAAEsf,YAA0B,eAEpD,IAAK,IAAMtU,KADXhL,GAAS,kBAAKA,GAAWkvB,GACC,CAEtBL,GAAezM,EAAepX,GADhB0W,EAAAA,GAAAA,GAA6B1hB,EAAOgL,IAEtD,CACJ,CAuBA,SAASmkB,GAAwB/M,EAAepiB,EAAQ0H,GACpD,IAAI2B,EAAI2K,EACFob,EAAerhB,OAAOT,KAAKtN,GAAQie,QAAO,SAACjT,GAAG,OAAMoX,EAAc0M,SAAS9jB,EAAI,IAC/EqkB,EAAeD,EAAarqB,OAClC,GAAKsqB,EAEL,IAAK,IAAI1pB,EAAI,EAAGA,EAAI0pB,EAAc1pB,IAAK,CACnC,IAAMqF,EAAMokB,EAAazpB,GACnB2pB,EAActvB,EAAOgL,GACvBjE,EAAQ,KAKRyO,MAAMC,QAAQ6Z,KACdvoB,EAAQuoB,EAAY,IAOV,OAAVvoB,IACAA,EAAoG,QAA3FiN,EAA4B,QAAtB3K,EAAK3B,EAAOsD,UAAyB,IAAP3B,EAAgBA,EAAK+Y,EAAcmN,UAAUvkB,UAAyB,IAAPgJ,EAAgBA,EAAKhU,EAAOgL,SAM9HvC,IAAV1B,GAAiC,OAAVA,IAEN,kBAAVA,IPhFc,iBAAiBgK,KOiFnBhK,IAAUgnB,GAAkBhnB,IAE/CA,EAAQ0J,WAAW1J,IAEbwnB,GAAcxnB,IAAUgN,GAAQhD,KAAKue,KAC3CvoB,EAAQoN,GAAkBnJ,EAAKskB,IAEnClN,EAAc2M,SAAS/jB,GAAK6c,EAAAA,GAAAA,GAAY9gB,SACpB0B,IAAhBf,EAAOsD,KACPtD,EAAOsD,GAAOjE,GAElBqb,EAAcoN,cAAcxkB,EAAKjE,GACrC,CACJ,CACA,SAAS0oB,GAAwBzkB,EAAKsU,GAClC,GAAKA,EAGL,OADwBA,EAAWtU,IAAQsU,EAAoB,SAAKA,GAC7C1Y,IAC3B,CACA,SAAS8oB,GAAU1vB,EAAQsf,EAAY8C,GACnC,IAAI/Y,EACE3B,EAAS,CAAC,EAChB,IAAK,IAAMsD,KAAOhL,EAAQ,CACtB,IAAM2vB,EAAmBF,GAAwBzkB,EAAKsU,GACtD5X,EAAOsD,QACkBvC,IAArBknB,EACMA,EACuC,QAAtCtmB,EAAK+Y,EAAcsE,SAAS1b,UAAyB,IAAP3B,OAAgB,EAASA,EAAGkX,KACzF,CACA,OAAO7Y,CACX,C,0BCjHA,SAASkoB,GAAwB7oB,GAC7B,OAAO6I,SAAQigB,EAAAA,GAAAA,GAAc9oB,IAAUA,EAAMilB,IACjD,C,sCCoBA,SAAS8D,GAAe1N,EAAe2N,GAAuB,IACtD1mB,EADwCnJ,EAAU,UAAH,6CAAG,CAAC,EAEjDsqB,EAAWgE,GAAepM,EAAe2N,EAAS7vB,EAAQuuB,QAChE,EAAkEjE,GAAY,CAAC,EAAC,IAA1ElL,WAAAA,OAAU,IAAG,EAAA8C,EAAchC,wBAA0B,CAAC,EAAC,EACzDlgB,EAAQ8vB,qBACR1Q,EAAapf,EAAQ8vB,oBAMzB,IAAM3P,EAAemK,EACf,kBAAMyF,GAAc7N,EAAeoI,EAAUtqB,EAAQ,EACrD,kBAAMkmB,QAAQ8J,SAAS,EAKvBC,GAA+D,QAAxC9mB,EAAK+Y,EAAcgO,uBAAoC,IAAP/mB,OAAgB,EAASA,EAAGgnB,MACnG,WAAsB,IAArBC,EAAe,UAAH,6CAAG,EACd,EAAkEhR,EAAU,IAApEO,cAAAA,OAAa,IAAG,IAAC,EAAEC,EAAe,EAAfA,gBAAiBC,EAAgB,EAAhBA,iBAC5C,OAAOwQ,GAAgBnO,EAAe2N,EAASlQ,EAAgByQ,EAAcxQ,EAAiBC,EAAkB7f,EACpH,EACE,kBAAMkmB,QAAQ8J,SAAS,EAK7B,EAAiB5Q,EAATM,EAAI,EAAJA,KACR,GAAIA,EAAM,CACN,MAA+B,mBAATA,EAChB,CAACS,EAAc8P,GACf,CAACA,EAAoB9P,GAAa,gBAFjCmQ,EAAK,KAAEC,EAAI,KAGlB,OAAOD,IAAQlK,KAAKmK,EACxB,CAEI,OAAOrK,QAAQC,IAAI,CAAChG,IAAgB8P,EAAmBjwB,EAAQ+Y,QAEvE,CAIA,SAASgX,GAAc7N,EAAepF,GAA0D,IACxF3T,EADwF,yDAAJ,CAAC,EAAC,IAA1C4P,MAAAA,OAAK,IAAG,IAAC,EAAE+W,EAAkB,EAAlBA,mBAAoBtgB,EAAI,EAAJA,KAE/E,EAAsF0S,EAAc6M,qBAAqBjS,GAAW,IAA9HsC,WAAAA,OAAU,IAAG,EAAA8C,EAAchC,uBAAsB,EAAE8O,EAAa,EAAbA,cAAkBlvB,GAAM,cAC3E0wB,EAAatO,EAAcsE,SAAS,cACtCsJ,IACA1Q,EAAa0Q,GACjB,IAAMW,EAAa,GACbC,EAAqBlhB,IAAiD,QAAvCrG,EAAK+Y,EAAcoB,sBAAmC,IAAPna,OAAgB,EAASA,EAAGwnB,WAAWnhB,IAAO,WACvH1E,GACP,IAAMjE,EAAQqb,EAAcsE,SAAS1b,GAC/B8lB,EAAc9wB,EAAOgL,GAC3B,IAAKjE,QACe0B,IAAhBqoB,GACCF,GACGG,GAAqBH,EAAoB5lB,GAC7C,iBAEJ,IAAIsV,GAAkB,QAAErH,MAAAA,GAAUqG,GAI9B8C,EAAc4O,oBAAsBC,GAAAA,EAAAA,IAAmBjmB,KACvDsV,GAAkB,kBACXA,GAAe,IAClB5Q,MAAM,EACNuJ,MAAO,KAGf,IAAI8B,EAAYmG,GAAelW,EAAKjE,EAAO+pB,EAAaxQ,GACpDsP,GAAwBc,KACxBA,EAAW1E,IAAIhhB,GACf+P,EAAYA,EAAUuL,MAAK,kBAAMoK,EAAW3D,OAAO/hB,EAAI,KAE3D2lB,EAAWxsB,KAAK4W,EAAW,EAzB/B,IAAK,IAAM/P,KAAOhL,EAAQ,EAAfgL,GA2BX,OAAOob,QAAQC,IAAIsK,GAAYrK,MAAK,WAChC4I,GAAiBF,GAAU5M,EAAe8M,EAC9C,GACJ,CACA,SAASqB,GAAgBnO,EAAe2N,GAAgF,IAAvElQ,EAAgB,UAAH,6CAAG,EAAGC,EAAkB,UAAH,6CAAG,EAAGC,EAAmB,UAAH,6CAAG,EAAG7f,EAAO,uCAC5GywB,EAAa,GACbO,GAAsB9O,EAAcgO,gBAAgBC,KAAO,GAAKvQ,EAChEqR,EAA+C,IAArBpR,EAC1B,eAACpa,EAAI,UAAH,6CAAG,EAAC,OAAKA,EAAIma,CAAe,EAC9B,eAACna,EAAI,UAAH,6CAAG,EAAC,OAAKurB,EAAqBvrB,EAAIma,CAAe,EASzD,OARAtK,MAAM5O,KAAKwb,EAAcgO,iBACpBgB,KAAKC,IACLC,SAAQ,SAACC,EAAO5rB,GACjBgrB,EAAWxsB,KAAK2rB,GAAeyB,EAAOxB,GAAS,kBACxC7vB,GAAO,IACV+Y,MAAO4G,EAAgBsR,EAAwBxrB,MAChD2gB,MAAK,kBAAMiL,EAAMC,wBAAwBzB,EAAQ,IACxD,IACO3J,QAAQC,IAAIsK,EACvB,CAIA,SAASU,GAAgBjvB,EAAGC,GACxB,OAAOD,EAAEqvB,iBAAiBpvB,EAC9B,CAOA,SAAS0uB,GAAqB,EAAmC/lB,GAAK,IAAtC0mB,EAAa,EAAbA,cAAeC,EAAc,EAAdA,eACrCC,EAAcF,EAAc3vB,eAAeiJ,KAAgC,IAAxB2mB,EAAe3mB,GAExE,OADA2mB,EAAe3mB,IAAO,EACf4mB,CACX,C,kDCjIMC,GAAuB,CACzBhpB,GAAcipB,QACdjpB,GAAckpB,OACdlpB,GAAcmpB,MACdnpB,GAAcopB,MACdppB,GAAcqpB,IACdrpB,GAAc6a,KACd7a,GAAcspB,MAEZC,GAAuB,UAAIP,IAAsBrb,UACjD6b,GAAoBR,GAAqB9sB,OAC/C,SAASutB,GAAYlQ,GACjB,OAAO,SAACuO,GAAU,OAAKvK,QAAQC,IAAIsK,EAAWnd,KAAI,gBAAGuH,EAAS,EAATA,UAAW7a,EAAO,EAAPA,QAAO,ODd3E,SAA8BkiB,EAAepF,GAA0B,IAE/DjC,EAFiD7a,EAAU,UAAH,6CAAG,CAAC,EAGhE,GAFAkiB,EAAcmQ,qBAAqBvV,GAE/BxH,MAAMC,QAAQuH,GAAa,CAC3B,IAAM2T,EAAa3T,EAAWxJ,KAAI,SAACuc,GAAO,OAAKD,GAAe1N,EAAe2N,EAAS7vB,EAAQ,IAC9F6a,EAAYqL,QAAQC,IAAIsK,EAC5B,MACK,GAA0B,kBAAf3T,EACZjC,EAAY+U,GAAe1N,EAAepF,EAAY9c,OAErD,CACD,IAAMsyB,EAA2C,oBAAfxV,EAC5BwR,GAAepM,EAAepF,EAAY9c,EAAQuuB,QAClDzR,EACNjC,EAAYkV,GAAc7N,EAAeoQ,EAAoBtyB,EACjE,CACA,OAAO6a,EAAUuL,MAAK,kBAAMlE,EAAcoP,wBAAwBxU,EAAW,GACjF,CCHkFyV,CAAqBrQ,EAAerH,EAAW7a,EAAQ,IAAE,CAC3I,CACA,SAASwyB,GAAqBtQ,GAC1B,IAAI7I,EAAU+Y,GAAYlQ,GACpBxU,EAoSV,WAAuB,MACnB,OAAO,EAAP,cACK/E,GAAcipB,QAAUa,IAAgB,KAAK,UAC7C9pB,GAAckpB,OAASY,OAAiB,UACxC9pB,GAAcopB,MAAQU,OAAiB,UACvC9pB,GAAcqpB,IAAMS,OAAiB,UACrC9pB,GAAc6a,KAAOiP,OAAiB,UACtC9pB,GAAcmpB,MAAQW,OAAiB,UACvC9pB,GAAcspB,KAAOQ,MAAiB,CAE/C,CA9SkBC,GACVC,GAAkB,EAKhBC,EAA0B,SAACC,EAAK/V,GAClC,IAAMwN,EAAWgE,GAAepM,EAAepF,GAC/C,GAAIwN,EAAU,CACuCA,EAAzClL,WAAR,IAAoB4P,EAA6B1E,EAA7B0E,cAAkBlvB,GAAM,QAAKwqB,EAAQ,IACzDuI,GAAM,0BAAKA,GAAQ/yB,GAAWkvB,EAClC,CACA,OAAO6D,CACX,EAkBA,SAASC,EAAe9yB,EAAS+yB,GA+B7B,IA9BA,IAAI5pB,EACEye,EAAQ1F,EAAcW,WACtBqG,EAAUhH,EAAc8Q,mBAAkB,IAAS,CAAC,EAKpDvC,EAAa,GAKbwC,EAAc,IAAIvY,IAMpBwY,EAAkB,CAAC,EAKnBC,EAAsBrtB,IAC1B,WAMSL,GACL,IAAM+J,EAAO0iB,GAAqBzsB,GAC5B2tB,EAAY1lB,EAAM8B,GAClB6jB,EAA8B,QAAtBlqB,EAAKye,EAAMpY,UAA0B,IAAPrG,EAAgBA,EAAK+f,EAAQ1Z,GACnE8jB,GAAgBC,EAAAA,GAAAA,GAAeF,GAK/BG,EAAchkB,IAASujB,EAAoBK,EAAUK,SAAW,MAClD,IAAhBD,IACAL,EAAsB1tB,GAO1B,IAAIiuB,EAAcL,IAASnK,EAAQ1Z,IAAS6jB,IAASzL,EAAMpY,IAAS8jB,EAepE,GAXII,GACAf,GACAzQ,EAAcyR,yBACdD,GAAc,GAMlBN,EAAU5B,eAAgB,UAAK0B,IAI7BE,EAAUK,UAA4B,OAAhBD,IAElBH,IAASD,EAAUQ,WAErBC,EAAAA,GAAAA,GAAoBR,IACJ,mBAATA,EACP,iBAOJ,IAAMS,EAqKlB,SAAgC5S,EAAMjS,GAClC,GAAoB,kBAATA,EACP,OAAOA,IAASiS,EAEf,GAAI5L,MAAMC,QAAQtG,GACnB,OAAQ0e,GAAe1e,EAAMiS,GAEjC,OAAO,CACX,CA7KqC6S,CAAuBX,EAAUQ,SAAUP,GAChEW,EAAoBF,GAEnBtkB,IAASujB,GACNK,EAAUK,WACTC,GACDJ,GAEH7tB,EAAI0tB,GAAuBG,EAK1BW,EAAiB3e,MAAMC,QAAQ8d,GAAQA,EAAO,CAACA,GAKjDa,EAAiBD,EAAejxB,OAAO4vB,EAAyB,CAAC,IACjD,IAAhBY,IACAU,EAAiB,CAAC,GAUtB,MAAoCd,EAA5Be,mBAAAA,OAAkB,IAAG,GAAC,EAAC,EACzBC,GAAU,kBACTD,GACAD,GAEDG,EAAgB,SAACvpB,GACnBkpB,GAAoB,EACpBf,EAAYqB,OAAOxpB,GACnBsoB,EAAU3B,eAAe3mB,IAAO,CACpC,EACA,IAAK,IAAMA,KAAOspB,EAAS,CACvB,IAAMnlB,EAAOilB,EAAeppB,GACtBoW,EAAOiT,EAAmBrpB,GAE5BooB,EAAgBrxB,eAAeiJ,KAK/BmE,IAASiS,GAKLjB,EAAAA,GAAAA,GAAkBhR,KAASgR,EAAAA,GAAAA,GAAkBiB,IACxCyM,GAAe1e,EAAMiS,IAAS4S,EAC/BO,EAAcvpB,GAOdsoB,EAAU5B,cAAc1mB,IAAO,OAGrBvC,IAAT0G,EAELolB,EAAcvpB,GAIdmoB,EAAYnH,IAAIhhB,QAGNvC,IAAT0G,GAAsBgkB,EAAYtY,IAAI7P,GAK3CupB,EAAcvpB,GAOdsoB,EAAU5B,cAAc1mB,IAAO,EAEvC,CAKAsoB,EAAUQ,SAAWP,EACrBD,EAAUe,mBAAqBD,EAI3Bd,EAAUK,WACVP,GAAkB,kBAAKA,GAAoBgB,IAE3CvB,GAAmBzQ,EAAcqS,wBACjCP,GAAoB,GAOpBA,IAAsBN,GACtBjD,EAAWxsB,KAAI,MAAfwsB,GAAU,QAASwD,EAAe3gB,KAAI,SAACuH,GAAS,MAAM,CAClDA,UAAWA,EACX7a,SAAS,QAAEwP,KAAAA,GAASxP,GACvB,KACJ,EAnKIyF,EAAI,EAAGA,EAAI0sB,GAAmB1sB,IAAK,EAAnCA,GA0KT,GAAIwtB,EAAY9C,KAAM,CAClB,IAAMqE,EAAoB,CAAC,EAC3BvB,EAAY7B,SAAQ,SAACtmB,GACjB,IAAM2pB,EAAiBvS,EAAcwS,cAAc5pB,QAC5BvC,IAAnBksB,IACAD,EAAkB1pB,GAAO2pB,EAEjC,IACAhE,EAAWxsB,KAAK,CAAE4W,UAAW2Z,GACjC,CACA,IAAIG,EAAgBjlB,QAAQ+gB,EAAW5rB,QAOvC,OANI8tB,IACkB,IAAlB/K,EAAMnB,UACLvE,EAAcyR,yBACfgB,GAAgB,GAEpBhC,GAAkB,EACXgC,EAAgBtb,EAAQoX,GAAcvK,QAAQ8J,SACzD,CAkBA,MAAO,CACH8C,eAAAA,EACAvP,UAhBJ,SAAmB/T,EAAMikB,EAAUzzB,GAC/B,IAAImJ,EAEJ,GAAIuE,EAAM8B,GAAMikB,WAAaA,EACzB,OAAOvN,QAAQ8J,UAEsB,QAAxC7mB,EAAK+Y,EAAcgO,uBAAoC,IAAP/mB,GAAyBA,EAAGioB,SAAQ,SAACC,GAAY,IAAIloB,EAAI,OAAuC,QAA/BA,EAAKkoB,EAAM/N,sBAAmC,IAAPna,OAAgB,EAASA,EAAGoa,UAAU/T,EAAMikB,EAAW,IAChN/lB,EAAM8B,GAAMikB,SAAWA,EACvB,IAAMhD,EAAaqC,EAAe9yB,EAASwP,GAC3C,IAAK,IAAM1E,KAAO4C,EACdA,EAAM5C,GAAK0mB,cAAgB,CAAC,EAEhC,OAAOf,CACX,EAIImE,mBA7PJ,SAA4BC,GACxBxb,EAAUwb,EAAa3S,EAC3B,EA4PIyO,SAAU,kBAAMjjB,CAAK,EAE7B,CAUA,SAAS+kB,KAAkC,IAAlBgB,EAAW,UAAH,8CAC7B,MAAO,CACHA,SAAAA,EACAjC,cAAe,CAAC,EAChBC,eAAgB,CAAC,EACjB0C,mBAAoB,CAAC,EAE7B,CCnTA,IAAM1D,GAAa,CACf5V,UAAWmN,IAAwB,YAAgC,IAA7B9F,EAAa,EAAbA,cAAe7I,EAAO,EAAPA,QAMjD6I,EAAcoB,iBAAmBpB,EAAcoB,eAAiBkP,GAAqBtQ,KAIjF2R,EAAAA,GAAAA,GAAoBxa,KACpB/Y,EAAAA,EAAAA,YAAU,kBAAM+Y,EAAQ0P,UAAU7G,EAAc,GAAE,CAAC7I,GAE3D,IACAyb,KAAM9M,IAAwB,SAACJ,GAC3B,IAAQ2G,EAA0B3G,EAA1B2G,OAAQrM,EAAkB0F,EAAlB1F,cAChB,EAAkC+G,KAAa,gBAAxCtG,EAAS,KAAEqJ,EAAY,KACxB+I,GAAkBtM,EAAAA,EAAAA,YAAWU,GAAAA,IACnC7oB,EAAAA,EAAAA,YAAU,WACN4hB,EAAcS,UAAYA,EAC1B,IAAM9H,EAAYqH,EAAcoB,gBAC5BpB,EAAcoB,eAAeC,UAAU5a,GAAcspB,MAAOtP,EAAW,CACnE4L,OAASwG,GAAmBA,EAAgBxG,QACxCA,IAER1T,IAAc8H,GACd9H,EAAUuL,KAAK4F,EAEvB,GAAG,CAACrJ,GACR,KCjCJ,SAASqS,GAAiB9S,EAAeuR,EAAUpqB,GAC/C,OAAO,SAACpL,EAAOwF,GACNzF,EAAaC,KAAUsI,MAKxB2b,EAAcoB,gBACdpB,EAAcoB,eAAeC,UAAU5a,GAAcopB,MAAO0B,GAEhEpqB,GAAYA,EAASpL,EAAOwF,GAChC,CACJ,CCVA,IAAMwxB,GAAgB,SAAhBA,EAAiB/sB,EAAQmpB,GAC3B,QAAKA,IAGInpB,IAAWmpB,GAIT4D,EAAc/sB,EAAQmpB,EAAM6D,eAE3C,ECjBe,IAAIxa,I,gBCKbya,GAAoB,IAAInT,QAMxBoT,GAAY,IAAIpT,QAChBqT,GAAuB,SAACC,GAC1B,IAAMjsB,EAAW8rB,GAAkB9U,IAAIiV,EAAMx1B,QAC7CuJ,GAAYA,EAASisB,EACzB,EACMC,GAA2B,SAACC,GAC9BA,EAAQpE,QAAQiE,GACpB,EAoBA,SAASI,GAAoBl1B,EAASP,EAASqJ,GAC3C,IAAMqsB,EApBV,SAAkC,GAAsB,IAApBnQ,EAAI,EAAJA,KAASvlB,GAAO,cAC1C21B,EAAapQ,GAAQqQ,SAItBR,GAAUza,IAAIgb,IACfP,GAAU1U,IAAIiV,EAAY,CAAC,GAE/B,IAAME,EAAgBT,GAAU/U,IAAIsV,GAC9B7qB,EAAMgrB,KAAKC,UAAU/1B,GAQ3B,OAHK61B,EAAc/qB,KACf+qB,EAAc/qB,GAAO,IAAIkrB,qBAAqBT,IAA0B,QAAEhQ,KAAAA,GAASvlB,KAEhF61B,EAAc/qB,EACzB,CAEsCmrB,CAAyBj2B,GAG3D,OAFAm1B,GAAkBzU,IAAIngB,EAAS8I,GAC/BqsB,EAA0BQ,QAAQ31B,GAC3B,WACH40B,GAAkBb,OAAO/zB,GACzBm1B,EAA0BS,UAAU51B,EACxC,CACJ,CC3BA,IAAM61B,GAAiB,CACnB/oB,KAAM,EACN8Y,IAAK,GAET,SAASkQ,GAAwBC,EAAe5oB,EAAOwU,EAAe,GAAqD,IAAnDqD,EAAI,EAAJA,KAAcgR,EAAU,EAAlBC,OAAM,IAAcC,OAAAA,OAAM,IAAG,SAAM,EAAEC,EAAI,EAAJA,MAC/Gp2B,EAAAA,EAAAA,YAAU,WACN,GAAKg2B,EAAL,CAEA,IAAMt2B,EAAU,CACZulB,KAAe,OAATA,QAA0B,IAATA,OAAkB,EAASA,EAAK/kB,QACvD+1B,WAAAA,EACAI,UAA6B,kBAAXF,EAAsBA,EAASL,GAAeK,IAiCpE,OAAOhB,GAAoBvT,EAAc6E,cAAe/mB,GA/B3B,SAACs1B,GAC1B,IAAQsB,EAAmBtB,EAAnBsB,eAIR,GAAIlpB,EAAMmpB,WAAaD,IAEvBlpB,EAAMmpB,SAAWD,GAKbF,GAASE,IAAkBlpB,EAAMopB,gBAArC,CAGSF,IACLlpB,EAAMopB,gBAAiB,GAEvB5U,EAAcoB,gBACdpB,EAAcoB,eAAeC,UAAU5a,GAAckpB,OAAQ+E,GAMjE,IAAMhP,EAAQ1F,EAAcW,WACtBxZ,EAAWutB,EACXhP,EAAMmP,gBACNnP,EAAMoP,gBACZ3tB,GAAYA,EAASisB,EAZrB,CAaJ,GApCU,CAsCd,GAAG,CAACgB,EAAe/Q,EAAMgR,EAAYE,GACzC,CAMA,SAASQ,GAA+BX,EAAe5oB,EAAOwU,EAAe,GAAqB,QAAnBmI,SAAAA,OAAQ,IAAG,GAAI,GAC1F/pB,EAAAA,EAAAA,YAAU,WACDg2B,GAAkBjM,GAavB6M,uBAAsB,WAClBxpB,EAAMopB,gBAAiB,EACvB,IAAQC,EAAoB7U,EAAcW,WAAlCkU,gBACRA,GAAmBA,EAAgB,MAC/B7U,EAAcoB,gBACdpB,EAAcoB,eAAeC,UAAU5a,GAAckpB,QAAQ,EAErE,GACJ,GAAG,CAACyE,GACR,CCzFA,IAAMa,GAAoB,CACtBC,OAAQpP,IDDZ,SAAqB,GAAkF,IAAhF9F,EAAa,EAAbA,cAAemV,EAAW,EAAXA,YAAaN,EAAe,EAAfA,gBAAiBC,EAAe,EAAfA,gBAAe,IAAEM,SAAAA,OAAQ,IAAG,GAAC,EAAC,EACxF5pB,GAAQ8a,EAAAA,EAAAA,QAAO,CACjBsO,gBAAgB,EAChBD,UAAU,IAEVP,EAAgB5mB,QAAQ2nB,GAAeN,GAAmBC,GAC1DM,EAASZ,MAAQhpB,EAAMlN,QAAQs2B,iBAC/BR,GAAgB,IACgC,qBAAzBN,qBACrBiB,GACAZ,IACMC,EAAe5oB,EAAMlN,QAAS0hB,EAAeoV,EAC7D,ICVIC,IAAKvP,ICIT,SAAuB,GAA8D,IAA5DwP,EAAK,EAALA,MAAOC,EAAU,EAAVA,WAAYC,EAAW,EAAXA,YAAaC,EAAQ,EAARA,SAAUzV,EAAa,EAAbA,cACzD0V,EAAoBJ,GAASC,GAAcC,GAAeC,EAC1DE,GAAarP,EAAAA,EAAAA,SAAO,GACpBsP,GAA4BtP,EAAAA,EAAAA,QAAO,MAInCuP,EAAe,CACjB93B,UAAWw3B,GAAcD,GAASE,GAAeM,IAErD,SAASC,IACLH,EAA0Bt3B,SAAWs3B,EAA0Bt3B,UAC/Ds3B,EAA0Bt3B,QAAU,IACxC,CACA,SAAS03B,IAKL,OAJAD,IACAJ,EAAWr3B,SAAU,EACrB0hB,EAAcoB,gBACVpB,EAAcoB,eAAeC,UAAU5a,GAAcqpB,KAAK,IACtDzrB,GACZ,CACA,SAAS4xB,EAAYl6B,EAAOwF,GACnBy0B,MAMJjD,GAAc/S,EAAc6E,cAAe9oB,EAAM6B,QAE5C03B,GAASA,EAAMv5B,EAAOwF,GADtBi0B,GAAeA,EAAYz5B,EAAOwF,GAE5C,CACA,SAAS20B,EAAgBn6B,EAAOwF,GACvBy0B,KAELR,GAAeA,EAAYz5B,EAAOwF,EACtC,CACA,SAASu0B,EAAc/5B,EAAOwF,GAC1Bw0B,IACIJ,EAAWr3B,UAEfq3B,EAAWr3B,SAAU,EACrBs3B,EAA0Bt3B,QAAUsC,EAAKpB,EAAgBJ,OAAQ,YAAa62B,EAAaJ,GAAer2B,EAAgBJ,OAAQ,gBAAiB82B,EAAiBL,IAIpK7V,EAAcoB,gBACVpB,EAAcoB,eAAeC,UAAU5a,GAAcqpB,KAAK,GAC9DyF,GAAcA,EAAWx5B,EAAOwF,GACpC,CACA9B,EAAgBugB,EAAe,cAAe0V,EAAoBI,OAAgBzvB,EAAWwvB,GAC7FhQ,GAAiBkQ,EACrB,IDvDII,MAAOrQ,IEAX,SAAyB,GAA+B,IAA7BsQ,EAAU,EAAVA,WAAYpW,EAAa,EAAbA,cAC3BoB,EAAmBpB,EAAnBoB,eAORljB,EAAY8hB,EAAe,QAASoW,EANpB,WACZhV,GAAkBA,EAAeC,UAAU5a,GAAcmpB,OAAO,EACpE,OAI2DvpB,GAC3DnI,EAAY8hB,EAAe,OAAQoW,EAJpB,WACXhV,GAAkBA,EAAeC,UAAU5a,GAAcmpB,OAAO,EACpE,OAEyDvpB,EAC7D,IFTIgwB,MAAOvQ,ILQX,SAAyB,GAA0D,IAAxDwQ,EAAY,EAAZA,aAAcC,EAAU,EAAVA,WAAYC,EAAU,EAAVA,WAAYxW,EAAa,EAAbA,cAC7DvgB,EAAgBugB,EAAe,eAAgBsW,GAAgBE,EACzD1D,GAAiB9S,GAAe,EAAMsW,QACtCjwB,EAAW,CAAEtI,SAAUu4B,IAC7B72B,EAAgBugB,EAAe,eAAgBuW,GAAcC,EACvD1D,GAAiB9S,GAAe,EAAOuW,QACvClwB,EAAW,CAAEtI,SAAUw4B,GACjC,KQxBME,GAAuB,CAAEn4B,QAAS,MAClCo4B,GAA2B,CAAEp4B,SAAS,GCC5C,SAASq4B,KAEL,GADAD,GAAyBp4B,SAAU,EAC9Ba,EAAAA,EAEL,GAAIC,OAAOw3B,WAAY,CACnB,IAAMC,EAAmBz3B,OAAOw3B,WAAW,4BACrCE,EAA8B,WAAH,OAAUL,GAAqBn4B,QAAUu4B,EAAiBE,OAAO,EAClGF,EAAiBG,YAAYF,GAC7BA,GACJ,MAEIL,GAAqBn4B,SAAU,CAEvC,C,gBCdM24B,GAAQ,CACV,gBACA,sBACA,eACA,oBACA,SACA,SACA,oBACA,0BACA,iBACA,uBACA,gBACA,WAEJ,SAASC,KACL,IAAMC,EAAWF,GAAM7lB,KAAI,kBAAM,IAAIgmB,GAAAA,CAAqB,IACpDC,EAAoB,CAAC,EACrBC,EAAa,CACfC,kBAAmB,kBAAMJ,EAASjI,SAAQ,SAACsI,GAAO,OAAKA,EAAQC,OAAO,GAAC,EACvEC,oBAAqB,SAAChS,GAClBuR,GAAM/H,SAAQ,SAAChwB,GACX,IAAI+H,EACE0wB,EAAK,KAAOz4B,EACZ04B,EAAelS,EAAMiS,GAEQ,QAAlC1wB,EAAKowB,EAAkBn4B,UAA0B,IAAP+H,GAAyBA,EAAG4G,KAAKwpB,GAExEO,IACAP,EAAkBn4B,GAAQo4B,EAAWK,GAAIC,GAEjD,GACJ,GAMJ,OAJAT,EAASjI,SAAQ,SAACsI,EAASj0B,GACvB+zB,EAAW,KAAOL,GAAM1zB,IAAM,SAACjG,GAAO,OAAKk6B,EAAQ5N,IAAItsB,EAAQ,EAC/Dg6B,EAAW,SAAWL,GAAM1zB,IAAM,kBAAai0B,EAAQK,OAAM,MAAdL,EAAO,UAAgB,CAC1E,IACOF,CACX,CCnCA,SAASQ,GAA4Bz5B,EAAS0O,EAAMiS,GAChD,IAAQsP,EAAevhB,EAAfuhB,WACR,IAAK,IAAM1lB,KAAOmE,EAAM,CACpB,IAAMgrB,EAAYhrB,EAAKnE,GACjBovB,EAAYhZ,EAAKpW,GACvB,IAAI6kB,EAAAA,GAAAA,GAAcsK,GAKd15B,EAAQsuB,SAAS/jB,EAAKmvB,GAClBvK,GAAwBc,IACxBA,EAAW1E,IAAIhhB,QAUlB,IAAI6kB,EAAAA,GAAAA,GAAcuK,GAKnB35B,EAAQsuB,SAAS/jB,GAAK6c,EAAAA,GAAAA,GAAYsS,IAC9BvK,GAAwBc,IACxBA,EAAW3D,OAAO/hB,QAGrB,GAAIovB,IAAcD,EAMnB,GAAI15B,EAAQquB,SAAS9jB,GAAM,CACvB,IAAMqvB,EAAgB55B,EAAQimB,SAAS1b,IAEtCqvB,EAAcC,aAAeD,EAAczZ,IAAIuZ,EACpD,KACK,CACD,IAAMI,EAAc95B,EAAQ+5B,eAAexvB,GAC3CvK,EAAQsuB,SAAS/jB,GAAK6c,EAAAA,GAAAA,QAA4Bpf,IAAhB8xB,EAA4BA,EAAcJ,GAChF,CAER,CAEA,IAAK,IAAMnvB,KAAOoW,OACI3Y,IAAd0G,EAAKnE,IACLvK,EAAQg6B,YAAYzvB,GAE5B,OAAOmE,CACX,C,IChCIurB,G,yCCVEC,GAAe5sB,OAAOT,KAAKstB,GAAAA,GAC3BC,GAAcF,GAAa51B,OAC3Bqd,GAAgB,SAAH,WAAM0Y,SAAAA,OAAQ,IAAG,KAAE,EAAEC,EAAK,EAALA,MAAOnG,EAAa,EAAbA,cAAe3F,EAAoB,EAApBA,qBAAsBzjB,EAAkB,EAAlBA,mBAA4BwvB,EAAc,EAAtBC,OAAwBC,EAAqB,EAArBA,sBAAuBC,EAA0B,EAA1BA,2BAA4B1J,EAAgB,EAAhBA,iBAAkB2J,EAA2B,EAA3BA,4BAA2B,OAAQ,YAA2G,IAS3U3vB,EAuCA4vB,EAhDmOjzB,EAAM,EAANA,OAAQ0f,EAAK,EAALA,MAAOwT,EAAU,EAAVA,WAAY7G,EAAqB,EAArBA,sBAAuB8G,EAAW,EAAXA,YAAaC,EAAmB,EAAnBA,oBAAwBt7B,EAAU,UAAH,6CAAG,CAAC,EACrUu7B,GAAY,EACRC,EAA8BH,EAA9BG,aAAcC,EAAgBJ,EAAhBI,YAYhBjC,EAAaJ,KAMbpvB,EAAS,IAAI0xB,IAKbC,EAAqB,IAAID,IAM3BE,EAAmB,CAAC,EAKlBC,GAAa,UACZL,GAKDM,EAAgBlU,EAAMnB,SAAU,UAAK+U,GAAiB,CAAC,EAW7D,SAAST,IACAxvB,GAAagwB,IAElBQ,IACAjB,EAAevvB,EAAUkwB,EAAa7T,EAAMZ,MAAOzmB,EAAQ0iB,YAC/D,CACA,SAAS8Y,IACLlB,EAAMt6B,EAASk7B,EAAaD,EAAcx7B,EAAS4nB,EACvD,CACA,SAAS3O,IACLugB,EAAWwC,aAAaR,EAC5B,CAIA,SAASS,EAAkBnxB,EAAKjE,GAC5B,IAAMq1B,EAAiBr1B,EAAMs1B,UAAS,SAAC9B,GACnCmB,EAAa1wB,GAAOuvB,EACpBzS,EAAMzN,UAAY3V,EAAAA,GAAAA,OAAYyU,GAAQ,GAAO,EACjD,IACMmjB,EAAwBv1B,EAAMw1B,gBAAgB97B,EAAQ+7B,gBAC5DX,EAAmBjb,IAAI5V,GAAK,WACxBoxB,IACAE,GACJ,GACJ,CAWA,MAA+ClB,EAA4BtT,GAAnE4I,EAAU,EAAVA,WAAe+L,GAAmB,cAC1C,IAAK,IAAMzxB,KAAOyxB,EAAqB,CACnC,IAAM11B,EAAQ01B,EAAoBzxB,QACRvC,IAAtBizB,EAAa1wB,KAAsB6kB,EAAAA,GAAAA,GAAc9oB,KACjDA,EAAM6Z,IAAI8a,EAAa1wB,IAAM,GACzB4kB,GAAwBc,IACxBA,EAAW1E,IAAIhhB,GAG3B,CAIA,GAAI8c,EAAM5d,OACN,IAAK,IAAMc,KAAO8c,EAAM5d,OAAQ,CAC5B,IAAMnD,EAAQ+gB,EAAM5d,OAAOc,QACDvC,IAAtBizB,EAAa1wB,KAAsB6kB,EAAAA,GAAAA,GAAc9oB,IACjDA,EAAM6Z,IAAI8a,EAAa1wB,GAE/B,CAKJ,IAAM0xB,GAA0BC,EAAAA,GAAAA,GAAsB7U,GAChD8U,GAAkBC,EAAAA,GAAAA,GAAc/U,GAChCrnB,GAAU,gBACZq6B,SAAAA,EAKAp6B,QAAS,KAIT2pB,MAAOjiB,EAASA,EAAOiiB,MAAQ,EAAI,EACnCjiB,OAAAA,EACA00B,SAAU,IAAIliB,IAId0gB,WAAAA,EACAtK,mBAAoB,KAMpBZ,gBAAiBwM,EAAkB,IAAIhiB,SAAQnS,EAO/Cs0B,eAAWt0B,EASXorB,uBAAwBjkB,QAAmB,OAAXxH,QAA8B,IAAXA,OAAoB,EAASA,EAAOqzB,aAKvFhH,sBAAAA,EAMAgH,UAAW,kBAAM7rB,QAAQnE,EAAS,EAClCuxB,MAAK,SAACC,GACFxB,GAAY,EACZhwB,EAAWhL,EAAQC,QAAUu8B,EACzBx8B,EAAQ0iB,YACR1iB,EAAQ0iB,WAAW6Z,MAAMC,GAEzBL,GAAmBx0B,IAAWs0B,IAC9BrB,EAAmC,OAAXjzB,QAA8B,IAAXA,OAAoB,EAASA,EAAO80B,gBAAgBz8B,IAEnGyJ,EAAOonB,SAAQ,SAACvqB,EAAOiE,GAAG,OAAKmxB,EAAkBnxB,EAAKjE,EAAM,IACvD+xB,GAAyBp4B,SAC1Bq4B,KAEJt4B,EAAQuwB,mBACoB,UAAxBwK,IAE8B,WAAxBA,GAEI3C,GAAqBn4B,SACxB,OAAX0H,QAA8B,IAAXA,GAA6BA,EAAO00B,SAAS9Q,IAAIvrB,GACpEA,EAAQ08B,SAASrV,EACrB,EAIAsV,QAAO,WACH,IAAI/zB,EAC0B,QAA7BA,EAAK5I,EAAQ0iB,kBAA+B,IAAP9Z,GAAyBA,EAAG+zB,UAClEj4B,EAAAA,GAAAA,OAAkBgU,GAClBhU,EAAAA,GAAAA,OAAkB81B,GAClBY,EAAmBvK,SAAQ,SAACvE,GAAM,OAAKA,GAAQ,IACrB,OAA1BsO,QAA4D,IAA1BA,GAA4CA,IACnE,OAAXjzB,QAA8B,IAAXA,GAA6BA,EAAO00B,SAAStI,OAAO/zB,GACvEi5B,EAAWC,oBACXluB,OAAWhD,EACXgzB,GAAY,CAChB,EACA4B,aAAY,SAACC,EAAeC,EAAUC,EAAmBC,EAAcC,EAA2BC,GAC9F,IAAMC,EAAW,GAQjB,IAAK,IAAIj4B,EAAI,EAAGA,EAAIk1B,GAAal1B,IAAK,CAClC,IAAMrE,EAAOq5B,GAAah1B,GAC1B,EAAiCi1B,GAAAA,EAAmBt5B,GAA5Cu8B,EAAS,EAATA,UAAWC,EAAS,EAATA,UAMfD,EAAUP,IAAkBQ,GAC5BF,EAASz5B,MAAK45B,EAAAA,EAAAA,eAAcD,GAAW,gBACnC9yB,IAAK1J,GACFg8B,GAAa,IAChBlb,cAAe3hB,KAG3B,CACA,IAAKA,EAAQ0iB,YAAcua,EAA2B,CAClDj9B,EAAQ0iB,WAAa,IAAIua,EAA0BD,EAAch9B,EAAQu9B,kBAAmB51B,GAAUA,EAAO+a,YAC7G,IAAQyI,EAA2D0R,EAA3D1R,SAAUtjB,EAAiDg1B,EAAjDh1B,OAAQhC,EAAyCg3B,EAAzCh3B,KAAMme,EAAmC6Y,EAAnC7Y,gBAAiBwZ,EAAkBX,EAAlBW,aACjDx9B,EAAQ0iB,WAAWgJ,WAAW,CAC1BP,SAAAA,EACAtjB,OAAAA,EACA41B,oBAAqBtuB,QAAQtJ,IACxBme,IAAmBE,EAAAA,EAAAA,GAAYF,GACpCrC,cAAe3hB,EACf+7B,eAAgB,kBAAM/7B,EAAQ+7B,gBAAgB,EAQ9C2B,cAAiC,kBAAX71B,EAAsBA,EAAS,OACrD81B,uBAAwBT,EACxBM,aAAAA,GAER,CACA,OAAOL,CACX,EAIAV,gBAAe,SAAC3L,GACZ,IAAIloB,EACEg1B,EAAqB59B,EAAQ69B,wBACnC,GAAID,EAEA,OAD8C,QAA7Ch1B,EAAKg1B,EAAmBjO,uBAAoC,IAAP/mB,GAAyBA,EAAG2iB,IAAIuF,GAC/E,kBAAM8M,EAAmBjO,gBAAgBoE,OAAOjD,EAAM,CAErE,EACAE,iBAAgB,SAAC8M,GAIb,OAAK9M,GAAoBqJ,IAAayD,EAAMzD,SAErCrJ,EAAiBhxB,EAAQwmB,cAAesX,EAAMtX,eAD1C,CAEf,EAKAqX,sBAAuB,kBAAM1B,EAAkBn8B,EAAqB,OAAX2H,QAA8B,IAAXA,OAAoB,EAASA,EAAOk2B,uBAAuB,EAIvIE,YAAa,kBAAM1W,EAAM8D,QAAQ,EAIjC3E,YAAa,kBAAMxb,CAAQ,EAI3B+uB,eAAgB,SAACxvB,GAAG,OAAK0wB,EAAa1wB,EAAI,EAC1CyzB,eAAgB,SAACzzB,EAAKjE,GAAK,OAAM20B,EAAa1wB,GAAOjE,CAAK,EAM1Di3B,gBAAiB,kBAAMtC,CAAY,EAKnCgD,cAAa,SAACC,GACNl+B,EAAQs8B,YAAc4B,IAE1Bl+B,EAAQs8B,UAAY4B,EACpBl+B,EAAQ+7B,iBACZ,EAQAvN,qBAAoB,SAACjvB,GAA0B,IAAlB4+B,IAAY,UAAH,+CAClC,OAAO3P,EAAqBxuB,EAAST,EAAQ8nB,EAAO8W,EACxD,EAMApzB,mBAAkB,WACd,OAAOA,EAAmBC,EAAUqc,EACxC,EAKAiH,SAAQ,SAAC/jB,EAAKjE,GAENtG,EAAQquB,SAAS9jB,IACjBvK,EAAQg6B,YAAYzvB,GACxBd,EAAO0W,IAAI5V,EAAKjE,GAChB20B,EAAa1wB,GAAOjE,EAAMwZ,MAC1B4b,EAAkBnxB,EAAKjE,EAC3B,EAIA0zB,YAAW,SAACzvB,GACR,IAAI3B,EACJa,EAAOsqB,OAAOxpB,GACyB,QAAtC3B,EAAKwyB,EAAmBtb,IAAIvV,UAAyB,IAAP3B,GAAyBA,IACxEwyB,EAAmBrH,OAAOxpB,UACnB0wB,EAAa1wB,GACpBmwB,EAA2BnwB,EAAK2wB,EACpC,EAIA7M,SAAU,SAAC9jB,GAAG,OAAKd,EAAO2Q,IAAI7P,EAAI,EAKlC0b,SAAQ,SAAC1b,EAAK+S,GACV,GAAI+J,EAAM5d,QAAU4d,EAAM5d,OAAOc,GAC7B,OAAO8c,EAAM5d,OAAOc,GAExB,IAAIjE,EAAQmD,EAAOqW,IAAIvV,GAKvB,YAJcvC,IAAV1B,QAAwC0B,IAAjBsV,IACvBhX,GAAQ8gB,EAAAA,GAAAA,GAAY9J,GACpBtd,EAAQsuB,SAAS/jB,EAAKjE,IAEnBA,CACX,EAIA4nB,aAAc,SAACplB,GAAQ,OAAKW,EAAOonB,QAAQ/nB,EAAS,EAMpDgmB,UAAW,SAACvkB,GAAG,YAA2BvC,IAAtBizB,EAAa1wB,GAC3B0wB,EAAa1wB,GACbkwB,EAAsBzvB,EAAUT,EAAK9K,EAAQ,EAKnDsvB,cAAa,SAACxkB,EAAKjE,GACfg1B,EAAW/wB,GAAOjE,CACtB,EAKA6tB,cAAa,SAAC5pB,GACV,IAAI3B,EACIsd,EAAYmB,EAAZnB,QACFkY,EAAsC,kBAAZlY,GAA2C,kBAAZA,EACN,QAAlDtd,GAAKqlB,EAAAA,GAAAA,GAAwB5G,EAAOnB,UAA6B,IAAPtd,OAAgB,EAASA,EAAG2B,QACvFvC,EAIN,GAAIke,QAAgCle,IAArBo2B,EACX,OAAOA,EAMX,GAAIjK,EAAe,CACf,IAAM50B,EAAS40B,EAAc9M,EAAO9c,GACpC,QAAevC,IAAXzI,KAAyB6vB,EAAAA,GAAAA,GAAc7vB,GACvC,OAAOA,CACf,CAKA,YAA8ByI,IAAvBuzB,EAAchxB,SACIvC,IAArBo2B,OACEp2B,EACAszB,EAAW/wB,EACrB,GAEG0uB,GAAU,IAIbqB,MAAK,WAED,OADAkB,IACON,CACX,EAIAa,eAAc,WACV93B,EAAAA,GAAAA,OAAYu2B,GAAQ,GAAO,EAC/B,EAOAjX,WAAYiX,EAKZkC,SAAQ,SAAC2B,IACDA,EAAS9X,mBAAqBc,EAAMd,oBACpCvmB,EAAQ+7B,iBAEZ1U,EAAQgX,EACRpF,EAAWI,oBAAoBgF,GAC/BhD,EAAmB5B,GAA4Bz5B,EAAS26B,EAA4BtT,GAAQgU,EAChG,EACA/Y,SAAU,kBAAM+E,CAAK,EAKrBiX,WAAY,SAACz9B,GAAW,IAAI+H,EAAI,OAAiC,QAAzBA,EAAKye,EAAMkX,gBAA6B,IAAP31B,OAAgB,EAASA,EAAG/H,EAAO,EAI5G8e,qBAAsB,kBAAM0H,EAAMxI,UAAU,EAC5C4E,sBAAuB,WACnB,OAAO4D,EAAMzkB,kBACjB,EAIA6vB,kBAAiB,WAAwB,IAAvB+L,EAAgB,UAAH,8CAC3B,GAAIA,EACA,OAAkB,OAAX72B,QAA8B,IAAXA,OAAoB,EAASA,EAAO8qB,oBAClE,IAAKwJ,EAAyB,CAC1B,IAAMtT,GAAsB,OAAXhhB,QAA8B,IAAXA,OAAoB,EAASA,EAAO8qB,sBAAwB,CAAC,EAIjG,YAHsBzqB,IAAlBqf,EAAMnB,UACNyC,EAAQzC,QAAUmB,EAAMnB,SAErByC,CACX,CAEA,IADA,IAAMA,EAAU,CAAC,EACRzjB,EAAI,EAAGA,EAAIu5B,GAAiBv5B,IAAK,CACtC,IAAMrE,EAAO69B,GAAax5B,GACpB4tB,EAAOzL,EAAMxmB,KACfmyB,EAAAA,GAAAA,GAAeF,KAAkB,IAATA,KACxBnK,EAAQ9nB,GAAQiyB,EAExB,CACA,OAAOnK,CACX,IAEJ,OAAO3oB,CACX,CAAC,EACK0+B,GAAe,CAAC,WAAS,gBAAKtN,KAC9BqN,GAAkBC,GAAap6B,O,wBDzf/Bq6B,GAAiB,IAAIxkB,IAAI,CAC3B,QACA,SACA,MACA,OACA,QACA,SACA,IACA,MAEEykB,GAAkB,SAACr0B,GAAG,OAAKo0B,GAAevkB,IAAI7P,EAAI,EAIlDs0B,GAAsB,SAACv4B,EAAOF,GAGhCE,EAAM6Z,IAAI/Z,GAAI,GACdE,EAAM6Z,IAAI/Z,EACd,EACM04B,GAAgB,SAACr9B,GAAC,OAAKA,IAAM0O,GAAAA,IAAU1O,IAAM6nB,GAAAA,EAAE,GAErD,SAAW2Q,GACPA,EAA4B,MAAI,QAChCA,EAA6B,OAAI,SACjCA,EAA2B,KAAI,OAC/BA,EAA4B,MAAI,QAChCA,EAA0B,IAAI,MAC9BA,EAA6B,OAAI,QACpC,CAPD,CAOGA,KAAyBA,GAAuB,CAAC,IACpD,IAAM8E,GAAmB,SAACC,EAAQC,GAAG,OAAKjvB,WAAWgvB,EAAO5hB,MAAM,MAAM6hB,GAAK,EACvEC,GAAyB,SAACC,EAAMC,GAAI,OAAK,SAACC,EAAO,GAAkB,IAAhBv0B,EAAS,EAATA,UACrD,GAAkB,SAAdA,IAAyBA,EACzB,OAAO,EACX,IAAMw0B,EAAWx0B,EAAU+E,MAAM,sBACjC,GAAIyvB,EACA,OAAOP,GAAiBO,EAAS,GAAIF,GAGrC,IAAMJ,EAASl0B,EAAU+E,MAAM,oBAC/B,OAAImvB,EACOD,GAAiBC,EAAO,GAAIG,GAG5B,CAGnB,CAAC,EACKI,GAAgB,IAAIplB,IAAI,CAAC,IAAK,IAAK,MACnCqlB,GAAgCC,GAAAA,EAAAA,QAA0B,SAACl1B,GAAG,OAAMg1B,GAAcnlB,IAAI7P,EAAI,IAChG,SAASm1B,GAAgC/d,GACrC,IAAMge,EAAoB,GAW1B,OAVAH,GAA8B3O,SAAQ,SAACtmB,GACnC,IAAMjE,EAAQqb,EAAcsE,SAAS1b,QACvBvC,IAAV1B,IACAq5B,EAAkBj8B,KAAK,CAAC6G,EAAKjE,EAAMwZ,QACnCxZ,EAAM6Z,IAAI5V,EAAI+E,WAAW,SAAW,EAAI,GAEhD,IAEIqwB,EAAkBr7B,QAClBqd,EAAc4B,aACXoc,CACX,CACA,IAAMC,GAAmB,CAErBC,MAAO,kBAAGjhC,EAAC,EAADA,EAAC,IAAMkhC,YAAAA,OAAW,IAAG,MAAG,MAAEC,aAAAA,OAAY,IAAG,MAAG,SAAOnhC,EAAE8H,IAAM9H,EAAE6H,IAAMuJ,WAAW8vB,GAAe9vB,WAAW+vB,EAAa,EAC/HC,OAAQ,kBAAGnhC,EAAC,EAADA,EAAC,IAAMohC,WAAAA,OAAU,IAAG,MAAG,MAAEC,cAAAA,OAAa,IAAG,MAAG,SAAOrhC,EAAE6H,IAAM7H,EAAE4H,IAAMuJ,WAAWiwB,GAAcjwB,WAAWkwB,EAAc,EAChIl3B,IAAK,SAACq2B,EAAO,GAAF,IAAIr2B,EAAG,EAAHA,IAAG,OAAOgH,WAAWhH,EAAI,EACxCC,KAAM,SAACo2B,EAAO,GAAF,IAAIp2B,EAAI,EAAJA,KAAI,OAAO+G,WAAW/G,EAAK,EAC3CE,OAAQ,kBAAGtK,EAAC,EAADA,EAAOmK,EAAG,EAAHA,IAAG,OAAOgH,WAAWhH,IAAQnK,EAAE6H,IAAM7H,EAAE4H,IAAI,EAC7DyC,MAAO,kBAAGtK,EAAC,EAADA,EAAOqK,EAAI,EAAJA,KAAI,OAAO+G,WAAW/G,IAASrK,EAAE8H,IAAM9H,EAAE6H,IAAI,EAE9D7H,EAAGsgC,GAAuB,EAAG,IAC7BrgC,EAAGqgC,GAAuB,EAAG,KAE3BiB,GAA2B,SAAC5gC,EAAQoiB,EAAeye,GACrD,IAAMC,EAAa1e,EAAc5W,qBAC3B/K,EAAU2hB,EAAc6E,cACxB8Z,EAAuBtW,iBAAiBhqB,GACtCugC,EAAYD,EAAZC,QACFt5B,EAAS,CAAC,EAGA,SAAZs5B,GACA5e,EAAcqc,eAAe,UAAWz+B,EAAOghC,SAAW,SAK9DH,EAAYvP,SAAQ,SAACtmB,GACjBtD,EAAOsD,GAAOq1B,GAAiBr1B,GAAK81B,EAAYC,EACpD,IAEA3e,EAAc4B,aACd,IAAMid,EAAa7e,EAAc5W,qBAQjC,OAPAq1B,EAAYvP,SAAQ,SAACtmB,GAGjB,IAAMjE,EAAQqb,EAAcsE,SAAS1b,GACrCs0B,GAAoBv4B,EAAOW,EAAOsD,IAClChL,EAAOgL,GAAOq1B,GAAiBr1B,GAAKi2B,EAAYF,EACpD,IACO/gC,CACX,EAmHA,SAASkhC,GAAe9e,EAAepiB,EAAQ0H,EAAQwnB,GACnD,OAjNqB,SAAClvB,GACtB,OAAO+N,OAAOT,KAAKtN,GAAQuN,KAAK8xB,GACpC,CA+MW8B,CAAiBnhC,GAnHa,SAACoiB,EAAepiB,GAA4C,IAApC0H,EAAS,UAAH,6CAAG,CAAC,EAAGwnB,EAAgB,UAAH,6CAAG,CAAC,EAC3FlvB,GAAS,UAAKA,GACdkvB,GAAgB,UAAKA,GACrB,IAAMkS,EAAuBrzB,OAAOT,KAAKtN,GAAQie,OAAOohB,IAGpDgC,EAAyB,GACzBC,GAAsC,EACpCC,EAAuB,GA4E7B,GA3EAH,EAAqB9P,SAAQ,SAACtmB,GAC1B,IAAMjE,EAAQqb,EAAcsE,SAAS1b,GACrC,GAAKoX,EAAc0M,SAAS9jB,GAA5B,CAEA,IAGIw2B,EAHA56B,EAAOc,EAAOsD,GACdy2B,EAAWpT,GAAuBznB,GAChCC,EAAK7G,EAAOgL,GAMlB,IAAImV,EAAAA,GAAAA,GAAkBtZ,GAAK,CACvB,IAAM66B,EAAe76B,EAAG9B,OAClB48B,EAAsB,OAAV96B,EAAG,GAAc,EAAI,EACvCD,EAAOC,EAAG86B,GACVF,EAAWpT,GAAuBznB,GAClC,IAAK,IAAIjB,EAAIg8B,EAAWh8B,EAAI+7B,EAAc/7B,IACjC67B,EAMSnT,GAAuBxnB,EAAGlB,KALpC67B,EAASnT,GAAuBxnB,EAAGlB,OACd87B,GAChBlC,GAAckC,IAAalC,GAAciC,EAM1D,MAEIA,EAASnT,GAAuBxnB,GAEpC,GAAI46B,IAAaD,EAGb,GAAIjC,GAAckC,IAAalC,GAAciC,GAAS,CAClD,IAAM9gC,EAAUqG,EAAMwZ,MACC,kBAAZ7f,GACPqG,EAAM6Z,IAAInQ,WAAW/P,IAEP,kBAAPmG,EACP7G,EAAOgL,GAAOyF,WAAW5J,GAEpB2O,MAAMC,QAAQ5O,IAAO26B,IAAWzX,GAAAA,KACrC/pB,EAAOgL,GAAOnE,EAAG2M,IAAI/C,YAE7B,MACuB,OAAbgxB,QAAkC,IAAbA,OAAsB,EAASA,EAASl2B,aACvD,OAAXi2B,QAA8B,IAAXA,OAAoB,EAASA,EAAOj2B,aAC9C,IAAT3E,GAAqB,IAAPC,GAGF,IAATD,EACAG,EAAM6Z,IAAI4gB,EAAOj2B,UAAU3E,IAG3B5G,EAAOgL,GAAOy2B,EAASl2B,UAAU1E,IAMhCy6B,IACDD,EACIlB,GAAgC/d,GACpCkf,GAAsC,GAE1CC,EAAqBp9B,KAAK6G,GAC1BkkB,EAAclkB,QACavC,IAAvBymB,EAAclkB,GACRkkB,EAAclkB,GACdhL,EAAOgL,GACjBs0B,GAAoBv4B,EAAOF,GApEzB,CAuEd,IACI06B,EAAqBx8B,OAAQ,CAC7B,IAAM68B,EAAUL,EAAqB5f,QAAQ,WAAa,EACpDngB,OAAOqgC,YACP,KACAC,EAAkBlB,GAAyB5gC,EAAQoiB,EAAemf,GAaxE,OAXIF,EAAuBt8B,QACvBs8B,EAAuB/P,SAAQ,YAAkB,oBAAhBtmB,EAAG,KAAEjE,EAAK,KACvCqb,EAAcsE,SAAS1b,GAAK4V,IAAI7Z,EACpC,IAGJqb,EAAc4B,aAEVziB,EAAAA,GAAyB,OAAZqgC,GACbpgC,OAAOugC,SAAS,CAAEt4B,IAAKm4B,IAEpB,CAAE5hC,OAAQ8hC,EAAiB5S,cAAAA,EACtC,CAEI,MAAO,CAAElvB,OAAAA,EAAQkvB,cAAAA,EAEzB,CAUU8S,CAAiC5f,EAAepiB,EAAQ0H,EAAQwnB,GAChE,CAAElvB,OAAAA,EAAQkvB,cAAAA,EACpB,CE/NA,IAAM+S,GAAkB,SAAC7f,EAAepiB,EAAQ0H,EAAQwnB,GACpD,IAAM1E,E/BuCV,SAA6BpI,EAAe,EAAe8M,GAAe,IAAzBlvB,EAAM,kCAC7CS,EAAU2hB,EAAc6E,cAC9B,KAAMxmB,aAAmByhC,SACrB,MAAO,CAAEliC,OAAAA,EAAQkvB,cAAAA,GAiBrB,IAAK,IAAMlkB,KAdPkkB,IACAA,GAAgB,UAAKA,IAGzB9M,EAAcuM,cAAa,SAAC5nB,GACxB,IAAMrG,EAAUqG,EAAMwZ,MACtB,GAAKyJ,GAActpB,GAAnB,CAEA,IAAM8pB,EAAWJ,GAAiB1pB,EAASD,GACvC+pB,GACAzjB,EAAM6Z,IAAI4J,EAHJ,CAId,IAGkBxqB,EAAQ,CACtB,IAAMU,EAAUV,EAAOgL,GACvB,GAAKgf,GAActpB,GAAnB,CAEA,IAAM8pB,EAAWJ,GAAiB1pB,EAASD,GACtC+pB,IAGLxqB,EAAOgL,GAAOwf,EAIV0E,QAAwCzmB,IAAvBymB,EAAclkB,KAC/BkkB,EAAclkB,GAAOtK,GAVb,CAYhB,CACA,MAAO,CAAEV,OAAAA,EAAQkvB,cAAAA,EACrB,C+B5EqBiT,CAAoB/f,EAAepiB,EAAQkvB,GAG5D,OAAOgS,GAAe9e,EAFtBpiB,EAASwqB,EAASxqB,OAE2B0H,EAD7CwnB,EAAgB1E,EAAS0E,cAE7B,E,0DCEA,IAAMkT,GAAa,CACftH,SAAU,MACVI,sBAAqB,SAACmH,EAAYr3B,GAC9B,GAAIimB,GAAAA,EAAAA,IAAmBjmB,GAAM,CACzB,IAAMs3B,EAAcvjB,GAAoB/T,GACxC,OAAOs3B,GAAcA,EAAY7kB,SAAe,CACpD,CAEI,IAXchd,EAWR8hC,GAXQ9hC,EAWyB4hC,EAVxC7gC,OAAOipB,iBAAiBhqB,IAWjBsG,IAASijB,EAAAA,GAAAA,GAAchf,GACvBu3B,EAAc7X,iBAAiB1f,GAC/Bu3B,EAAcv3B,KAAS,EAC7B,MAAwB,kBAAVjE,EAAqBA,EAAM4jB,OAAS5jB,CAE1D,EACA0qB,iBAAgB,SAACrvB,EAAGC,GAMhB,OAAsC,EAA/BD,EAAEogC,wBAAwBngC,GAAS,GAAK,CACnD,EACAuyB,cAAa,SAAC9M,EAAO9c,GACjB,IAAI3B,EACJ,OAA8B,QAAtBA,EAAKye,EAAMZ,aAA0B,IAAP7d,OAAgB,EAASA,EAAG2B,EACtE,EACAQ,mBAAkB,SAAC/K,EAAS,GACxB,OAAO+K,GAAmB/K,EADkB,EAAlB4C,mBAE9B,EAQAo/B,eAAc,SAAChiC,EAAS4hC,EAAYva,GAChC,IAAQd,EAAsBc,EAAtBd,kBACRqb,EAAWnb,MAAM3b,UAAYyb,EACvBA,EAAkB,CAAC,EAAG,IACtB,OAENvmB,EAAQ+7B,gBACZ,EACAkG,iBAAgB,SAACj3B,EAAUk3B,GACvBl3B,EAASyb,MAAM3b,UAAYo3B,EAAazb,MAAM3b,SAClD,EACA4vB,2BAA0B,SAACnwB,EAAK,GAAiB,IAAf43B,EAAI,EAAJA,KAAM1b,EAAK,EAALA,aAC7B0b,EAAK53B,UACLkc,EAAMlc,EACjB,EAKAikB,qBAAoB,SAACxuB,EAAS,EAAF,GAAmF,IAA/E6e,EAAU,EAAVA,WAAY4P,EAAa,EAAbA,cAAkBlvB,GAAM,cAAM6iC,EAAe,EAAfA,gBAAmBpH,IAAY,UAAH,+CAC9F/zB,EAASgoB,GAAU1vB,EAAQsf,GAAc,CAAC,EAAG7e,GAYjD,GARIoiC,IACI3T,IACAA,EAAgB2T,EAAgB3T,IAChClvB,IACAA,EAAS6iC,EAAgB7iC,IACzB0H,IACAA,EAASm7B,EAAgBn7B,KAE7B+zB,EAAW,CACXtM,GAAwB1uB,EAAST,EAAQ0H,GACzC,IAAM0M,EAAS6tB,GAAgBxhC,EAAST,EAAQ0H,EAAQwnB,GACxDA,EAAgB9a,EAAO8a,cACvBlvB,EAASoU,EAAOpU,MACpB,CACA,OAAO,QACHsf,WAAAA,EACA4P,cAAAA,GACGlvB,EAEX,EACAo7B,4BAAAA,GAAAA,EACAL,MAAK,SAACt6B,EAASk7B,EAAaD,EAAcx7B,EAAS4nB,QACrBrf,IAAtBhI,EAAQs8B,YACRpB,EAAYzU,MAAMyX,WAAal+B,EAAQs8B,UACjC,UACA,WAEV+F,EAAAA,GAAAA,GAAgBnH,EAAaD,EAAcx7B,EAAS4nB,EAAMd,kBAC9D,EACAiU,OAAQ8H,GAAAA,GAENC,GAAoB5gB,GAAcggB,I,2DChGlCa,GAAmB7gB,IAAc,kBAChCggB,IAAU,IACbxN,cAAa,SAAC9M,EAAO9c,GACjB,OAAO8c,EAAM9c,EACjB,EACAkwB,sBAAqB,SAACmH,EAAYr3B,GAC9B,IAAI3B,EACJ,OAAI4nB,GAAAA,EAAAA,IAAmBjmB,IACyB,QAAnC3B,EAAK0V,GAAoB/T,UAAyB,IAAP3B,OAAgB,EAASA,EAAGoU,UAAY,GAEhGzS,EAAOk4B,GAAAA,EAAAA,IAAwBl4B,GAA0BA,GAAnBm4B,EAAAA,GAAAA,GAAYn4B,GAC3Cq3B,EAAWe,aAAap4B,GACnC,EACAowB,4BAAAA,GAAAA,EACAL,MAAK,SAACsI,EAAU1H,EAAaD,EAAcx7B,EAAS4nB,IAChDwb,EAAAA,GAAAA,GAAc3H,EAAaD,EAAcx7B,EAAS4nB,EAAMd,kBAC5D,EACAiU,OAAQsI,GAAAA,K,YCpBNC,IAAe,gBACjBC,SCJ2B,SAAC3F,EAAW59B,GACvC,OAAOwjC,EAAAA,GAAAA,GAAe5F,GAChBmF,GAAiB/iC,EAAS,CAAEyjC,4BAA4B,IACxDX,GAAkB9iC,EAAS,CAAEyjC,4BAA4B,GACnE,GDCOhT,IACA0G,IEqBP,SAAS9d,GAAQ3S,EAAMC,GAAqB,IAAjByY,EAAa,UAAH,6CAAG,CAAC,EAC/BvY,GAAQ8oB,EAAAA,GAAAA,GAAcjpB,GAAQA,GAAOihB,EAAAA,GAAAA,GAAYjhB,GAEvD,OADAsa,GAAe,GAAIna,EAAOF,EAAIyY,GACvB,CACHhG,KAAM,kBAAMvS,EAAMuS,MAAM,EACxBsqB,YAAa,kBAAM78B,EAAM68B,aAAa,EAE9C,CCnCA,IAAMC,GAAU,CAAC,UAAW,WAAY,aAAc,eAChDC,GAAaD,GAAQ9+B,OACrBg/B,GAAW,SAACh9B,GAAK,MAAsB,kBAAVA,EAAqB0J,WAAW1J,GAASA,CAAK,EAC3Ei9B,GAAO,SAACj9B,GAAK,MAAsB,kBAAVA,GAAsBgjB,GAAAA,GAAAA,KAAQhjB,EAAM,EACnE,SAASk9B,GAAUjkC,EAAQkkC,EAAQC,EAAMr9B,EAAUs9B,EAAwBC,GACvE,IAAIh7B,EAAI2K,EAAIC,EAAIC,EACZkwB,GACApkC,EAAOud,QAAU5W,EAAI,EAGG,QAAvB0C,EAAK86B,EAAK5mB,eAA4B,IAAPlU,EAAgBA,EAAK,EAAGi7B,GAAgBx9B,IACxE9G,EAAOukC,YAAc59B,EAA8B,QAAzBqN,EAAKkwB,EAAO3mB,eAA4B,IAAPvJ,EAAgBA,EAAK,EAAG,EAAGwwB,GAAiB19B,KAElGu9B,IACLrkC,EAAOud,QAAU5W,EAA8B,QAAzBsN,EAAKiwB,EAAO3mB,eAA4B,IAAPtJ,EAAgBA,EAAK,EAA2B,QAAvBC,EAAKiwB,EAAK5mB,eAA4B,IAAPrJ,EAAgBA,EAAK,EAAGpN,IAK3I,IAAK,IAAInB,EAAI,EAAGA,EAAIm+B,GAAYn+B,IAAK,CACjC,IAAM8+B,EAAc,SAAH,OAAYZ,GAAQl+B,GAAE,UACnC++B,EAAeC,GAAUT,EAAQO,GACjCG,EAAaD,GAAUR,EAAMM,GACjC,QAAqBh8B,IAAjBi8B,QAA6Cj8B,IAAfm8B,EAElCF,IAAiBA,EAAe,GAChCE,IAAeA,EAAa,GACI,IAAjBF,GACI,IAAfE,GACAZ,GAAKU,KAAkBV,GAAKY,IAE5B5kC,EAAOykC,GAAeniC,KAAK6E,IAAIR,EAAIo9B,GAASW,GAAeX,GAASa,GAAa99B,GAAW,IACxFgL,GAAAA,GAAAA,KAAa8yB,IAAe9yB,GAAAA,GAAAA,KAAa4yB,MACzC1kC,EAAOykC,IAAgB,MAI3BzkC,EAAOykC,GAAeG,CAE9B,EAIIV,EAAO95B,QAAU+5B,EAAK/5B,UACtBpK,EAAOoK,OAASzD,EAAIu9B,EAAO95B,QAAU,EAAG+5B,EAAK/5B,QAAU,EAAGtD,GAElE,CACA,SAAS69B,GAAUz6B,EAAQ26B,GACvB,IAAIx7B,EACJ,OAAqC,QAA7BA,EAAKa,EAAO26B,UAAgC,IAAPx7B,EAAgBA,EAAKa,EAAOgjB,YAC7E,CAwBA,IAAMoX,GAAkBQ,GAAS,EAAG,GAAKztB,IACnCmtB,GAAmBM,GAAS,GAAK,IAAM/tB,IAC7C,SAAS+tB,GAAS59B,EAAKC,EAAKyP,GACxB,OAAO,SAAC5E,GAEJ,OAAIA,EAAI9K,EACG,EACP8K,EAAI7K,EACG,EACJyP,EAAO9P,EAASI,EAAKC,EAAK6K,GACrC,CACJ,CCnFA,SAAS+yB,GAAa19B,EAAM29B,GACxB39B,EAAKH,IAAM89B,EAAW99B,IACtBG,EAAKF,IAAM69B,EAAW79B,GAC1B,CAMA,SAAS89B,GAAYr6B,EAAKs6B,GACtBH,GAAan6B,EAAIvL,EAAG6lC,EAAU7lC,GAC9B0lC,GAAan6B,EAAItL,EAAG4lC,EAAU5lC,EAClC,CCVA,SAAS6lC,GAAiB/lC,EAAO0I,EAAWF,EAAOD,EAAa8C,GAM5D,OAJArL,EAAQmL,GADRnL,GAAS0I,EACiB,EAAIF,EAAOD,QACpBc,IAAbgC,IACArL,EAAQmL,GAAWnL,EAAO,EAAIqL,EAAU9C,IAErCvI,CACX,CAsBA,SAASgmC,GAAqB/9B,EAAM0D,EAAY,EAA4BrD,EAAQ29B,GAAY,oBAA/Cr6B,EAAG,KAAEC,EAAQ,KAAEC,EAAS,MAlBzE,SAAyB7D,GAA8F,IAAxFS,EAAY,UAAH,6CAAG,EAAGF,EAAQ,UAAH,6CAAG,EAAGF,EAAS,UAAH,6CAAG,GAAK+C,EAAQ,uCAAEu6B,EAAa,UAAH,6CAAG39B,EAAMg+B,EAAa,UAAH,6CAAGh+B,EAC7G,GAAIyK,GAAAA,GAAAA,KAAahK,GAAY,CACzBA,EAAY2I,WAAW3I,GAEvBA,EADyBnB,EAAI0+B,EAAWn+B,IAAKm+B,EAAWl+B,IAAKW,EAAY,KAC1Cu9B,EAAWn+B,GAC9C,CACA,GAAyB,kBAAdY,EAAX,CAEA,IAAIH,EAAchB,EAAIq+B,EAAW99B,IAAK89B,EAAW79B,IAAKO,GAClDL,IAAS29B,IACTr9B,GAAeG,GACnBT,EAAKH,IAAMi+B,GAAiB99B,EAAKH,IAAKY,EAAWF,EAAOD,EAAa8C,GACrEpD,EAAKF,IAAMg+B,GAAiB99B,EAAKF,IAAKW,EAAWF,EAAOD,EAAa8C,EAL3D,CAMd,CAMI66B,CAAgBj+B,EAAM0D,EAAWC,GAAMD,EAAWE,GAAWF,EAAWG,GAAYH,EAAWnD,MAAOF,EAAQ29B,EAClH,CAIA,IAAMj6B,GAAQ,CAAC,IAAK,SAAU,WACxBC,GAAQ,CAAC,IAAK,SAAU,WAK9B,SAASk6B,GAAoB36B,EAAKG,EAAYm6B,EAAWM,GACrDJ,GAAqBx6B,EAAIvL,EAAG0L,EAAYK,GAAqB,OAAd85B,QAAoC,IAAdA,OAAuB,EAASA,EAAU7lC,EAAiB,OAAdmmC,QAAoC,IAAdA,OAAuB,EAASA,EAAUnmC,GAClL+lC,GAAqBx6B,EAAItL,EAAGyL,EAAYM,GAAqB,OAAd65B,QAAoC,IAAdA,OAAuB,EAASA,EAAU5lC,EAAiB,OAAdkmC,QAAoC,IAAdA,OAAuB,EAASA,EAAUlmC,EACtL,CChDA,SAASmmC,GAAgBpgC,GACrB,OAA2B,IAApBA,EAAMyC,WAAmC,IAAhBzC,EAAMuC,KAC1C,CACA,SAAS89B,GAAYrgC,GACjB,OAAOogC,GAAgBpgC,EAAMhG,IAAMomC,GAAgBpgC,EAAM/F,EAC7D,CACA,SAASqmC,GAAUvjC,EAAGC,GAClB,OAAQD,EAAE/C,EAAE6H,MAAQ7E,EAAEhD,EAAE6H,KACpB9E,EAAE/C,EAAE8H,MAAQ9E,EAAEhD,EAAE8H,KAChB/E,EAAE9C,EAAE4H,MAAQ7E,EAAE/C,EAAE4H,KAChB9E,EAAE9C,EAAE6H,MAAQ9E,EAAE/C,EAAE6H,GACxB,CACA,SAASy+B,GAAYh7B,GACjB,OAAOxD,EAAWwD,EAAIvL,GAAK+H,EAAWwD,EAAItL,EAC9C,C,gBCfMumC,GAAS,WACX,cAAc,eACVviC,KAAKqpB,QAAU,EACnB,CAsGC,OAtGA,2BACD,SAAI7C,IACAgc,EAAAA,GAAAA,IAAcxiC,KAAKqpB,QAAS7C,GAC5BA,EAAK0S,gBACT,GAAC,oBACD,SAAO1S,GAKH,IAJAic,EAAAA,GAAAA,IAAWziC,KAAKqpB,QAAS7C,GACrBA,IAASxmB,KAAK0iC,WACd1iC,KAAK0iC,cAAWv9B,GAEhBqhB,IAASxmB,KAAK6gC,KAAM,CACpB,IAAM6B,EAAW1iC,KAAKqpB,QAAQrpB,KAAKqpB,QAAQ5nB,OAAS,GAChDihC,GACA1iC,KAAKkpB,QAAQwZ,EAErB,CACJ,GAAC,sBACD,SAASlc,GACL,IAMIkc,EANEC,EAAc3iC,KAAKqpB,QAAQuZ,WAAU,SAACC,GAAM,OAAKrc,IAASqc,CAAM,IACtE,GAAoB,IAAhBF,EACA,OAAO,EAKX,IAAK,IAAItgC,EAAIsgC,EAAatgC,GAAK,EAAGA,IAAK,CACnC,IAAMwgC,EAAS7iC,KAAKqpB,QAAQhnB,GAC5B,IAAyB,IAArBwgC,EAAOtjB,UAAqB,CAC5BmjB,EAAWG,EACX,KACJ,CACJ,CACA,QAAIH,IACA1iC,KAAKkpB,QAAQwZ,IACN,EAKf,GAAC,qBACD,SAAQlc,EAAMsc,GACV,IAAI/8B,EACE28B,EAAW1iC,KAAK6gC,KAClBra,IAASkc,IAEb1iC,KAAK0iC,SAAWA,EAChB1iC,KAAK6gC,KAAOra,EACZA,EAAKuc,OACDL,IACAA,EAASv6B,UAAYu6B,EAASxJ,iBAC9B1S,EAAK0S,iBACL1S,EAAKwc,WAAaN,EACdI,IACAtc,EAAKwc,WAAWC,iBAAkB,GAElCP,EAASQ,WACT1c,EAAK0c,SAAWR,EAASQ,SACzB1c,EAAK0c,SAAS9K,aACVsK,EAASS,iBAAmBT,EAAStK,aACzC5R,EAAK0c,SAASE,UAAW,IAEJ,QAApBr9B,EAAKygB,EAAKrE,YAAyB,IAAPpc,OAAgB,EAASA,EAAGs9B,cACzD7c,EAAK8c,eAAgB,IAGP,IADI9c,EAAK5pB,QAAnB2mC,WAEJb,EAASc,QAerB,GAAC,mCACD,WACIxjC,KAAKqpB,QAAQ2E,SAAQ,SAACxH,GAClB,IAAIzgB,EAAI2K,EAAIC,EAAIC,EAAI6yB,EAC0B,QAA7C/yB,GAAM3K,EAAKygB,EAAK5pB,SAASopB,sBAAmC,IAAPtV,GAAyBA,EAAG/D,KAAK5G,GACmB,QAAzG09B,EAAkC,QAA5B9yB,EAAK6V,EAAKkd,oBAAiC,IAAP/yB,OAAgB,GAAUC,EAAKD,EAAG/T,SAASopB,sBAAmC,IAAPyd,GAAyBA,EAAG92B,KAAKiE,EACvJ,GACJ,GAAC,4BACD,WACI5Q,KAAKqpB,QAAQ2E,SAAQ,SAACxH,GAClBA,EAAKre,UAAYqe,EAAK0S,gBAAe,EACzC,GACJ,GACA,gCAIA,WACQl5B,KAAK6gC,MAAQ7gC,KAAK6gC,KAAKqC,WACvBljC,KAAK6gC,KAAKqC,cAAW/9B,EAE7B,KAAC,EAzGU,GCDf,SAASw+B,GAAyB5hC,EAAOylB,EAAWoc,GAOhD,IAAMC,EAAa9hC,EAAMhG,EAAEyI,UAAYgjB,EAAUzrB,EAC3C+nC,EAAa/hC,EAAM/F,EAAEwI,UAAYgjB,EAAUxrB,EAC7CiM,EAAY,eAAH,OAAkB47B,EAAU,eAAOC,EAAU,WAM1D,GADA77B,GAAa,SAAJ,OAAa,EAAIuf,EAAUzrB,EAAC,aAAK,EAAIyrB,EAAUxrB,EAAC,MACrD4nC,EAAiB,CACjB,IAAQ98B,EAA6B88B,EAA7B98B,OAAQC,EAAqB68B,EAArB78B,QAASC,EAAY48B,EAAZ58B,QACrBF,IACAmB,GAAa,UAAJ,OAAcnB,EAAM,UAC7BC,IACAkB,GAAa,WAAJ,OAAelB,EAAO,UAC/BC,IACAiB,GAAa,WAAJ,OAAejB,EAAO,SACvC,CAKA,IAAM+8B,EAAgBhiC,EAAMhG,EAAEuI,MAAQkjB,EAAUzrB,EAC1CioC,EAAgBjiC,EAAM/F,EAAEsI,MAAQkjB,EAAUxrB,EAEhD,MAhCuB,sDA+BvBiM,GAAa,SAAJ,OAAa87B,EAAa,aAAKC,EAAa,MACX,OAAS/7B,CACvD,CCjCA,IAAMg8B,GAAiB,SAACnlC,EAAGC,GAAC,OAAKD,EAAEioB,MAAQhoB,EAAEgoB,KAAK,ECG5Cmd,GAAQ,WACV,cAAc,eACVlkC,KAAKw5B,SAAW,GAChBx5B,KAAKmkC,SAAU,CACnB,CAaC,OAbA,2BACD,SAAIlW,IACAuU,EAAAA,GAAAA,IAAcxiC,KAAKw5B,SAAUvL,GAC7BjuB,KAAKmkC,SAAU,CACnB,GAAC,oBACD,SAAOlW,IACHwU,EAAAA,GAAAA,IAAWziC,KAAKw5B,SAAUvL,GAC1BjuB,KAAKmkC,SAAU,CACnB,GAAC,qBACD,SAAQl+B,GACJjG,KAAKmkC,SAAWnkC,KAAKw5B,SAAS1L,KAAKmW,IACnCjkC,KAAKmkC,SAAU,EACfnkC,KAAKw5B,SAASxL,QAAQ/nB,EAC1B,KAAC,EAjBS,G,YCkBRm+B,GAAgB,CAAC,GAAI,IAAK,IAAK,KAMrC,SAASC,GAAqB,GAA4F,IAA1FC,EAAoB,EAApBA,qBAAsBC,EAAa,EAAbA,cAAeC,EAAa,EAAbA,cAAeC,EAAiB,EAAjBA,kBAAmBtF,EAAc,EAAdA,eACnG,kBACI,WAAYjZ,GAA+G,WAA3GkS,EAAe,UAAH,6CAAG,CAAC,EAAGtzB,EAAS,UAAH,6CAAqB,OAAlBy/B,QAA4C,IAAlBA,OAA2B,EAASA,KAAe,eAOrHvkC,KAAKw5B,SAAW,IAAIliB,IAKpBtX,KAAKpD,QAAU,CAAC,EAMhBoD,KAAK0kC,iBAAkB,EACvB1kC,KAAK8f,oBAAqB,EAO1B9f,KAAKsjC,eAAgB,EAIrBtjC,KAAK2kC,uBAAwB,EAC7B3kC,KAAK4kC,uBAAwB,EAK7B5kC,KAAKqjC,YAAa,EAIlBrjC,KAAK6kC,OAAQ,EAKb7kC,KAAK8kC,YAAa,EAIlB9kC,KAAK+kC,sBAAuB,EAS5B/kC,KAAKwnB,UAAY,CAAEzrB,EAAG,EAAGC,EAAG,GAI5BgE,KAAKglC,cAAgB,IAAI1M,IAEzBt4B,KAAKilC,eAAiB,IAAI3M,IAC1Bt4B,KAAKklC,kBAAoB,WACjB,EAAK7B,aACL,EAAKA,YAAa,EAClB,EAAK8B,oBAEb,EACAnlC,KAAKolC,iBAAmB,WACpB,EAAKC,MAAMrX,QAAQsX,IACnB,EAAKD,MAAMrX,QAAQuX,GACvB,EACAvlC,KAAKwlC,cAAe,EACpBxlC,KAAKy5B,WAAY,EACjBz5B,KAAKylC,kBAAoB,EAKzBzlC,KAAK0lC,YAAc,IAAIpN,IACvBt4B,KAAKkmB,GAAKA,EACVlmB,KAAKo4B,aAAeA,EACpBp4B,KAAKmiB,KAAOrd,EAASA,EAAOqd,MAAQrd,EAAS9E,KAC7CA,KAAK2lC,KAAO7gC,EAAS,GAAH,gBAAOA,EAAO6gC,MAAI,CAAE7gC,IAAU,GAChD9E,KAAK8E,OAASA,EACd9E,KAAK+mB,MAAQjiB,EAASA,EAAOiiB,MAAQ,EAAI,EACzCb,GAAMlmB,KAAKmiB,KAAKyjB,sBAAsB1f,EAAIlmB,MAC1C,IAAK,IAAIqC,EAAI,EAAGA,EAAIrC,KAAK2lC,KAAKlkC,OAAQY,IAClCrC,KAAK2lC,KAAKtjC,GAAG0iC,sBAAuB,EAEpC/kC,KAAKmiB,OAASniB,OACdA,KAAKqlC,MAAQ,IAAInB,GACzB,CAs6BC,OAt6BA,wCACD,SAAiBlmC,EAAM5B,GAInB,OAHK4D,KAAKglC,cAAcztB,IAAIvZ,IACxBgC,KAAKglC,cAAc1nB,IAAItf,EAAM,IAAIk4B,GAAAA,GAE9Bl2B,KAAKglC,cAAc/nB,IAAIjf,GAAM0qB,IAAItsB,EAC5C,GAAC,6BACD,SAAgB4B,GAC6C,IAAzD,IAAM6nC,EAAsB7lC,KAAKglC,cAAc/nB,IAAIjf,GAAM,mBADpC8nC,EAAI,iCAAJA,EAAI,kBAED,OAAxBD,QAAwD,IAAxBA,GAA0CA,EAAoBlP,OAAM,MAA1BkP,EAA8BC,EAC5G,GAAC,0BACD,SAAa9nC,GACT,OAAOgC,KAAKglC,cAAcztB,IAAIvZ,EAClC,GAAC,mCACD,SAAsBkoB,EAAIM,GACtBxmB,KAAKilC,eAAe3nB,IAAI4I,EAAIM,EAChC,GACA,mBAGA,SAAMre,GAAiC,IAC/BpC,EAD+B,OAAvBu9B,EAAgB,UAAH,8CAEzB,IAAItjC,KAAKmI,SAAT,CAEAnI,KAAK6kC,MACD18B,aAAoB49B,YAAmC,QAArB59B,EAAS69B,QAC/ChmC,KAAKmI,SAAWA,EAChB,MAA4CnI,KAAKpD,QAAzC0rB,EAAQ,EAARA,SAAUtjB,EAAM,EAANA,OAAQ8Z,EAAa,EAAbA,cAU1B,GATIA,IAAkBA,EAAc6E,eAChC7E,EAAc4a,MAAMvxB,GAExBnI,KAAKmiB,KAAKkjB,MAAM3c,IAAI1oB,MACG,QAAtB+F,EAAK/F,KAAK8E,cAA2B,IAAPiB,GAAyBA,EAAGyzB,SAAS9Q,IAAI1oB,MACxEA,KAAKkmB,IAAMlmB,KAAKmiB,KAAK8iB,eAAe/T,OAAOlxB,KAAKkmB,IAC5Cod,IAAkBt+B,GAAUsjB,KAC5BtoB,KAAKsjC,eAAgB,GAErBgB,EAAsB,CACtB,IAAI2B,EACEC,EAAsB,WAAH,OAAU,EAAK/jB,KAAKyiB,uBAAwB,CAAK,EAC1EN,EAAqBn8B,GAAU,WAC3B,EAAKga,KAAKyiB,uBAAwB,EAClClmB,aAAaunB,GACbA,EAAiB/nC,OAAOugB,WAAWynB,EAAqB,KACpDpd,GAAAA,EAAAA,yBACAA,GAAAA,EAAAA,wBAA+C,EAC/C,EAAKuc,MAAMrX,QAAQmY,IAE3B,GACJ,CACI7d,GACAtoB,KAAKmiB,KAAKikB,mBAAmB9d,EAAUtoB,OAGd,IAAzBA,KAAKpD,QAAQqZ,SACb6I,IACCwJ,GAAYtjB,IACbhF,KAAKlD,iBAAiB,aAAa,YAA+E,IAC1GiJ,EAAI2K,EAAIC,EAAIC,EAAI6yB,EADc1hC,EAAK,EAALA,MAAOuiB,EAAgB,EAAhBA,iBAAkB+hB,EAAwB,EAAxBA,yBAAkCC,EAAS,EAAjBthC,OAErF,GAAI,EAAKuhC,yBAGL,OAFA,EAAK7pC,YAASyI,OACd,EAAKqhC,oBAAiBrhC,GAI1B,IAAMshC,EAAmI,QAA/G/1B,EAAwC,QAAlC3K,EAAK,EAAKnJ,QAAQof,kBAA+B,IAAPjW,EAAgBA,EAAK+Y,EAAchC,8BAA2C,IAAPpM,EAAgBA,EAAKg2B,GACtK,EAA+D5nB,EAAcW,WAArEknB,EAAsB,EAAtBA,uBAAwBC,EAAyB,EAAzBA,0BAK1BC,GAAiB,EAAKC,eACvBzE,GAAU,EAAKyE,aAAcR,IAC9BD,EAMEU,GAAgCziB,GAAoB+hB,EAC1D,IAAgC,QAA1B11B,EAAK,EAAKqyB,kBAA+B,IAAPryB,OAAgB,EAASA,EAAGxI,WAChE4+B,GACCziB,IACIuiB,IAAkB,EAAKtpB,kBAAoB,CAC5C,EAAKylB,aACL,EAAKU,aAAe,EAAKV,WACzB,EAAKU,aAAaA,kBAAev+B,GAErC,EAAK6hC,mBAAmBjlC,EAAOglC,GAC/B,IAAME,GAAmB,kBAClB9qB,GAAmBsqB,EAAkB,WAAS,IACjD9vB,OAAQgwB,EACR9vB,WAAY+vB,IAEZ9nB,EAAc4O,qBACduZ,EAAiBtxB,MAAQ,EACzBsxB,EAAiB76B,MAAO,GAE5B,EAAKwR,eAAeqpB,EACxB,MAOS3iB,GAC0B,IAA3B,EAAKmhB,mBACL,EAAKU,kBAET,EAAK7c,WAA2D,QAA7Cma,GAAM7yB,EAAK,EAAKhU,SAASopB,sBAAmC,IAAPyd,GAAyBA,EAAG92B,KAAKiE,IAE7G,EAAKk2B,aAAeR,CACxB,GA1FM,CA4Fd,GAAC,qBACD,WACI,IAAIvgC,EAAI2K,EACR1Q,KAAKpD,QAAQ0rB,UAAYtoB,KAAKipB,aAC9BjpB,KAAKmiB,KAAKkjB,MAAM5b,OAAOzpB,MACI,QAA1B+F,EAAK/F,KAAKopB,kBAA+B,IAAPrjB,GAAyBA,EAAG0jB,OAAOzpB,MAC/C,QAAtB0Q,EAAK1Q,KAAK8E,cAA2B,IAAP4L,GAAyBA,EAAG8oB,SAAStI,OAAOlxB,MAC3EA,KAAKmI,cAAWhD,EAChBtD,EAAAA,GAAAA,UAAqB7B,KAAKolC,iBAC9B,GACA,yBACA,WACIplC,KAAK2kC,uBAAwB,CACjC,GAAC,2BACD,WACI3kC,KAAK2kC,uBAAwB,CACjC,GAAC,6BACD,WACI,OAAO3kC,KAAK2kC,uBAAyB3kC,KAAK4kC,qBAC9C,GAAC,oCACD,WACI,IAAI7+B,EACJ,OAAQ/F,KAAK8f,qBACe,QAAtB/Z,EAAK/F,KAAK8E,cAA2B,IAAPiB,OAAgB,EAASA,EAAGwgC,4BAC5D,CACR,GACA,yBACA,WACI,IAAIxgC,EACA/F,KAAKknC,oBAETlnC,KAAKqjC,YAAa,EACI,QAArBt9B,EAAK/F,KAAKqlC,aAA0B,IAAPt/B,GAAyBA,EAAGioB,QAAQmZ,IACtE,GAAC,wBACD,WAAyC,IACjCphC,EAAI2K,EAAIC,EADLy2B,IAAwB,UAAH,+CAE5B,GAAIpnC,KAAKmiB,KAAK+kB,kBACoC,QAA7Cx2B,GAAM3K,EAAK/F,KAAKpD,SAASopB,sBAAmC,IAAPtV,GAAyBA,EAAG/D,KAAK5G,QAI3F,IADC/F,KAAKmiB,KAAKkhB,YAAcrjC,KAAKmiB,KAAKklB,eAC/BrnC,KAAKsjC,cAAT,CAEAtjC,KAAKsjC,eAAgB,EACrB,IAAK,IAAIjhC,EAAI,EAAGA,EAAIrC,KAAK2lC,KAAKlkC,OAAQY,IAAK,CACvC,IAAMmkB,EAAOxmB,KAAK2lC,KAAKtjC,GACvBmkB,EAAKue,sBAAuB,EAK5Bve,EAAK3C,cACT,CACA,MAA6B7jB,KAAKpD,QAA1B0rB,EAAQ,EAARA,SAAUtjB,EAAM,EAANA,OAClB,QAAiBG,IAAbmjB,GAA2BtjB,EAA/B,CAEA,IAAM0e,EAA0D,QAArC/S,EAAK3Q,KAAKpD,QAAQkiB,qBAAkC,IAAPnO,OAAgB,EAASA,EAAG8O,WAAWiE,kBAC/G1jB,KAAKsnC,2BAAmD,OAAtB5jB,QAAoD,IAAtBA,OAA+B,EAASA,EAAkB1jB,KAAKo4B,aAAc,IAC7Ip4B,KAAKunC,iBACLH,GAAyBpnC,KAAKwnC,gBAAgB,aAJpC,CAbA,CAkBd,GACA,uBACA,WAKI,GAJyBxnC,KAAKknC,kBAQ1B,OAHAlnC,KAAKynC,gBACLznC,KAAKmlC,yBACLnlC,KAAKqlC,MAAMrX,QAAQ0Z,IAGlB1nC,KAAKqjC,aAEVrjC,KAAKqjC,YAAa,EAOdrjC,KAAKilC,eAAelY,OACpB/sB,KAAKilC,eAAejX,QAAQ2Z,IAC5B3nC,KAAKilC,eAAe1O,SAKxBv2B,KAAKqlC,MAAMrX,QAAQ4Z,IAKnB5nC,KAAKqlC,MAAMrX,QAAQlK,IAKnB9jB,KAAKqlC,MAAMrX,QAAQ6Z,IACnB7nC,KAAKmlC,oBAEL2C,EAAAA,GAAAA,SACAA,EAAAA,GAAAA,YACAA,EAAAA,GAAAA,SACJ,GAAC,+BACD,WACI9nC,KAAKqlC,MAAMrX,QAAQ+Z,IACnB/nC,KAAK0lC,YAAY1X,QAAQga,GAC7B,GAAC,sCACD,WACI5mC,EAAAA,GAAAA,UAAepB,KAAKolC,kBAAkB,GAAO,EACjD,GAAC,uCACD,WAA4B,WAMxBhkC,EAAAA,GAAAA,YAAgB,WACR,EAAKkiC,cACL,EAAKnhB,KAAKwG,YAGV,EAAKxG,KAAK+iB,mBAElB,GACJ,GACA,4BAGA,WACI,IAAIllC,KAAKkjC,UAAaljC,KAAKmI,SAA3B,CAEA,IAAM8/B,EAAWjoC,KAAKkoC,UAChBljC,EAAShF,KAAKmoC,gBAAgBnoC,KAAKooC,oBAAoBH,IAC7DI,GAASrjC,GACThF,KAAKkjC,SAAW,CACZ+E,SAAAA,EACAjjC,OAAAA,EACAozB,aAAc,CAAC,EAPT,CASd,GAAC,0BACD,WACI,IAAIryB,EACJ,GAAK/F,KAAKmI,WAGVnI,KAAK6jB,eACC7jB,KAAKpD,QAAQg+B,qBAAuB56B,KAAKspB,UAC1CtpB,KAAKsjC,eADV,CAWA,GAAItjC,KAAKgjC,aAAehjC,KAAKgjC,WAAW76B,SACpC,IAAK,IAAI9F,EAAI,EAAGA,EAAIrC,KAAK2lC,KAAKlkC,OAAQY,IAAK,CAC1BrC,KAAK2lC,KAAKtjC,GAClBwhB,cACT,CAEJ,IAAMokB,EAAWjoC,KAAKkoC,UACtBG,GAASJ,GACT,IAAMK,EAAatoC,KAAKgF,OACxBhF,KAAKgF,OAAS,CACVijC,SAAAA,EACAhoB,OAAQjgB,KAAKooC,oBAAoBH,IAErCjoC,KAAKuoC,gBrDjZQ,CACrBxsC,EAFsB,CAAE6H,IAAK,EAAGC,IAAK,GAGrC7H,EAHsB,CAAE4H,IAAK,EAAGC,IAAK,IqDmZ7B7D,KAAKsjC,eAAgB,EACrBtjC,KAAKynB,qBAAkBtiB,EACvBnF,KAAKwnC,gBAAgB,UAAWxnC,KAAKgF,OAAOib,QACN,QAArCla,EAAK/F,KAAKpD,QAAQkiB,qBAAkC,IAAP/Y,GAAyBA,EAAGyiC,oBAAoBxoC,KAAKgF,OAAOib,OAAuB,OAAfqoB,QAAsC,IAAfA,OAAwB,EAASA,EAAWroB,OAzBrL,CA0BJ,GAAC,0BACD,WACQjgB,KAAKpD,QAAQ+9B,cAAgB36B,KAAKmI,WAClCnI,KAAKyoC,aAAehE,EAAkBzkC,KAAKmI,UAC3CnI,KAAKiiB,OAASuiB,EAAcxkC,KAAKmI,UAEzC,GAAC,4BACD,WACI,IAAIpC,EACJ,GAAKo5B,EAAL,CAEA,IAAMuJ,EAAmB1oC,KAAKsjC,eAAiBtjC,KAAK+kC,qBAC9C4D,EAAgB3oC,KAAKynB,kBAAoB2a,GAAYpiC,KAAKynB,iBAC1D/D,EAA0D,QAArC3d,EAAK/F,KAAKpD,QAAQkiB,qBAAkC,IAAP/Y,OAAgB,EAASA,EAAG0Z,WAAWiE,kBACzGklB,EAA+C,OAAtBllB,QAAoD,IAAtBA,OAA+B,EAASA,EAAkB1jB,KAAKo4B,aAAc,IACpIyQ,EAA8BD,IAA2B5oC,KAAKsnC,2BAChEoB,IACCC,GACGhiC,GAAa3G,KAAKo4B,eAClByQ,KACJ1J,EAAen/B,KAAKmI,SAAUygC,GAC9B5oC,KAAK+kC,sBAAuB,EAC5B/kC,KAAKk5B,iBAZC,CAcd,GAAC,qBACD,WACI,IAAQpa,EAAkB9e,KAAKpD,QAAvBkiB,cACR,IAAKA,EACD,MrDlbS,CACrB/iB,EAFsB,CAAE6H,IAAK,EAAGC,IAAK,GAGrC7H,EAHsB,CAAE4H,IAAK,EAAGC,IAAK,IqDob7B,IAAMyD,EAAMwX,EAAc5W,qBAElB+Z,EAAWjiB,KAAKmiB,KAAhBF,OAKR,OAJIA,IACA1a,GAAcD,EAAIvL,EAAGkmB,EAAOlmB,GAC5BwL,GAAcD,EAAItL,EAAGimB,EAAOjmB,IAEzBsL,CACX,GAAC,iCACD,SAAoBA,GAChB,IAAMwhC,ErD7bO,CACrB/sC,EAFsB,CAAE6H,IAAK,EAAGC,IAAK,GAGrC7H,EAHsB,CAAE4H,IAAK,EAAGC,IAAK,IqD+b7B89B,GAAYmH,EAAkBxhC,GAK9B,IAAK,IAAIjF,EAAI,EAAGA,EAAIrC,KAAK2lC,KAAKlkC,OAAQY,IAAK,CACvC,IAAMmkB,EAAOxmB,KAAK2lC,KAAKtjC,GACf4f,EAAkCuE,EAAlCvE,OAAQrlB,EAA0B4pB,EAA1B5pB,QAAS6rC,EAAiBjiB,EAAjBiiB,aACzB,GAAIjiB,IAASxmB,KAAKmiB,MAAQF,GAAUrlB,EAAQ+9B,aAAc,CAKtD,GAAI8N,EAAc,CACd9G,GAAYmH,EAAkBxhC,GAC9B,IAAgByhC,EAAe/oC,KAAKmiB,KAA5BF,OAKJ8mB,IACAxhC,GAAcuhC,EAAiB/sC,GAAIgtC,EAAWhtC,GAC9CwL,GAAcuhC,EAAiB9sC,GAAI+sC,EAAW/sC,GAEtD,CACAuL,GAAcuhC,EAAiB/sC,EAAGkmB,EAAOlmB,GACzCwL,GAAcuhC,EAAiB9sC,EAAGimB,EAAOjmB,EAC7C,CACJ,CACA,OAAO8sC,CACX,GAAC,4BACD,SAAexhC,GAA4B,IAAvB0hC,EAAgB,UAAH,8CACvBC,ErD9dO,CACrBltC,EAFsB,CAAE6H,IAAK,EAAGC,IAAK,GAGrC7H,EAHsB,CAAE4H,IAAK,EAAGC,IAAK,IqDge7B89B,GAAYsH,EAAgB3hC,GAC5B,IAAK,IAAIjF,EAAI,EAAGA,EAAIrC,KAAK2lC,KAAKlkC,OAAQY,IAAK,CACvC,IAAMmkB,EAAOxmB,KAAK2lC,KAAKtjC,IAClB2mC,GACDxiB,EAAK5pB,QAAQ+9B,cACbnU,EAAKvE,QACLuE,IAASA,EAAKrE,MACdna,GAAaihC,EAAgB,CACzBltC,GAAIyqB,EAAKvE,OAAOlmB,EAChBC,GAAIwqB,EAAKvE,OAAOjmB,IAGnB2K,GAAa6f,EAAK4R,eAEvBpwB,GAAaihC,EAAgBziB,EAAK4R,aACtC,CAIA,OAHIzxB,GAAa3G,KAAKo4B,eAClBpwB,GAAaihC,EAAgBjpC,KAAKo4B,cAE/B6Q,CACX,GAAC,6BACD,SAAgB3hC,GACZ,IAAIvB,EACEmjC,ErDtfO,CACrBntC,EAFsB,CAAE6H,IAAK,EAAGC,IAAK,GAGrC7H,EAHsB,CAAE4H,IAAK,EAAGC,IAAK,IqDwf7B89B,GAAYuH,EAAqB5hC,GACjC,IAAK,IAAIjF,EAAI,EAAGA,EAAIrC,KAAK2lC,KAAKlkC,OAAQY,IAAK,CACvC,IAAMmkB,EAAOxmB,KAAK2lC,KAAKtjC,GACvB,GAAKmkB,EAAKre,UAELxB,GAAa6f,EAAK4R,cAAvB,CAEA5xB,GAASggB,EAAK4R,eAAiB5R,EAAK+gB,iBACpC,IAAMrF,ErD/fG,CACrBnmC,EAFsB,CAAE6H,IAAK,EAAGC,IAAK,GAGrC7H,EAHsB,CAAE4H,IAAK,EAAGC,IAAK,IqDkgBzB89B,GAAYO,EADI1b,EAAK0hB,WAErBjG,GAAoBiH,EAAqB1iB,EAAK4R,aAAuC,QAAxBryB,EAAKygB,EAAK0c,gBAA6B,IAAPn9B,OAAgB,EAASA,EAAGf,OAAQk9B,EALrH,CAMhB,CAIA,OAHIv7B,GAAa3G,KAAKo4B,eAClB6J,GAAoBiH,EAAqBlpC,KAAKo4B,cAE3C8Q,CACX,GACA,4BAGA,SAAennC,GACX/B,KAAKmpC,YAAcpnC,EACnB/B,KAAKmiB,KAAKinB,0BACd,GAAC,wBACD,SAAWxsC,GACPoD,KAAKpD,SAAU,0BACRoD,KAAKpD,SACLA,GAAO,IACV2mC,eAAiCp+B,IAAtBvI,EAAQ2mC,WAA0B3mC,EAAQ2mC,WAE7D,GAAC,+BACD,WACIvjC,KAAKiiB,YAAS9c,EACdnF,KAAKgF,YAASG,EACdnF,KAAKkjC,cAAW/9B,EAChBnF,KAAKsnC,gCAA6BniC,EAClCnF,KAAKmpC,iBAAchkC,EACnBnF,KAAKtD,YAASyI,EACdnF,KAAKsjC,eAAgB,CACzB,GACA,gCAGA,WACI,IAAIv9B,E3FphBSrJ,EAAQmI,EAAUC,E2FqhB/B,EAA6B9E,KAAKpD,QAA1BoI,EAAM,EAANA,OAAQsjB,EAAQ,EAARA,SAIXtoB,KAAKgF,SAAYA,GAAUsjB,KAQ3BtoB,KAAKmpC,aAAgBnpC,KAAKwmC,iBAE3BxmC,KAAKqpC,eAAiBrpC,KAAKspC,6BACvBtpC,KAAKqpC,gBAAkBrpC,KAAKqpC,eAAerkC,SAC3ChF,KAAKwmC,erDrjBA,CACrBzqC,EAFsB,CAAE6H,IAAK,EAAGC,IAAK,GAGrC7H,EAHsB,CAAE4H,IAAK,EAAGC,IAAK,IqDujBrB7D,KAAKupC,qBrDtjBA,CACrBxtC,EAFsB,CAAE6H,IAAK,EAAGC,IAAK,GAGrC7H,EAHsB,CAAE4H,IAAK,EAAGC,IAAK,IqDwjBrBoB,GAAqBjF,KAAKupC,qBAAsBvpC,KAAKgF,OAAOib,OAAQjgB,KAAKqpC,eAAerkC,OAAOib,QAC/F0hB,GAAY3hC,KAAKwmC,eAAgBxmC,KAAKupC,yBAOzCvpC,KAAKwmC,gBAAmBxmC,KAAKmpC,eAK7BnpC,KAAKtD,SACNsD,KAAKtD,OrDrkBI,CACrBX,EAFsB,CAAE6H,IAAK,EAAGC,IAAK,GAGrC7H,EAHsB,CAAE4H,IAAK,EAAGC,IAAK,IqDukBzB7D,KAAKwpC,qBrDtkBI,CACrBztC,EAFsB,CAAE6H,IAAK,EAAGC,IAAK,GAGrC7H,EAHsB,CAAE4H,IAAK,EAAGC,IAAK,KqD4kBzB7D,KAAKwmC,gBACLxmC,KAAKupC,uBAC2B,QAA9BxjC,EAAK/F,KAAKqpC,sBAAmC,IAAPtjC,OAAgB,EAASA,EAAGrJ,S3F7jB3DA,E2F8jBOsD,KAAKtD,O3F9jBJmI,E2F8jBY7E,KAAKwmC,e3F9jBP1hC,E2F8jBuB9E,KAAKqpC,eAAe3sC,O3F7jBlFkI,EAAiBlI,EAAOX,EAAG8I,EAAS9I,EAAG+I,EAAO/I,GAC9C6I,EAAiBlI,EAAOV,EAAG6I,EAAS7I,EAAG8I,EAAO9I,I2FikB7BgE,KAAKmpC,aACN78B,QAAQtM,KAAK0jC,cAEb1jC,KAAKtD,OAASsD,KAAKypC,eAAezpC,KAAKgF,OAAOib,QAG9C0hB,GAAY3hC,KAAKtD,OAAQsD,KAAKgF,OAAOib,QAEzC5Y,GAAcrH,KAAKtD,OAAQsD,KAAKmpC,cAMhCxH,GAAY3hC,KAAKtD,OAAQsD,KAAKgF,OAAOib,QAKrCjgB,KAAK0pC,iCACL1pC,KAAK0pC,gCAAiC,EACtC1pC,KAAKqpC,eAAiBrpC,KAAKspC,6BACvBtpC,KAAKqpC,gBACL/8B,QAAQtM,KAAKqpC,eAAe3F,gBACxBp3B,QAAQtM,KAAK0jC,gBAChB1jC,KAAKqpC,eAAezsC,QAAQ+9B,cAC7B36B,KAAKqpC,eAAe3sC,SACpBsD,KAAKwmC,erD9mBA,CACrBzqC,EAFsB,CAAE6H,IAAK,EAAGC,IAAK,GAGrC7H,EAHsB,CAAE4H,IAAK,EAAGC,IAAK,IqDgnBrB7D,KAAKupC,qBrD/mBA,CACrBxtC,EAFsB,CAAE6H,IAAK,EAAGC,IAAK,GAGrC7H,EAHsB,CAAE4H,IAAK,EAAGC,IAAK,IqDinBrBoB,GAAqBjF,KAAKupC,qBAAsBvpC,KAAKtD,OAAQsD,KAAKqpC,eAAe3sC,QACjFilC,GAAY3hC,KAAKwmC,eAAgBxmC,KAAKupC,yBAGlD,GAAC,wCACD,WACI,GAAKvpC,KAAK8E,SAAU6B,GAAa3G,KAAK8E,OAAOszB,cAE7C,OAAKp4B,KAAK8E,OAAO0hC,gBAAkBxmC,KAAK8E,OAAOqkC,cAC3CnpC,KAAK8E,OAAOE,OACLhF,KAAK8E,OAGL9E,KAAK8E,OAAOwkC,4BAE3B,GAAC,4BACD,WACI,IAAIvjC,EACJ,EAA6B/F,KAAKpD,QAA1BoI,EAAM,EAANA,OAAQsjB,EAAQ,EAARA,SAWhB,GANAtoB,KAAK0kC,gBAAkBp4B,SAAgC,QAAtBvG,EAAK/F,KAAK8E,cAA2B,IAAPiB,OAAgB,EAASA,EAAG2+B,kBACvF1kC,KAAKud,kBACLvd,KAAK2pC,kBACJ3pC,KAAK0kC,kBACN1kC,KAAKmpC,YAAcnpC,KAAKwmC,oBAAiBrhC,GAExCnF,KAAKgF,SAAYA,GAAUsjB,GAAhC,CAEA,IAAMuY,EAAO7gC,KAAK4pC,UAKlBjI,GAAY3hC,KAAKuoC,gBAAiBvoC,KAAKgF,OAAOib,QrFvnB1D,SAAyB3Y,EAAKkgB,EAAWqiB,GAAsC,IACvE9jC,EAAI2K,EADuCo5B,EAAqB,UAAH,8CAE3DC,EAAaF,EAASpoC,OAC5B,GAAKsoC,EAAL,CAIA,IAAIvjB,EACAzkB,EAFJylB,EAAUzrB,EAAIyrB,EAAUxrB,EAAI,EAG5B,IAAK,IAAIqG,EAAI,EAAGA,EAAI0nC,EAAY1nC,IAE5BN,GADAykB,EAAOqjB,EAASxnC,IACHolB,gBACuH,cAAjD,QAA7E/W,EAA8B,QAAxB3K,EAAKygB,EAAKre,gBAA6B,IAAPpC,OAAgB,EAASA,EAAG6d,aAA0B,IAAPlT,OAAgB,EAASA,EAAGgtB,WAEnHoM,GACAtjB,EAAK5pB,QAAQ+9B,cACbnU,EAAKvE,QACLuE,IAASA,EAAKrE,MACdna,GAAaV,EAAK,CAAEvL,GAAIyqB,EAAKvE,OAAOlmB,EAAGC,GAAIwqB,EAAKvE,OAAOjmB,IAEvD+F,IAEAylB,EAAUzrB,GAAKgG,EAAMhG,EAAEuI,MACvBkjB,EAAUxrB,GAAK+F,EAAM/F,EAAEsI,MAEvB+C,GAAcC,EAAKvF,IAEnB+nC,GAAsBnjC,GAAa6f,EAAK4R,eACxCpwB,GAAaV,EAAKkf,EAAK4R,cAxBrB,CA2Bd,CqF6lBY4R,CAAgBhqC,KAAKuoC,gBAAiBvoC,KAAKwnB,UAAWxnB,KAAK2lC,KAAMr5B,QAAQtM,KAAK0jC,eAAiB1jC,OAAS6gC,GACxG,IAAQnkC,EAAWmkC,EAAXnkC,OACR,GAAKA,EAAL,CAEKsD,KAAKynB,kBACNznB,KAAKynB,gBrDnqBM,CACvB1rB,EAP2B,CAC3ByI,UAAW,EACXF,MAAO,EACPF,OAAQ,EACRC,YAAa,GAIbrI,EAR2B,CAC3BwI,UAAW,EACXF,MAAO,EACPF,OAAQ,EACRC,YAAa,IqDsqBDrE,KAAKiqC,6BrDpqBM,CACvBluC,EAP2B,CAC3ByI,UAAW,EACXF,MAAO,EACPF,OAAQ,EACRC,YAAa,GAIbrI,EAR2B,CAC3BwI,UAAW,EACXF,MAAO,EACPF,OAAQ,EACRC,YAAa,KqDwqBL,IAAM6lC,EAAiBlqC,KAAKwnB,UAAUzrB,EAChCouC,EAAiBnqC,KAAKwnB,UAAUxrB,EAChCouC,EAA0BpqC,KAAKqqC,oBAUrC5lC,EAAazE,KAAKynB,gBAAiBznB,KAAKuoC,gBAAiB7rC,EAAQsD,KAAKo4B,cACtEp4B,KAAKqqC,oBAAsB1G,GAAyB3jC,KAAKynB,gBAAiBznB,KAAKwnB,WAC3ExnB,KAAKqqC,sBAAwBD,GAC7BpqC,KAAKwnB,UAAUzrB,IAAMmuC,GACrBlqC,KAAKwnB,UAAUxrB,IAAMmuC,IACrBnqC,KAAKwlC,cAAe,EACpBxlC,KAAKk5B,iBACLl5B,KAAKwnC,gBAAgB,mBAAoB9qC,GAxBnC,CAdA,CAwCd,GAAC,kBACD,WACIsD,KAAKy5B,WAAY,CAErB,GAAC,kBACD,WACIz5B,KAAKy5B,WAAY,CAErB,GAAC,4BACD,WAAiC,IACzB1zB,EAAI2K,EAAIC,EADD25B,IAAY,UAAH,+CAE0B,QAA7C55B,GAAM3K,EAAK/F,KAAKpD,SAASs8B,sBAAmC,IAAPxoB,GAAyBA,EAAG/D,KAAK5G,GACvFukC,IAAyC,QAA1B35B,EAAK3Q,KAAKopB,kBAA+B,IAAPzY,GAAyBA,EAAGuoB,kBACzEl5B,KAAK0jC,eAAiB1jC,KAAK0jC,aAAav7B,WACxCnI,KAAK0jC,kBAAev+B,EAE5B,GAAC,gCACD,SAAmBpD,GAA6C,IACxDgE,EADwD,OAAtCghC,EAA+B,UAAH,8CAE5C7D,EAAWljC,KAAKkjC,SAChBqH,GAAqC,OAAbrH,QAAkC,IAAbA,OAAsB,EAASA,EAAS9K,eAAiB,CAAC,EACvGoS,GAAc,UAAKxqC,KAAKo4B,cACxB+Q,ErDjtBS,CACvBptC,EAP2B,CAC3ByI,UAAW,EACXF,MAAO,EACPF,OAAQ,EACRC,YAAa,GAIbrI,EAR2B,CAC3BwI,UAAW,EACXF,MAAO,EACPF,OAAQ,EACRC,YAAa,IqDotBLrE,KAAKwmC,eAAiBxmC,KAAKupC,0BAAuBpkC,EAClDnF,KAAK0pC,gCAAkC3C,EACvC,IAAM0D,ErD/sBO,CACrB1uC,EAFsB,CAAE6H,IAAK,EAAGC,IAAK,GAGrC7H,EAHsB,CAAE4H,IAAK,EAAGC,IAAK,IqDitBvB6mC,EAAuC,OAAbxH,QAAkC,IAAbA,OAAsB,EAASA,EAASE,SACvFrC,IAA4C,QAA1Bh7B,EAAK/F,KAAKopB,kBAA+B,IAAPrjB,OAAgB,EAASA,EAAGsjB,QAAQ5nB,SAAW,IAAM,EACzGq/B,EAAyBx0B,QAAQo+B,IAClC3J,IAC0B,IAA3B/gC,KAAKpD,QAAQ2mC,YACZvjC,KAAK2lC,KAAK17B,KAAK0gC,KACpB3qC,KAAKylC,kBAAoB,EACzBzlC,KAAK4qC,eAAiB,SAACz0B,GACnB,IAAIpQ,EACEvC,EAAW2S,EAAS,IAC1B00B,GAAa1B,EAAYptC,EAAGgG,EAAMhG,EAAGyH,GACrCqnC,GAAa1B,EAAYntC,EAAG+F,EAAM/F,EAAGwH,GACrC,EAAKsnC,eAAe3B,GAChB,EAAK3C,gBACL,EAAK+C,sBACL,EAAKvkC,SAC2B,QAA9Be,EAAK,EAAKsjC,sBAAmC,IAAPtjC,OAAgB,EAASA,EAAGf,UACpEC,GAAqBwlC,EAAgB,EAAKzlC,OAAOib,OAAQ,EAAKopB,eAAerkC,OAAOib,QACpF8qB,GAAO,EAAKvE,eAAgB,EAAK+C,qBAAsBkB,EAAgBjnC,IAEvEknC,IACA,EAAKvH,gBAAkBqH,EACvB7J,GAAU6J,EAAaD,EAAsB,EAAKnS,aAAc50B,EAAUs9B,EAAwBC,IAEtG,EAAK5e,KAAKinB,2BACV,EAAKlQ,iBACL,EAAKuM,kBAAoBjiC,CAC7B,EACAxD,KAAK4qC,eAAe,EACxB,GAAC,4BACD,SAAehuC,GAAS,IAChBmJ,EAAI2K,EADY,OAEpB1Q,KAAKwnC,gBAAgB,kBACY,QAAhCzhC,EAAK/F,KAAKud,wBAAqC,IAAPxX,GAAyBA,EAAGiQ,OACjEhW,KAAK0jC,eACyC,QAA7ChzB,EAAK1Q,KAAK0jC,aAAanmB,wBAAqC,IAAP7M,GAAyBA,EAAGsF,QAElFhW,KAAK2pC,mBACL9nC,EAAAA,GAAAA,OAAkB7B,KAAK2pC,kBACvB3pC,KAAK2pC,sBAAmBxkC,GAO5BnF,KAAK2pC,iBAAmBvoC,EAAAA,GAAAA,QAAY,WAChC0nB,GAAAA,EAAAA,wBAA+C,EAC/C,EAAKvL,iBAAmBtH,GAAQ,EAjvBxB,KAivB4C,kBAC7CrZ,GAAO,IACVma,SAAU,SAACZ,GACP,IAAIpQ,EACJ,EAAK6kC,eAAez0B,GACQ,QAA3BpQ,EAAKnJ,EAAQma,gBAA6B,IAAPhR,GAAyBA,EAAG4G,KAAK/P,EAASuZ,EAClF,EACAU,WAAY,WACR,IAAI9Q,EAC0B,QAA7BA,EAAKnJ,EAAQia,kBAA+B,IAAP9Q,GAAyBA,EAAG4G,KAAK/P,GACvE,EAAKouC,mBACT,KAEA,EAAKtH,eACL,EAAKA,aAAanmB,iBAAmB,EAAKA,kBAE9C,EAAKosB,sBAAmBxkC,CAC5B,GACJ,GAAC,+BACD,WACI,IAAIY,EACA/F,KAAK0jC,eACL1jC,KAAK0jC,aAAanmB,sBAAmBpY,EACrCnF,KAAK0jC,aAAaT,qBAAkB99B,GAEb,QAA1BY,EAAK/F,KAAKopB,kBAA+B,IAAPrjB,GAAyBA,EAAGklC,wBAC/DjrC,KAAK0jC,aACD1jC,KAAKud,iBACDvd,KAAKmjC,qBACDh+B,EACZnF,KAAKwnC,gBAAgB,oBACzB,GAAC,6BACD,WACI,IAAIzhC,EACA/F,KAAKud,mBAC0B,QAA9BxX,EAAK/F,KAAK4qC,sBAAmC,IAAP7kC,GAAyBA,EAAG4G,KAAK3M,KApxBhE,KAqxBRA,KAAKud,iBAAiBvH,QAE1BhW,KAAKgrC,mBACT,GAAC,qCACD,WACI,IAAMnK,EAAO7gC,KAAK4pC,UACZJ,EAAuD3I,EAAvD2I,qBAAsB9sC,EAAiCmkC,EAAjCnkC,OAAQsI,EAAyB67B,EAAzB77B,OAAQozB,EAAiByI,EAAjBzI,aAC5C,GAAKoR,GAAyB9sC,GAAWsI,EAAzC,CAOA,GAAIhF,OAAS6gC,GACT7gC,KAAKgF,QACLA,GACAkmC,GAA0BlrC,KAAKpD,QAAQi+B,cAAe76B,KAAKgF,OAAOib,OAAQjb,EAAOib,QAAS,CAC1FvjB,EAASsD,KAAKtD,QrDtzBL,CACrBX,EAFsB,CAAE6H,IAAK,EAAGC,IAAK,GAGrC7H,EAHsB,CAAE4H,IAAK,EAAGC,IAAK,IqDwzBzB,IAAMsnC,EAAUrnC,EAAW9D,KAAKgF,OAAOib,OAAOlkB,GAC9CW,EAAOX,EAAE6H,IAAMi9B,EAAKnkC,OAAOX,EAAE6H,IAC7BlH,EAAOX,EAAE8H,IAAMnH,EAAOX,EAAE6H,IAAMunC,EAC9B,IAAMC,EAAUtnC,EAAW9D,KAAKgF,OAAOib,OAAOjkB,GAC9CU,EAAOV,EAAE4H,IAAMi9B,EAAKnkC,OAAOV,EAAE4H,IAC7BlH,EAAOV,EAAE6H,IAAMnH,EAAOV,EAAE4H,IAAMwnC,CAClC,CACAzJ,GAAY6H,EAAsB9sC,GAMlCsL,GAAawhC,EAAsBpR,GAOnC3zB,EAAazE,KAAKiqC,6BAA8BjqC,KAAKuoC,gBAAiBiB,EAAsBpR,EA/BlF,CAgCd,GAAC,gCACD,SAAmB9P,EAAU9B,GACzB,IAAIzgB,EAAI2K,EAAIC,EACP3Q,KAAK0lC,YAAYnuB,IAAI+Q,IACtBtoB,KAAK0lC,YAAYpoB,IAAIgL,EAAU,IAAIia,IAEzBviC,KAAK0lC,YAAYzoB,IAAIqL,GAC7BI,IAAIlC,GACVA,EAAK0C,QAAQ,CACTlN,WAA2D,QAA9CjW,EAAKygB,EAAK5pB,QAAQk+B,8BAA2C,IAAP/0B,OAAgB,EAASA,EAAGiW,WAC/F8mB,sBAAiJ,QAAzHnyB,EAAoD,QAA9CD,EAAK8V,EAAK5pB,QAAQk+B,8BAA2C,IAAPpqB,OAAgB,EAASA,EAAG26B,mCAAgD,IAAP16B,OAAgB,EAASA,EAAGhE,KAAK+D,EAAI8V,IAEtM,GAAC,oBACD,WACI,IAAM8kB,EAAQtrC,KAAKopB,WACnB,OAAOkiB,GAAQA,EAAMzK,OAAS7gC,IAClC,GAAC,qBACD,WACI,IAAI+F,EAEJ,OADqB/F,KAAKpD,QAAlB0rB,WACsC,QAA1BviB,EAAK/F,KAAKopB,kBAA+B,IAAPrjB,OAAgB,EAASA,EAAG86B,OAAgB7gC,IACtG,GAAC,yBACD,WACI,IAAI+F,EAEJ,OADqB/F,KAAKpD,QAAlB0rB,SACqC,QAA1BviB,EAAK/F,KAAKopB,kBAA+B,IAAPrjB,OAAgB,EAASA,EAAG28B,cAAWv9B,CAChG,GAAC,sBACD,WACI,IAAQmjB,EAAatoB,KAAKpD,QAAlB0rB,SACR,GAAIA,EACA,OAAOtoB,KAAKmiB,KAAKujB,YAAYzoB,IAAIqL,EACzC,GAAC,qBACD,WAAiE,6DAAJ,CAAC,EAApDwc,EAAU,EAAVA,WAAY9oB,EAAU,EAAVA,WAAY8mB,EAAqB,EAArBA,sBACxBwI,EAAQtrC,KAAKopB,WACfkiB,GACAA,EAAMpiB,QAAQlpB,KAAM8iC,GACpBgC,IACA9kC,KAAKynB,qBAAkBtiB,EACvBnF,KAAK8kC,YAAa,GAElB9oB,GACAhc,KAAK6oB,WAAW,CAAE7M,WAAAA,GAC1B,GAAC,sBACD,WACI,IAAMsvB,EAAQtrC,KAAKopB,WACnB,QAAIkiB,GACOA,EAAMniB,SAASnpB,KAK9B,GAAC,2BACD,WACI,IAAQ8e,EAAkB9e,KAAKpD,QAAvBkiB,cACR,GAAKA,EAAL,CAOA,IAJA,IAAIysB,GAAY,EAEVC,EAAc,CAAC,EAEZnpC,EAAI,EAAGA,EAAI+hC,GAAc3iC,OAAQY,IAAK,CAC3C,IACMqF,EAAM,SADC08B,GAAc/hC,GAItByc,EAAcoY,eAAexvB,KAGlC6jC,GAAY,EAEZC,EAAY9jC,GAAOoX,EAAcoY,eAAexvB,GAChDoX,EAAcqc,eAAezzB,EAAK,GACtC,CAEA,GAAK6jC,EAAL,CAMA,IAAK,IAAM7jC,KAFO,OAAlBoX,QAA4C,IAAlBA,GAAoCA,EAAc4B,aAE1D8qB,EACd1sB,EAAcqc,eAAezzB,EAAK8jC,EAAY9jC,IAIlDoX,EAAcoa,gBAVJ,CArBA,CAgCd,GAAC,iCACD,WAAoC,IAC5BnzB,EAAI2K,EAAIC,EADI86B,EAAY,UAAH,6CAAG,CAAC,EAGvBC,EAAS,CAAC,EAChB,IAAK1rC,KAAKmI,UAAYnI,KAAK6kC,MACvB,OAAO6G,EACX,IAAK1rC,KAAKy5B,UACN,MAAO,CAAE4B,WAAY,UAGrBqQ,EAAOrQ,WAAa,GAExB,IAAM3X,EAA0D,QAArC3d,EAAK/F,KAAKpD,QAAQkiB,qBAAkC,IAAP/Y,OAAgB,EAASA,EAAG0Z,WAAWiE,kBAC/G,GAAI1jB,KAAK8kC,WAQL,OAPA9kC,KAAK8kC,YAAa,EAClB4G,EAAOzxB,QAAU,GACjByxB,EAAOC,eACHC,EAAAA,GAAAA,GAAmBH,EAAUE,gBAAkB,GACnDD,EAAOzjC,UAAYyb,EACbA,EAAkB1jB,KAAKo4B,aAAc,IACrC,OACCsT,EAEX,IAAM7K,EAAO7gC,KAAK4pC,UAClB,IAAK5pC,KAAKynB,kBAAoBznB,KAAKgF,SAAW67B,EAAKnkC,OAAQ,CACvD,IAAMmvC,EAAc,CAAC,EAerB,OAdI7rC,KAAKpD,QAAQ0rB,WACbujB,EAAY5xB,aACsB9U,IAA9BnF,KAAKo4B,aAAane,QACZja,KAAKo4B,aAAane,QAClB,EACV4xB,EAAYF,eACRC,EAAAA,GAAAA,GAAmBH,EAAUE,gBAAkB,IAEnD3rC,KAAKwlC,eAAiB7+B,GAAa3G,KAAKo4B,gBACxCyT,EAAY5jC,UAAYyb,EAClBA,EAAkB,CAAC,EAAG,IACtB,OACN1jB,KAAKwlC,cAAe,GAEjBqG,CACX,CACA,IAAMC,EAAiBjL,EAAKsC,iBAAmBtC,EAAKzI,aACpDp4B,KAAK+rC,0BACLL,EAAOzjC,UAAY07B,GAAyB3jC,KAAKiqC,6BAA8BjqC,KAAKwnB,UAAWskB,GAC3FpoB,IACAgoB,EAAOzjC,UAAYyb,EAAkBooB,EAAgBJ,EAAOzjC,YAEhE,MAAiBjI,KAAKynB,gBAAd1rB,EAAC,EAADA,EAAGC,EAAC,EAADA,EA+BX,IAAK,IAAM0L,KA9BXgkC,EAAOM,gBAAkB,GAAH,OAAiB,IAAXjwC,EAAEqI,OAAY,aAAgB,IAAXpI,EAAEoI,OAAY,OACzDy8B,EAAKsC,gBAKLuI,EAAOzxB,QACH4mB,IAAS7gC,KACiG,QAAnG2Q,EAAuC,QAAjCD,EAAKo7B,EAAe7xB,eAA4B,IAAPvJ,EAAgBA,EAAK1Q,KAAKo4B,aAAane,eAA4B,IAAPtJ,EAAgBA,EAAK,EACjI3Q,KAAKijC,gBACDjjC,KAAKo4B,aAAane,QAClB6xB,EAAe7K,YAO7ByK,EAAOzxB,QACH4mB,IAAS7gC,UACwBmF,IAA3B2mC,EAAe7xB,QACX6xB,EAAe7xB,QACf,QAC2B9U,IAA/B2mC,EAAe7K,YACX6K,EAAe7K,YACf,EAKAgL,GAAAA,EACd,QAA4B9mC,IAAxB2mC,EAAepkC,GAAnB,CAEA,MAA6BukC,GAAAA,EAAgBvkC,GAArC6e,EAAO,EAAPA,QAASsD,EAAO,EAAPA,QACXqiB,EAAY3lB,EAAQulB,EAAepkC,GAAMm5B,GAC/C,GAAIhX,EAEA,IADA,IAAMsiB,EAAMtiB,EAAQpoB,OACXY,EAAI,EAAGA,EAAI8pC,EAAK9pC,IACrBqpC,EAAO7hB,EAAQxnB,IAAM6pC,OAIzBR,EAAOhkC,GAAOwkC,CAVN,CAwBhB,OANIlsC,KAAKpD,QAAQ0rB,WACbojB,EAAOC,cACH9K,IAAS7gC,MACH4rC,EAAAA,GAAAA,GAAmBH,EAAUE,gBAAkB,GAC/C,QAEPD,CACX,GAAC,2BACD,WACI1rC,KAAKgjC,WAAahjC,KAAKkjC,cAAW/9B,CACtC,GACA,uBACA,WACInF,KAAKmiB,KAAKkjB,MAAMrX,SAAQ,SAACxH,GAAW,IAAIzgB,EAAI,OAAwC,QAAhCA,EAAKygB,EAAKjJ,wBAAqC,IAAPxX,OAAgB,EAASA,EAAGiQ,MAAQ,IAChIhW,KAAKmiB,KAAKkjB,MAAMrX,QAAQ0Z,IACxB1nC,KAAKmiB,KAAKujB,YAAYnP,OAC1B,KAAC,EAtgCL,EAwgCJ,CACA,SAASzS,GAAa0C,GAClBA,EAAK1C,cACT,CACA,SAAS+jB,GAAmBrhB,GACxB,IAAIzgB,EAAI2K,EAAIC,EACNuyB,GAAuC,QAA1Bn9B,EAAKygB,EAAKwc,kBAA+B,IAAPj9B,OAAgB,EAASA,EAAGm9B,WAAa1c,EAAK0c,SACnG,GAAI1c,EAAK8C,UACL9C,EAAKxhB,QACLk+B,GACA1c,EAAK4lB,aAAa,aAAc,CAChC,MAAqD5lB,EAAKxhB,OAA1CA,EAAM,EAAdib,OAA0BosB,EAAc,EAAxBpE,SAChBpN,EAAkBrU,EAAK5pB,QAAvBi+B,cAGc,SAAlBA,EACA70B,IAAS,SAACjC,GACN,IAAMuoC,EAAepJ,EAASE,SACxBF,EAAS+E,SAASlkC,GAClBm/B,EAASl+B,OAAOjB,GAChBtC,EAASqC,EAAWwoC,GAC1BA,EAAa1oC,IAAMoB,EAAOjB,GAAMH,IAChC0oC,EAAazoC,IAAMyoC,EAAa1oC,IAAMnC,CAC1C,IAEKypC,GAA0BrQ,EAAeqI,EAASl+B,OAAQA,IAC/DgB,IAAS,SAACjC,GACN,IAAMuoC,EAAepJ,EAASE,SACxBF,EAAS+E,SAASlkC,GAClBm/B,EAASl+B,OAAOjB,GAChBtC,EAASqC,EAAWkB,EAAOjB,IACjCuoC,EAAazoC,IAAMyoC,EAAa1oC,IAAMnC,CAC1C,IAEJ,IAAM8qC,ErDhkCa,CACvBxwC,EAP2B,CAC3ByI,UAAW,EACXF,MAAO,EACPF,OAAQ,EACRC,YAAa,GAIbrI,EAR2B,CAC3BwI,UAAW,EACXF,MAAO,EACPF,OAAQ,EACRC,YAAa,IqDmkCTI,EAAa8nC,EAAavnC,EAAQk+B,EAASl+B,QAC3C,IAAMwnC,ErDlkCa,CACvBzwC,EAP2B,CAC3ByI,UAAW,EACXF,MAAO,EACPF,OAAQ,EACRC,YAAa,GAIbrI,EAR2B,CAC3BwI,UAAW,EACXF,MAAO,EACPF,OAAQ,EACRC,YAAa,IqDqkCL6+B,EAASE,SACT3+B,EAAa+nC,EAAahmB,EAAKijB,eAAe4C,GAAgB,GAAOnJ,EAAS+E,UAG9ExjC,EAAa+nC,EAAaxnC,EAAQk+B,EAASl+B,QAE/C,IAAMsf,GAAoB8d,GAAYmK,GAClClG,GAA2B,EAC/B,IAAK7f,EAAKwc,aACNxc,EAAK6iB,eAAiB7iB,EAAK8iB,6BAKvB9iB,EAAK6iB,iBAAmB7iB,EAAK6iB,eAAerG,YAAY,CACxD,MAA2Dxc,EAAK6iB,eAA9CoD,EAAc,EAAxBvJ,SAAkCwJ,EAAY,EAApB1nC,OAClC,GAAIynC,GAAkBC,EAAc,CAChC,IAAMC,ErD/kCD,CACrB5wC,EAFsB,CAAE6H,IAAK,EAAGC,IAAK,GAGrC7H,EAHsB,CAAE4H,IAAK,EAAGC,IAAK,IqDilCrBoB,GAAqB0nC,EAAkBzJ,EAASl+B,OAAQynC,EAAeznC,QACvE,IAAMylC,ErDjlCD,CACrB1uC,EAFsB,CAAE6H,IAAK,EAAGC,IAAK,GAGrC7H,EAHsB,CAAE4H,IAAK,EAAGC,IAAK,IqDmlCrBoB,GAAqBwlC,EAAgBzlC,EAAQ0nC,EAAazsB,QACrDoiB,GAAUsK,EAAkBlC,KAC7BpE,GAA2B,EAEnC,CACJ,CAEJ7f,EAAKghB,gBAAgB,YAAa,CAC9BxiC,OAAAA,EACAk+B,SAAAA,EACAnhC,MAAOyqC,EACPD,YAAAA,EACAjoB,iBAAAA,EACA+hB,yBAAAA,GAER,MACS7f,EAAK8C,WACoC,QAA7C3Y,GAAMD,EAAK8V,EAAK5pB,SAASopB,sBAAmC,IAAPrV,GAAyBA,EAAGhE,KAAK+D,IAO3F8V,EAAK5pB,QAAQof,gBAAa7W,CAC9B,CACA,SAAS4iC,GAAcvhB,GACnBA,EAAKuhB,eACT,CACA,SAASL,GAAkBlhB,GACvBA,EAAKkhB,mBACT,CACA,SAASE,GAAoBphB,GACzB,IAAQ1H,EAAkB0H,EAAK5pB,QAAvBkiB,eACc,OAAlBA,QAA4C,IAAlBA,OAA2B,EAASA,EAAcW,WAAWmtB,wBACvF9tB,EAAc+tB,4BAElBrmB,EAAK2Y,gBACT,CACA,SAASgH,GAAgB3f,GACrBA,EAAK2f,kBACL3f,EAAK2iB,YAAc3iB,EAAKggB,eAAiBhgB,EAAK9pB,YAASyI,CAC3D,CACA,SAASmgC,GAAmB9e,GACxBA,EAAK8e,oBACT,CACA,SAASC,GAAe/e,GACpBA,EAAK+e,gBACT,CACA,SAAS4B,GAAc3gB,GACnBA,EAAK2gB,eACT,CACA,SAASa,GAAoBsD,GACzBA,EAAMwB,oBACV,CACA,SAASjC,GAAat6B,EAAQxO,EAAO2M,GACjC6B,EAAO/L,UAAYnB,EAAItB,EAAMyC,UAAW,EAAGkK,GAC3C6B,EAAOjM,MAAQjB,EAAItB,EAAMuC,MAAO,EAAGoK,GACnC6B,EAAOnM,OAASrC,EAAMqC,OACtBmM,EAAOlM,YAActC,EAAMsC,WAC/B,CACA,SAAS0oC,GAAQx8B,EAAQjN,EAAMC,EAAImL,GAC/B6B,EAAO3M,IAAMP,EAAIC,EAAKM,IAAKL,EAAGK,IAAK8K,GACnC6B,EAAO1M,IAAMR,EAAIC,EAAKO,IAAKN,EAAGM,IAAK6K,EACvC,CACA,SAASq8B,GAAOx6B,EAAQjN,EAAMC,EAAImL,GAC9Bq+B,GAAQx8B,EAAOxU,EAAGuH,EAAKvH,EAAGwH,EAAGxH,EAAG2S,GAChCq+B,GAAQx8B,EAAOvU,EAAGsH,EAAKtH,EAAGuH,EAAGvH,EAAG0S,EACpC,CACA,SAASi8B,GAAoBnkB,GACzB,OAAQA,EAAK2c,sBAAwDh+B,IAArCqhB,EAAK2c,gBAAgBlC,WACzD,CACA,IAAMyF,GAA0B,CAC5B99B,SAAU,IACVkJ,KAAM,CAAC,GAAK,EAAG,GAAK,IAExB,SAAS61B,GAAenhB,EAAMN,GAM1B,IADA,IAAI8mB,EAAaxmB,EAAKrE,KACb9f,EAAImkB,EAAKmf,KAAKlkC,OAAS,EAAGY,GAAK,EAAGA,IACvC,GAAIiK,QAAQka,EAAKmf,KAAKtjC,GAAG8F,UAAW,CAChC6kC,EAAaxmB,EAAKmf,KAAKtjC,GACvB,KACJ,CAEJ,IACMlF,GADgB6vC,GAAcA,IAAexmB,EAAKrE,KAAO6qB,EAAW7kC,SAAWqqB,UACvDya,cAAc,wBAAD,OAAyB/mB,EAAE,OAClE/oB,GACAqpB,EAAKkT,MAAMv8B,GAAS,EAC5B,CACA,SAAS+vC,GAAUnpC,GACfA,EAAKH,IAAM5E,KAAKuO,MAAMxJ,EAAKH,KAC3BG,EAAKF,IAAM7E,KAAKuO,MAAMxJ,EAAKF,IAC/B,CACA,SAASwkC,GAAS/gC,GACd4lC,GAAU5lC,EAAIvL,GACdmxC,GAAU5lC,EAAItL,EAClB,CACA,SAASkvC,GAA0BrQ,EAAeqI,EAAUl+B,GACxD,MAA0B,aAAlB61B,GACe,oBAAlBA,ILlrCT,SAAmB/7B,EAAGC,GAAc,IAAX8E,EAAM,UAAH,6CAAG,GAC3B,OAAO3E,EAASJ,EAAGC,IAAM8E,CAC7B,CKirCaspC,CAAU7K,GAAYY,GAAWZ,GAAYt9B,GAAS,GACnE,CCnsCA,IAAMooC,GAAyB/I,GAAqB,CAChDC,qBAAsB,SAACrnC,EAAK05B,GAAM,OAAKl6B,EAAYQ,EAAK,SAAU05B,EAAO,EACzE6N,cAAe,iBAAO,CAClBzoC,EAAGy2B,SAAS6a,gBAAgBC,YAAc9a,SAAS+a,KAAKD,WACxDtxC,EAAGw2B,SAAS6a,gBAAgBG,WAAahb,SAAS+a,KAAKC,UAC1D,EACD/I,kBAAmB,kBAAM,CAAI,ICN3B1iB,GAAqB,CACvB3kB,aAAS+H,GAEPsoC,GAAqBpJ,GAAqB,CAC5CG,cAAe,SAACr8B,GAAQ,MAAM,CAC1BpM,EAAGoM,EAASmlC,WACZtxC,EAAGmM,EAASqlC,UACf,EACDjJ,cAAe,WACX,IAAKxiB,GAAmB3kB,QAAS,CAC7B,IAAMswC,EAAe,IAAIN,GAAuB,EAAG,CAAC,GACpDM,EAAahU,MAAMx7B,QACnBwvC,EAAa7kB,WAAW,CAAE8R,cAAc,IACxC5Y,GAAmB3kB,QAAUswC,CACjC,CACA,OAAO3rB,GAAmB3kB,OAC9B,EACA+hC,eAAgB,SAACh3B,EAAU1E,GACvB0E,EAASyb,MAAM3b,eAAsB9C,IAAV1B,EAAsBA,EAAQ,MAC7D,EACAghC,kBAAmB,SAACt8B,GAAQ,OAAKmE,QAAuD,UAA/CpO,OAAOipB,iBAAiBhf,GAAUwlC,SAAqB,ICf9FC,IAAS,kCACR1N,IACAl9B,IACAmnB,IAAc,IACjB0jB,0BAA2BJ,I","sources":["../node_modules/framer-motion/dist/es/gestures/utils/event-type.mjs","../node_modules/framer-motion/dist/es/events/event-info.mjs","../node_modules/framer-motion/dist/es/utils/time-conversion.mjs","../node_modules/framer-motion/dist/es/events/use-dom-event.mjs","../node_modules/framer-motion/dist/es/events/use-pointer-event.mjs","../node_modules/framer-motion/dist/es/events/utils.mjs","../node_modules/popmotion/dist/es/utils/is-point.mjs","../node_modules/popmotion/dist/es/utils/is-point-3d.mjs","../node_modules/popmotion/dist/es/utils/inc.mjs","../node_modules/popmotion/dist/es/utils/distance.mjs","../node_modules/popmotion/dist/es/utils/pipe.mjs","../node_modules/framer-motion/dist/es/gestures/PanSession.mjs","../node_modules/framer-motion/dist/es/gestures/drag/utils/lock.mjs","../node_modules/popmotion/dist/es/utils/mix.mjs","../node_modules/popmotion/dist/es/utils/progress.mjs","../node_modules/popmotion/dist/es/utils/clamp.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-calc.mjs","../node_modules/framer-motion/dist/es/gestures/drag/utils/constraints.mjs","../node_modules/framer-motion/dist/es/render/utils/types.mjs","../node_modules/framer-motion/dist/es/projection/utils/each-axis.mjs","../node_modules/framer-motion/dist/es/projection/geometry/conversion.mjs","../node_modules/framer-motion/dist/es/projection/utils/has-transform.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-apply.mjs","../node_modules/framer-motion/dist/es/projection/utils/measure.mjs","../node_modules/popmotion/dist/es/animations/utils/find-spring.mjs","../node_modules/popmotion/dist/es/animations/generators/spring.mjs","../node_modules/style-value-types/dist/es/color/utils.mjs","../node_modules/style-value-types/dist/es/color/rgba.mjs","../node_modules/style-value-types/dist/es/color/hex.mjs","../node_modules/style-value-types/dist/es/color/hsla.mjs","../node_modules/popmotion/dist/es/utils/hsla-to-rgba.mjs","../node_modules/popmotion/dist/es/utils/mix-color.mjs","../node_modules/style-value-types/dist/es/color/index.mjs","../node_modules/style-value-types/dist/es/complex/index.mjs","../node_modules/popmotion/dist/es/utils/mix-complex.mjs","../node_modules/popmotion/dist/es/utils/interpolate.mjs","../node_modules/popmotion/dist/es/easing/utils.mjs","../node_modules/popmotion/dist/es/easing/index.mjs","../node_modules/popmotion/dist/es/animations/generators/keyframes.mjs","../node_modules/popmotion/dist/es/animations/utils/detect-animation-from-options.mjs","../node_modules/popmotion/dist/es/animations/generators/decay.mjs","../node_modules/popmotion/dist/es/animations/utils/elapsed.mjs","../node_modules/popmotion/dist/es/animations/index.mjs","../node_modules/popmotion/dist/es/easing/cubic-bezier.mjs","../node_modules/framer-motion/dist/es/animation/utils/easing.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animatable.mjs","../node_modules/framer-motion/dist/es/animation/utils/default-transitions.mjs","../node_modules/style-value-types/dist/es/complex/filter.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/defaults.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/animatable-none.mjs","../node_modules/framer-motion/dist/es/utils/use-instant-transition-state.mjs","../node_modules/framer-motion/dist/es/animation/utils/transitions.mjs","../node_modules/popmotion/dist/es/animations/inertia.mjs","../node_modules/framer-motion/dist/es/gestures/drag/VisualElementDragControls.mjs","../node_modules/framer-motion/dist/es/projection/geometry/models.mjs","../node_modules/framer-motion/dist/es/utils/use-unmount-effect.mjs","../node_modules/framer-motion/dist/es/motion/utils/make-renderless-component.mjs","../node_modules/framer-motion/dist/es/motion/features/drag.mjs","../node_modules/framer-motion/dist/es/gestures/use-pan-gesture.mjs","../node_modules/framer-motion/dist/es/gestures/drag/use-drag.mjs","../node_modules/framer-motion/dist/es/components/AnimatePresence/use-presence.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-border-radius.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/css-variables-conversion.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-box-shadow.mjs","../node_modules/framer-motion/dist/es/motion/features/layout/MeasureLayout.mjs","../node_modules/framer-motion/dist/es/motion/features/layout/index.mjs","../node_modules/framer-motion/dist/es/utils/shallow-compare.mjs","../node_modules/framer-motion/dist/es/utils/is-numerical-string.mjs","../node_modules/framer-motion/dist/es/utils/is-zero-value-string.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/test.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/dimensions.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/type-auto.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/find.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-dynamic-variants.mjs","../node_modules/framer-motion/dist/es/render/utils/setters.mjs","../node_modules/framer-motion/dist/es/value/use-will-change/is.mjs","../node_modules/framer-motion/dist/es/render/utils/animation.mjs","../node_modules/framer-motion/dist/es/render/utils/animation-state.mjs","../node_modules/framer-motion/dist/es/motion/features/animations.mjs","../node_modules/framer-motion/dist/es/gestures/use-hover-gesture.mjs","../node_modules/framer-motion/dist/es/gestures/utils/is-node-or-child.mjs","../node_modules/framer-motion/dist/es/utils/warn-once.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/observers.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/use-viewport.mjs","../node_modules/framer-motion/dist/es/motion/features/gestures.mjs","../node_modules/framer-motion/dist/es/gestures/use-tap-gesture.mjs","../node_modules/framer-motion/dist/es/gestures/use-focus-gesture.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/state.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/index.mjs","../node_modules/framer-motion/dist/es/render/utils/lifecycles.mjs","../node_modules/framer-motion/dist/es/render/utils/motion-values.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/unit-conversion.mjs","../node_modules/framer-motion/dist/es/render/index.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/parse-dom-variant.mjs","../node_modules/framer-motion/dist/es/render/html/visual-element.mjs","../node_modules/framer-motion/dist/es/render/svg/visual-element.mjs","../node_modules/framer-motion/dist/es/render/dom/features-animation.mjs","../node_modules/framer-motion/dist/es/render/dom/create-visual-element.mjs","../node_modules/framer-motion/dist/es/animation/animate.mjs","../node_modules/framer-motion/dist/es/projection/animation/mix-values.mjs","../node_modules/framer-motion/dist/es/projection/geometry/copy.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-remove.mjs","../node_modules/framer-motion/dist/es/projection/geometry/utils.mjs","../node_modules/framer-motion/dist/es/projection/shared/stack.mjs","../node_modules/framer-motion/dist/es/projection/styles/transform.mjs","../node_modules/framer-motion/dist/es/render/utils/compare-by-depth.mjs","../node_modules/framer-motion/dist/es/render/utils/flat-tree.mjs","../node_modules/framer-motion/dist/es/projection/node/create-projection-node.mjs","../node_modules/framer-motion/dist/es/projection/node/DocumentProjectionNode.mjs","../node_modules/framer-motion/dist/es/projection/node/HTMLProjectionNode.mjs","../node_modules/framer-motion/dist/es/render/dom/features-max.mjs"],"sourcesContent":["function isMouseEvent(event) {\n    // PointerEvent inherits from MouseEvent so we can't use a straight instanceof check.\n    if (typeof PointerEvent !== \"undefined\" && event instanceof PointerEvent) {\n        return !!(event.pointerType === \"mouse\");\n    }\n    return event instanceof MouseEvent;\n}\nfunction isTouchEvent(event) {\n    const hasTouches = !!event.touches;\n    return hasTouches;\n}\n\nexport { isMouseEvent, isTouchEvent };\n","import { isTouchEvent } from '../gestures/utils/event-type.mjs';\n\n/**\n * Filters out events not attached to the primary pointer (currently left mouse button)\n * @param eventHandler\n */\nfunction filterPrimaryPointer(eventHandler) {\n    return (event) => {\n        const isMouseEvent = event instanceof MouseEvent;\n        const isPrimaryPointer = !isMouseEvent ||\n            (isMouseEvent && event.button === 0);\n        if (isPrimaryPointer) {\n            eventHandler(event);\n        }\n    };\n}\nconst defaultPagePoint = { pageX: 0, pageY: 0 };\nfunction pointFromTouch(e, pointType = \"page\") {\n    const primaryTouch = e.touches[0] || e.changedTouches[0];\n    const point = primaryTouch || defaultPagePoint;\n    return {\n        x: point[pointType + \"X\"],\n        y: point[pointType + \"Y\"],\n    };\n}\nfunction pointFromMouse(point, pointType = \"page\") {\n    return {\n        x: point[pointType + \"X\"],\n        y: point[pointType + \"Y\"],\n    };\n}\nfunction extractEventInfo(event, pointType = \"page\") {\n    return {\n        point: isTouchEvent(event)\n            ? pointFromTouch(event, pointType)\n            : pointFromMouse(event, pointType),\n    };\n}\nconst wrapHandler = (handler, shouldFilterPrimaryPointer = false) => {\n    const listener = (event) => handler(event, extractEventInfo(event));\n    return shouldFilterPrimaryPointer\n        ? filterPrimaryPointer(listener)\n        : listener;\n};\n\nexport { extractEventInfo, wrapHandler };\n","/**\n * Converts seconds to milliseconds\n *\n * @param seconds - Time in seconds.\n * @return milliseconds - Converted time in milliseconds.\n */\nconst secondsToMilliseconds = (seconds) => seconds * 1000;\n\nexport { secondsToMilliseconds };\n","import { useEffect } from 'react';\n\nfunction addDomEvent(target, eventName, handler, options = { passive: true }) {\n    target.addEventListener(eventName, handler, options);\n    return () => target.removeEventListener(eventName, handler);\n}\n/**\n * Attaches an event listener directly to the provided DOM element.\n *\n * Bypassing React's event system can be desirable, for instance when attaching non-passive\n * event handlers.\n *\n * ```jsx\n * const ref = useRef(null)\n *\n * useDomEvent(ref, 'wheel', onWheel, { passive: false })\n *\n * return <div ref={ref} />\n * ```\n *\n * @param ref - React.RefObject that's been provided to the element you want to bind the listener to.\n * @param eventName - Name of the event you want listen for.\n * @param handler - Function to fire when receiving the event.\n * @param options - Options to pass to `Event.addEventListener`.\n *\n * @public\n */\nfunction useDomEvent(ref, eventName, handler, options) {\n    useEffect(() => {\n        const element = ref.current;\n        if (handler && element) {\n            return addDomEvent(element, eventName, handler, options);\n        }\n    }, [ref, eventName, handler, options]);\n}\n\nexport { addDomEvent, useDomEvent };\n","import { addDomEvent, useDomEvent } from './use-dom-event.mjs';\nimport { wrapHandler } from './event-info.mjs';\nimport { supportsPointerEvents, supportsTouchEvents, supportsMouseEvents } from './utils.mjs';\n\nconst mouseEventNames = {\n    pointerdown: \"mousedown\",\n    pointermove: \"mousemove\",\n    pointerup: \"mouseup\",\n    pointercancel: \"mousecancel\",\n    pointerover: \"mouseover\",\n    pointerout: \"mouseout\",\n    pointerenter: \"mouseenter\",\n    pointerleave: \"mouseleave\",\n};\nconst touchEventNames = {\n    pointerdown: \"touchstart\",\n    pointermove: \"touchmove\",\n    pointerup: \"touchend\",\n    pointercancel: \"touchcancel\",\n};\nfunction getPointerEventName(name) {\n    if (supportsPointerEvents()) {\n        return name;\n    }\n    else if (supportsTouchEvents()) {\n        return touchEventNames[name];\n    }\n    else if (supportsMouseEvents()) {\n        return mouseEventNames[name];\n    }\n    return name;\n}\nfunction addPointerEvent(target, eventName, handler, options) {\n    return addDomEvent(target, getPointerEventName(eventName), wrapHandler(handler, eventName === \"pointerdown\"), options);\n}\nfunction usePointerEvent(ref, eventName, handler, options) {\n    return useDomEvent(ref, getPointerEventName(eventName), handler && wrapHandler(handler, eventName === \"pointerdown\"), options);\n}\n\nexport { addPointerEvent, usePointerEvent };\n","import { isBrowser } from '../utils/is-browser.mjs';\n\n// We check for event support via functions in case they've been mocked by a testing suite.\nconst supportsPointerEvents = () => isBrowser && window.onpointerdown === null;\nconst supportsTouchEvents = () => isBrowser && window.ontouchstart === null;\nconst supportsMouseEvents = () => isBrowser && window.onmousedown === null;\n\nexport { supportsMouseEvents, supportsPointerEvents, supportsTouchEvents };\n","const isPoint = (point) => point.hasOwnProperty('x') && point.hasOwnProperty('y');\n\nexport { isPoint };\n","import { isPoint } from './is-point.mjs';\n\nconst isPoint3D = (point) => isPoint(point) && point.hasOwnProperty('z');\n\nexport { isPoint3D };\n","const zeroPoint = {\n    x: 0,\n    y: 0,\n    z: 0\n};\nconst isNum = (v) => typeof v === 'number';\n\nexport { isNum, zeroPoint };\n","import { isPoint } from './is-point.mjs';\nimport { isPoint3D } from './is-point-3d.mjs';\nimport { isNum } from './inc.mjs';\n\nconst distance1D = (a, b) => Math.abs(a - b);\nfunction distance(a, b) {\n    if (isNum(a) && isNum(b)) {\n        return distance1D(a, b);\n    }\n    else if (isPoint(a) && isPoint(b)) {\n        const xDelta = distance1D(a.x, b.x);\n        const yDelta = distance1D(a.y, b.y);\n        const zDelta = isPoint3D(a) && isPoint3D(b) ? distance1D(a.z, b.z) : 0;\n        return Math.sqrt(Math.pow(xDelta, 2) + Math.pow(yDelta, 2) + Math.pow(zDelta, 2));\n    }\n}\n\nexport { distance };\n","const combineFunctions = (a, b) => (v) => b(a(v));\nconst pipe = (...transformers) => transformers.reduce(combineFunctions);\n\nexport { pipe };\n","import { isMouseEvent, isTouchEvent } from './utils/event-type.mjs';\nimport { extractEventInfo } from '../events/event-info.mjs';\nimport sync, { getFrameData, cancelSync } from 'framesync';\nimport { secondsToMilliseconds } from '../utils/time-conversion.mjs';\nimport { addPointerEvent } from '../events/use-pointer-event.mjs';\nimport { distance, pipe } from 'popmotion';\n\n/**\n * @internal\n */\nclass PanSession {\n    constructor(event, handlers, { transformPagePoint } = {}) {\n        /**\n         * @internal\n         */\n        this.startEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEventInfo = null;\n        /**\n         * @internal\n         */\n        this.handlers = {};\n        this.updatePoint = () => {\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const info = getPanInfo(this.lastMoveEventInfo, this.history);\n            const isPanStarted = this.startEvent !== null;\n            // Only start panning if the offset is larger than 3 pixels. If we make it\n            // any larger than this we'll want to reset the pointer history\n            // on the first update to avoid visual snapping to the cursoe.\n            const isDistancePastThreshold = distance(info.offset, { x: 0, y: 0 }) >= 3;\n            if (!isPanStarted && !isDistancePastThreshold)\n                return;\n            const { point } = info;\n            const { timestamp } = getFrameData();\n            this.history.push({ ...point, timestamp });\n            const { onStart, onMove } = this.handlers;\n            if (!isPanStarted) {\n                onStart && onStart(this.lastMoveEvent, info);\n                this.startEvent = this.lastMoveEvent;\n            }\n            onMove && onMove(this.lastMoveEvent, info);\n        };\n        this.handlePointerMove = (event, info) => {\n            this.lastMoveEvent = event;\n            this.lastMoveEventInfo = transformPoint(info, this.transformPagePoint);\n            // Because Safari doesn't trigger mouseup events when it's above a `<select>`\n            if (isMouseEvent(event) && event.buttons === 0) {\n                this.handlePointerUp(event, info);\n                return;\n            }\n            // Throttle mouse move event to once per frame\n            sync.update(this.updatePoint, true);\n        };\n        this.handlePointerUp = (event, info) => {\n            this.end();\n            const { onEnd, onSessionEnd } = this.handlers;\n            const panInfo = getPanInfo(transformPoint(info, this.transformPagePoint), this.history);\n            if (this.startEvent && onEnd) {\n                onEnd(event, panInfo);\n            }\n            onSessionEnd && onSessionEnd(event, panInfo);\n        };\n        // If we have more than one touch, don't start detecting this gesture\n        if (isTouchEvent(event) && event.touches.length > 1)\n            return;\n        this.handlers = handlers;\n        this.transformPagePoint = transformPagePoint;\n        const info = extractEventInfo(event);\n        const initialInfo = transformPoint(info, this.transformPagePoint);\n        const { point } = initialInfo;\n        const { timestamp } = getFrameData();\n        this.history = [{ ...point, timestamp }];\n        const { onSessionStart } = handlers;\n        onSessionStart &&\n            onSessionStart(event, getPanInfo(initialInfo, this.history));\n        this.removeListeners = pipe(addPointerEvent(window, \"pointermove\", this.handlePointerMove), addPointerEvent(window, \"pointerup\", this.handlePointerUp), addPointerEvent(window, \"pointercancel\", this.handlePointerUp));\n    }\n    updateHandlers(handlers) {\n        this.handlers = handlers;\n    }\n    end() {\n        this.removeListeners && this.removeListeners();\n        cancelSync.update(this.updatePoint);\n    }\n}\nfunction transformPoint(info, transformPagePoint) {\n    return transformPagePoint ? { point: transformPagePoint(info.point) } : info;\n}\nfunction subtractPoint(a, b) {\n    return { x: a.x - b.x, y: a.y - b.y };\n}\nfunction getPanInfo({ point }, history) {\n    return {\n        point,\n        delta: subtractPoint(point, lastDevicePoint(history)),\n        offset: subtractPoint(point, startDevicePoint(history)),\n        velocity: getVelocity(history, 0.1),\n    };\n}\nfunction startDevicePoint(history) {\n    return history[0];\n}\nfunction lastDevicePoint(history) {\n    return history[history.length - 1];\n}\nfunction getVelocity(history, timeDelta) {\n    if (history.length < 2) {\n        return { x: 0, y: 0 };\n    }\n    let i = history.length - 1;\n    let timestampedPoint = null;\n    const lastPoint = lastDevicePoint(history);\n    while (i >= 0) {\n        timestampedPoint = history[i];\n        if (lastPoint.timestamp - timestampedPoint.timestamp >\n            secondsToMilliseconds(timeDelta)) {\n            break;\n        }\n        i--;\n    }\n    if (!timestampedPoint) {\n        return { x: 0, y: 0 };\n    }\n    const time = (lastPoint.timestamp - timestampedPoint.timestamp) / 1000;\n    if (time === 0) {\n        return { x: 0, y: 0 };\n    }\n    const currentVelocity = {\n        x: (lastPoint.x - timestampedPoint.x) / time,\n        y: (lastPoint.y - timestampedPoint.y) / time,\n    };\n    if (currentVelocity.x === Infinity) {\n        currentVelocity.x = 0;\n    }\n    if (currentVelocity.y === Infinity) {\n        currentVelocity.y = 0;\n    }\n    return currentVelocity;\n}\n\nexport { PanSession };\n","function createLock(name) {\n    let lock = null;\n    return () => {\n        const openLock = () => {\n            lock = null;\n        };\n        if (lock === null) {\n            lock = name;\n            return openLock;\n        }\n        return false;\n    };\n}\nconst globalHorizontalLock = createLock(\"dragHorizontal\");\nconst globalVerticalLock = createLock(\"dragVertical\");\nfunction getGlobalLock(drag) {\n    let lock = false;\n    if (drag === \"y\") {\n        lock = globalVerticalLock();\n    }\n    else if (drag === \"x\") {\n        lock = globalHorizontalLock();\n    }\n    else {\n        const openHorizontal = globalHorizontalLock();\n        const openVertical = globalVerticalLock();\n        if (openHorizontal && openVertical) {\n            lock = () => {\n                openHorizontal();\n                openVertical();\n            };\n        }\n        else {\n            // Release the locks because we don't use them\n            if (openHorizontal)\n                openHorizontal();\n            if (openVertical)\n                openVertical();\n        }\n    }\n    return lock;\n}\nfunction isDragActive() {\n    // Check the gesture lock - if we get it, it means no drag gesture is active\n    // and we can safely fire the tap gesture.\n    const openGestureLock = getGlobalLock(true);\n    if (!openGestureLock)\n        return true;\n    openGestureLock();\n    return false;\n}\n\nexport { createLock, getGlobalLock, isDragActive };\n","const mix = (from, to, progress) => -progress * from + progress * to + from;\n\nexport { mix };\n","const progress = (from, to, value) => {\n    const toFromDifference = to - from;\n    return toFromDifference === 0 ? 1 : (value - from) / toFromDifference;\n};\n\nexport { progress };\n","const clamp = (min, max, v) => Math.min(Math.max(v, min), max);\n\nexport { clamp };\n","import { mix, distance } from 'popmotion';\n\nfunction calcLength(axis) {\n    return axis.max - axis.min;\n}\nfunction isNear(value, target = 0, maxDistance = 0.01) {\n    return distance(value, target) < maxDistance;\n}\nfunction calcAxisDelta(delta, source, target, origin = 0.5) {\n    delta.origin = origin;\n    delta.originPoint = mix(source.min, source.max, delta.origin);\n    delta.scale = calcLength(target) / calcLength(source);\n    if (isNear(delta.scale, 1, 0.0001) || isNaN(delta.scale))\n        delta.scale = 1;\n    delta.translate =\n        mix(target.min, target.max, delta.origin) - delta.originPoint;\n    if (isNear(delta.translate) || isNaN(delta.translate))\n        delta.translate = 0;\n}\nfunction calcBoxDelta(delta, source, target, origin) {\n    calcAxisDelta(delta.x, source.x, target.x, origin === null || origin === void 0 ? void 0 : origin.originX);\n    calcAxisDelta(delta.y, source.y, target.y, origin === null || origin === void 0 ? void 0 : origin.originY);\n}\nfunction calcRelativeAxis(target, relative, parent) {\n    target.min = parent.min + relative.min;\n    target.max = target.min + calcLength(relative);\n}\nfunction calcRelativeBox(target, relative, parent) {\n    calcRelativeAxis(target.x, relative.x, parent.x);\n    calcRelativeAxis(target.y, relative.y, parent.y);\n}\nfunction calcRelativeAxisPosition(target, layout, parent) {\n    target.min = layout.min - parent.min;\n    target.max = target.min + calcLength(layout);\n}\nfunction calcRelativePosition(target, layout, parent) {\n    calcRelativeAxisPosition(target.x, layout.x, parent.x);\n    calcRelativeAxisPosition(target.y, layout.y, parent.y);\n}\n\nexport { calcAxisDelta, calcBoxDelta, calcLength, calcRelativeAxis, calcRelativeAxisPosition, calcRelativeBox, calcRelativePosition, isNear };\n","import { mix, progress, clamp } from 'popmotion';\nimport { calcLength } from '../../../projection/geometry/delta-calc.mjs';\n\n/**\n * Apply constraints to a point. These constraints are both physical along an\n * axis, and an elastic factor that determines how much to constrain the point\n * by if it does lie outside the defined parameters.\n */\nfunction applyConstraints(point, { min, max }, elastic) {\n    if (min !== undefined && point < min) {\n        // If we have a min point defined, and this is outside of that, constrain\n        point = elastic ? mix(min, point, elastic.min) : Math.max(point, min);\n    }\n    else if (max !== undefined && point > max) {\n        // If we have a max point defined, and this is outside of that, constrain\n        point = elastic ? mix(max, point, elastic.max) : Math.min(point, max);\n    }\n    return point;\n}\n/**\n * Calculate constraints in terms of the viewport when defined relatively to the\n * measured axis. This is measured from the nearest edge, so a max constraint of 200\n * on an axis with a max value of 300 would return a constraint of 500 - axis length\n */\nfunction calcRelativeAxisConstraints(axis, min, max) {\n    return {\n        min: min !== undefined ? axis.min + min : undefined,\n        max: max !== undefined\n            ? axis.max + max - (axis.max - axis.min)\n            : undefined,\n    };\n}\n/**\n * Calculate constraints in terms of the viewport when\n * defined relatively to the measured bounding box.\n */\nfunction calcRelativeConstraints(layoutBox, { top, left, bottom, right }) {\n    return {\n        x: calcRelativeAxisConstraints(layoutBox.x, left, right),\n        y: calcRelativeAxisConstraints(layoutBox.y, top, bottom),\n    };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative axis\n */\nfunction calcViewportAxisConstraints(layoutAxis, constraintsAxis) {\n    let min = constraintsAxis.min - layoutAxis.min;\n    let max = constraintsAxis.max - layoutAxis.max;\n    // If the constraints axis is actually smaller than the layout axis then we can\n    // flip the constraints\n    if (constraintsAxis.max - constraintsAxis.min <\n        layoutAxis.max - layoutAxis.min) {\n        [min, max] = [max, min];\n    }\n    return { min, max };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative box\n */\nfunction calcViewportConstraints(layoutBox, constraintsBox) {\n    return {\n        x: calcViewportAxisConstraints(layoutBox.x, constraintsBox.x),\n        y: calcViewportAxisConstraints(layoutBox.y, constraintsBox.y),\n    };\n}\n/**\n * Calculate a transform origin relative to the source axis, between 0-1, that results\n * in an asthetically pleasing scale/transform needed to project from source to target.\n */\nfunction calcOrigin(source, target) {\n    let origin = 0.5;\n    const sourceLength = calcLength(source);\n    const targetLength = calcLength(target);\n    if (targetLength > sourceLength) {\n        origin = progress(target.min, target.max - sourceLength, source.min);\n    }\n    else if (sourceLength > targetLength) {\n        origin = progress(source.min, source.max - targetLength, target.min);\n    }\n    return clamp(0, 1, origin);\n}\n/**\n * Rebase the calculated viewport constraints relative to the layout.min point.\n */\nfunction rebaseAxisConstraints(layout, constraints) {\n    const relativeConstraints = {};\n    if (constraints.min !== undefined) {\n        relativeConstraints.min = constraints.min - layout.min;\n    }\n    if (constraints.max !== undefined) {\n        relativeConstraints.max = constraints.max - layout.min;\n    }\n    return relativeConstraints;\n}\nconst defaultElastic = 0.35;\n/**\n * Accepts a dragElastic prop and returns resolved elastic values for each axis.\n */\nfunction resolveDragElastic(dragElastic = defaultElastic) {\n    if (dragElastic === false) {\n        dragElastic = 0;\n    }\n    else if (dragElastic === true) {\n        dragElastic = defaultElastic;\n    }\n    return {\n        x: resolveAxisElastic(dragElastic, \"left\", \"right\"),\n        y: resolveAxisElastic(dragElastic, \"top\", \"bottom\"),\n    };\n}\nfunction resolveAxisElastic(dragElastic, minLabel, maxLabel) {\n    return {\n        min: resolvePointElastic(dragElastic, minLabel),\n        max: resolvePointElastic(dragElastic, maxLabel),\n    };\n}\nfunction resolvePointElastic(dragElastic, label) {\n    var _a;\n    return typeof dragElastic === \"number\"\n        ? dragElastic\n        : (_a = dragElastic[label]) !== null && _a !== void 0 ? _a : 0;\n}\n\nexport { applyConstraints, calcOrigin, calcRelativeAxisConstraints, calcRelativeConstraints, calcViewportAxisConstraints, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, resolveAxisElastic, resolveDragElastic, resolvePointElastic };\n","var AnimationType;\n(function (AnimationType) {\n    AnimationType[\"Animate\"] = \"animate\";\n    AnimationType[\"Hover\"] = \"whileHover\";\n    AnimationType[\"Tap\"] = \"whileTap\";\n    AnimationType[\"Drag\"] = \"whileDrag\";\n    AnimationType[\"Focus\"] = \"whileFocus\";\n    AnimationType[\"InView\"] = \"whileInView\";\n    AnimationType[\"Exit\"] = \"exit\";\n})(AnimationType || (AnimationType = {}));\n\nexport { AnimationType };\n","function eachAxis(callback) {\n    return [callback(\"x\"), callback(\"y\")];\n}\n\nexport { eachAxis };\n","/**\n * Bounding boxes tend to be defined as top, left, right, bottom. For various operations\n * it's easier to consider each axis individually. This function returns a bounding box\n * as a map of single-axis min/max values.\n */\nfunction convertBoundingBoxToBox({ top, left, right, bottom, }) {\n    return {\n        x: { min: left, max: right },\n        y: { min: top, max: bottom },\n    };\n}\nfunction convertBoxToBoundingBox({ x, y }) {\n    return { top: y.min, right: x.max, bottom: y.max, left: x.min };\n}\n/**\n * Applies a TransformPoint function to a bounding box. TransformPoint is usually a function\n * provided by Framer to allow measured points to be corrected for device scaling. This is used\n * when measuring DOM elements and DOM event points.\n */\nfunction transformBoxPoints(point, transformPoint) {\n    if (!transformPoint)\n        return point;\n    const topLeft = transformPoint({ x: point.left, y: point.top });\n    const bottomRight = transformPoint({ x: point.right, y: point.bottom });\n    return {\n        top: topLeft.y,\n        left: topLeft.x,\n        bottom: bottomRight.y,\n        right: bottomRight.x,\n    };\n}\n\nexport { convertBoundingBoxToBox, convertBoxToBoundingBox, transformBoxPoints };\n","function isIdentityScale(scale) {\n    return scale === undefined || scale === 1;\n}\nfunction hasScale({ scale, scaleX, scaleY }) {\n    return (!isIdentityScale(scale) ||\n        !isIdentityScale(scaleX) ||\n        !isIdentityScale(scaleY));\n}\nfunction hasTransform(values) {\n    return (hasScale(values) ||\n        hasTranslate(values.x) ||\n        hasTranslate(values.y) ||\n        values.z ||\n        values.rotate ||\n        values.rotateX ||\n        values.rotateY);\n}\nfunction hasTranslate(value) {\n    return value && value !== \"0%\";\n}\n\nexport { hasScale, hasTransform };\n","import { mix } from 'popmotion';\nimport { hasTransform } from '../utils/has-transform.mjs';\n\n/**\n * Scales a point based on a factor and an originPoint\n */\nfunction scalePoint(point, scale, originPoint) {\n    const distanceFromOrigin = point - originPoint;\n    const scaled = scale * distanceFromOrigin;\n    return originPoint + scaled;\n}\n/**\n * Applies a translate/scale delta to a point\n */\nfunction applyPointDelta(point, translate, scale, originPoint, boxScale) {\n    if (boxScale !== undefined) {\n        point = scalePoint(point, boxScale, originPoint);\n    }\n    return scalePoint(point, scale, originPoint) + translate;\n}\n/**\n * Applies a translate/scale delta to an axis\n */\nfunction applyAxisDelta(axis, translate = 0, scale = 1, originPoint, boxScale) {\n    axis.min = applyPointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = applyPointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Applies a translate/scale delta to a box\n */\nfunction applyBoxDelta(box, { x, y }) {\n    applyAxisDelta(box.x, x.translate, x.scale, x.originPoint);\n    applyAxisDelta(box.y, y.translate, y.scale, y.originPoint);\n}\n/**\n * Apply a tree of deltas to a box. We do this to calculate the effect of all the transforms\n * in a tree upon our box before then calculating how to project it into our desired viewport-relative box\n *\n * This is the final nested loop within updateLayoutDelta for future refactoring\n */\nfunction applyTreeDeltas(box, treeScale, treePath, isSharedTransition = false) {\n    var _a, _b;\n    const treeLength = treePath.length;\n    if (!treeLength)\n        return;\n    // Reset the treeScale\n    treeScale.x = treeScale.y = 1;\n    let node;\n    let delta;\n    for (let i = 0; i < treeLength; i++) {\n        node = treePath[i];\n        delta = node.projectionDelta;\n        if (((_b = (_a = node.instance) === null || _a === void 0 ? void 0 : _a.style) === null || _b === void 0 ? void 0 : _b.display) === \"contents\")\n            continue;\n        if (isSharedTransition &&\n            node.options.layoutScroll &&\n            node.scroll &&\n            node !== node.root) {\n            transformBox(box, { x: -node.scroll.x, y: -node.scroll.y });\n        }\n        if (delta) {\n            // Incoporate each ancestor's scale into a culmulative treeScale for this component\n            treeScale.x *= delta.x.scale;\n            treeScale.y *= delta.y.scale;\n            // Apply each ancestor's calculated delta into this component's recorded layout box\n            applyBoxDelta(box, delta);\n        }\n        if (isSharedTransition && hasTransform(node.latestValues)) {\n            transformBox(box, node.latestValues);\n        }\n    }\n}\nfunction translateAxis(axis, distance) {\n    axis.min = axis.min + distance;\n    axis.max = axis.max + distance;\n}\n/**\n * Apply a transform to an axis from the latest resolved motion values.\n * This function basically acts as a bridge between a flat motion value map\n * and applyAxisDelta\n */\nfunction transformAxis(axis, transforms, [key, scaleKey, originKey]) {\n    const axisOrigin = transforms[originKey] !== undefined ? transforms[originKey] : 0.5;\n    const originPoint = mix(axis.min, axis.max, axisOrigin);\n    // Apply the axis delta to the final axis\n    applyAxisDelta(axis, transforms[key], transforms[scaleKey], originPoint, transforms.scale);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Apply a transform to a box from the latest resolved motion values.\n */\nfunction transformBox(box, transform) {\n    transformAxis(box.x, transform, xKeys);\n    transformAxis(box.y, transform, yKeys);\n}\n\nexport { applyAxisDelta, applyBoxDelta, applyPointDelta, applyTreeDeltas, scalePoint, transformAxis, transformBox, translateAxis };\n","import { convertBoundingBoxToBox, transformBoxPoints } from '../geometry/conversion.mjs';\nimport { translateAxis } from '../geometry/delta-apply.mjs';\n\nfunction measureViewportBox(instance, transformPoint) {\n    return convertBoundingBoxToBox(transformBoxPoints(instance.getBoundingClientRect(), transformPoint));\n}\nfunction measurePageBox(element, rootProjectionNode, transformPagePoint) {\n    const viewportBox = measureViewportBox(element, transformPagePoint);\n    const { scroll } = rootProjectionNode;\n    if (scroll) {\n        translateAxis(viewportBox.x, scroll.x);\n        translateAxis(viewportBox.y, scroll.y);\n    }\n    return viewportBox;\n}\n\nexport { measurePageBox, measureViewportBox };\n","import { warning } from 'hey-listen';\nimport { clamp } from '../../utils/clamp.mjs';\n\nconst safeMin = 0.001;\nconst minDuration = 0.01;\nconst maxDuration = 10.0;\nconst minDamping = 0.05;\nconst maxDamping = 1;\nfunction findSpring({ duration = 800, bounce = 0.25, velocity = 0, mass = 1, }) {\n    let envelope;\n    let derivative;\n    warning(duration <= maxDuration * 1000, \"Spring duration must be 10 seconds or less\");\n    let dampingRatio = 1 - bounce;\n    dampingRatio = clamp(minDamping, maxDamping, dampingRatio);\n    duration = clamp(minDuration, maxDuration, duration / 1000);\n    if (dampingRatio < 1) {\n        envelope = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const a = exponentialDecay - velocity;\n            const b = calcAngularFreq(undampedFreq, dampingRatio);\n            const c = Math.exp(-delta);\n            return safeMin - (a / b) * c;\n        };\n        derivative = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const d = delta * velocity + velocity;\n            const e = Math.pow(dampingRatio, 2) * Math.pow(undampedFreq, 2) * duration;\n            const f = Math.exp(-delta);\n            const g = calcAngularFreq(Math.pow(undampedFreq, 2), dampingRatio);\n            const factor = -envelope(undampedFreq) + safeMin > 0 ? -1 : 1;\n            return (factor * ((d - e) * f)) / g;\n        };\n    }\n    else {\n        envelope = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (undampedFreq - velocity) * duration + 1;\n            return -safeMin + a * b;\n        };\n        derivative = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (velocity - undampedFreq) * (duration * duration);\n            return a * b;\n        };\n    }\n    const initialGuess = 5 / duration;\n    const undampedFreq = approximateRoot(envelope, derivative, initialGuess);\n    duration = duration * 1000;\n    if (isNaN(undampedFreq)) {\n        return {\n            stiffness: 100,\n            damping: 10,\n            duration,\n        };\n    }\n    else {\n        const stiffness = Math.pow(undampedFreq, 2) * mass;\n        return {\n            stiffness,\n            damping: dampingRatio * 2 * Math.sqrt(mass * stiffness),\n            duration,\n        };\n    }\n}\nconst rootIterations = 12;\nfunction approximateRoot(envelope, derivative, initialGuess) {\n    let result = initialGuess;\n    for (let i = 1; i < rootIterations; i++) {\n        result = result - envelope(result) / derivative(result);\n    }\n    return result;\n}\nfunction calcAngularFreq(undampedFreq, dampingRatio) {\n    return undampedFreq * Math.sqrt(1 - dampingRatio * dampingRatio);\n}\n\nexport { calcAngularFreq, findSpring, maxDamping, maxDuration, minDamping, minDuration };\n","import { __rest } from 'tslib';\nimport { findSpring, calcAngularFreq } from '../utils/find-spring.mjs';\n\nconst durationKeys = [\"duration\", \"bounce\"];\nconst physicsKeys = [\"stiffness\", \"damping\", \"mass\"];\nfunction isSpringType(options, keys) {\n    return keys.some((key) => options[key] !== undefined);\n}\nfunction getSpringOptions(options) {\n    let springOptions = Object.assign({ velocity: 0.0, stiffness: 100, damping: 10, mass: 1.0, isResolvedFromDuration: false }, options);\n    if (!isSpringType(options, physicsKeys) &&\n        isSpringType(options, durationKeys)) {\n        const derived = findSpring(options);\n        springOptions = Object.assign(Object.assign(Object.assign({}, springOptions), derived), { velocity: 0.0, mass: 1.0 });\n        springOptions.isResolvedFromDuration = true;\n    }\n    return springOptions;\n}\nfunction spring(_a) {\n    var { from = 0.0, to = 1.0, restSpeed = 2, restDelta } = _a, options = __rest(_a, [\"from\", \"to\", \"restSpeed\", \"restDelta\"]);\n    const state = { done: false, value: from };\n    let { stiffness, damping, mass, velocity, duration, isResolvedFromDuration, } = getSpringOptions(options);\n    let resolveSpring = zero;\n    let resolveVelocity = zero;\n    function createSpring() {\n        const initialVelocity = velocity ? -(velocity / 1000) : 0.0;\n        const initialDelta = to - from;\n        const dampingRatio = damping / (2 * Math.sqrt(stiffness * mass));\n        const undampedAngularFreq = Math.sqrt(stiffness / mass) / 1000;\n        if (restDelta === undefined) {\n            restDelta = Math.min(Math.abs(to - from) / 100, 0.4);\n        }\n        if (dampingRatio < 1) {\n            const angularFreq = calcAngularFreq(undampedAngularFreq, dampingRatio);\n            resolveSpring = (t) => {\n                const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n                return (to -\n                    envelope *\n                        (((initialVelocity +\n                            dampingRatio * undampedAngularFreq * initialDelta) /\n                            angularFreq) *\n                            Math.sin(angularFreq * t) +\n                            initialDelta * Math.cos(angularFreq * t)));\n            };\n            resolveVelocity = (t) => {\n                const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n                return (dampingRatio *\n                    undampedAngularFreq *\n                    envelope *\n                    ((Math.sin(angularFreq * t) *\n                        (initialVelocity +\n                            dampingRatio *\n                                undampedAngularFreq *\n                                initialDelta)) /\n                        angularFreq +\n                        initialDelta * Math.cos(angularFreq * t)) -\n                    envelope *\n                        (Math.cos(angularFreq * t) *\n                            (initialVelocity +\n                                dampingRatio *\n                                    undampedAngularFreq *\n                                    initialDelta) -\n                            angularFreq *\n                                initialDelta *\n                                Math.sin(angularFreq * t)));\n            };\n        }\n        else if (dampingRatio === 1) {\n            resolveSpring = (t) => to -\n                Math.exp(-undampedAngularFreq * t) *\n                    (initialDelta +\n                        (initialVelocity + undampedAngularFreq * initialDelta) *\n                            t);\n        }\n        else {\n            const dampedAngularFreq = undampedAngularFreq * Math.sqrt(dampingRatio * dampingRatio - 1);\n            resolveSpring = (t) => {\n                const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n                const freqForT = Math.min(dampedAngularFreq * t, 300);\n                return (to -\n                    (envelope *\n                        ((initialVelocity +\n                            dampingRatio * undampedAngularFreq * initialDelta) *\n                            Math.sinh(freqForT) +\n                            dampedAngularFreq *\n                                initialDelta *\n                                Math.cosh(freqForT))) /\n                        dampedAngularFreq);\n            };\n        }\n    }\n    createSpring();\n    return {\n        next: (t) => {\n            const current = resolveSpring(t);\n            if (!isResolvedFromDuration) {\n                const currentVelocity = resolveVelocity(t) * 1000;\n                const isBelowVelocityThreshold = Math.abs(currentVelocity) <= restSpeed;\n                const isBelowDisplacementThreshold = Math.abs(to - current) <= restDelta;\n                state.done =\n                    isBelowVelocityThreshold && isBelowDisplacementThreshold;\n            }\n            else {\n                state.done = t >= duration;\n            }\n            state.value = state.done ? to : current;\n            return state;\n        },\n        flipTarget: () => {\n            velocity = -velocity;\n            [from, to] = [to, from];\n            createSpring();\n        },\n    };\n}\nspring.needsInterpolation = (a, b) => typeof a === \"string\" || typeof b === \"string\";\nconst zero = (_t) => 0;\n\nexport { spring };\n","import { isString, singleColorRegex, floatRegex } from '../utils.mjs';\n\nconst isColorString = (type, testProp) => (v) => {\n    return Boolean((isString(v) && singleColorRegex.test(v) && v.startsWith(type)) ||\n        (testProp && Object.prototype.hasOwnProperty.call(v, testProp)));\n};\nconst splitColor = (aName, bName, cName) => (v) => {\n    if (!isString(v))\n        return v;\n    const [a, b, c, alpha] = v.match(floatRegex);\n    return {\n        [aName]: parseFloat(a),\n        [bName]: parseFloat(b),\n        [cName]: parseFloat(c),\n        alpha: alpha !== undefined ? parseFloat(alpha) : 1,\n    };\n};\n\nexport { isColorString, splitColor };\n","import { number, alpha } from '../numbers/index.mjs';\nimport { sanitize, clamp } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst clampRgbUnit = clamp(0, 255);\nconst rgbUnit = Object.assign(Object.assign({}, number), { transform: (v) => Math.round(clampRgbUnit(v)) });\nconst rgba = {\n    test: isColorString('rgb', 'red'),\n    parse: splitColor('red', 'green', 'blue'),\n    transform: ({ red, green, blue, alpha: alpha$1 = 1 }) => 'rgba(' +\n        rgbUnit.transform(red) +\n        ', ' +\n        rgbUnit.transform(green) +\n        ', ' +\n        rgbUnit.transform(blue) +\n        ', ' +\n        sanitize(alpha.transform(alpha$1)) +\n        ')',\n};\n\nexport { rgbUnit, rgba };\n","import { rgba } from './rgba.mjs';\nimport { isColorString } from './utils.mjs';\n\nfunction parseHex(v) {\n    let r = '';\n    let g = '';\n    let b = '';\n    let a = '';\n    if (v.length > 5) {\n        r = v.substr(1, 2);\n        g = v.substr(3, 2);\n        b = v.substr(5, 2);\n        a = v.substr(7, 2);\n    }\n    else {\n        r = v.substr(1, 1);\n        g = v.substr(2, 1);\n        b = v.substr(3, 1);\n        a = v.substr(4, 1);\n        r += r;\n        g += g;\n        b += b;\n        a += a;\n    }\n    return {\n        red: parseInt(r, 16),\n        green: parseInt(g, 16),\n        blue: parseInt(b, 16),\n        alpha: a ? parseInt(a, 16) / 255 : 1,\n    };\n}\nconst hex = {\n    test: isColorString('#'),\n    parse: parseHex,\n    transform: rgba.transform,\n};\n\nexport { hex };\n","import { alpha } from '../numbers/index.mjs';\nimport { percent } from '../numbers/units.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst hsla = {\n    test: isColorString('hsl', 'hue'),\n    parse: splitColor('hue', 'saturation', 'lightness'),\n    transform: ({ hue, saturation, lightness, alpha: alpha$1 = 1 }) => {\n        return ('hsla(' +\n            Math.round(hue) +\n            ', ' +\n            percent.transform(sanitize(saturation)) +\n            ', ' +\n            percent.transform(sanitize(lightness)) +\n            ', ' +\n            sanitize(alpha.transform(alpha$1)) +\n            ')');\n    },\n};\n\nexport { hsla };\n","function hueToRgb(p, q, t) {\n    if (t < 0)\n        t += 1;\n    if (t > 1)\n        t -= 1;\n    if (t < 1 / 6)\n        return p + (q - p) * 6 * t;\n    if (t < 1 / 2)\n        return q;\n    if (t < 2 / 3)\n        return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n}\nfunction hslaToRgba({ hue, saturation, lightness, alpha }) {\n    hue /= 360;\n    saturation /= 100;\n    lightness /= 100;\n    let red = 0;\n    let green = 0;\n    let blue = 0;\n    if (!saturation) {\n        red = green = blue = lightness;\n    }\n    else {\n        const q = lightness < 0.5\n            ? lightness * (1 + saturation)\n            : lightness + saturation - lightness * saturation;\n        const p = 2 * lightness - q;\n        red = hueToRgb(p, q, hue + 1 / 3);\n        green = hueToRgb(p, q, hue);\n        blue = hueToRgb(p, q, hue - 1 / 3);\n    }\n    return {\n        red: Math.round(red * 255),\n        green: Math.round(green * 255),\n        blue: Math.round(blue * 255),\n        alpha,\n    };\n}\n\nexport { hslaToRgba };\n","import { mix } from './mix.mjs';\nimport { hsla, rgba, hex } from 'style-value-types';\nimport { invariant } from 'hey-listen';\nimport { hslaToRgba } from './hsla-to-rgba.mjs';\n\nconst mixLinearColor = (from, to, v) => {\n    const fromExpo = from * from;\n    const toExpo = to * to;\n    return Math.sqrt(Math.max(0, v * (toExpo - fromExpo) + fromExpo));\n};\nconst colorTypes = [hex, rgba, hsla];\nconst getColorType = (v) => colorTypes.find((type) => type.test(v));\nconst notAnimatable = (color) => `'${color}' is not an animatable color. Use the equivalent color code instead.`;\nconst mixColor = (from, to) => {\n    let fromColorType = getColorType(from);\n    let toColorType = getColorType(to);\n    invariant(!!fromColorType, notAnimatable(from));\n    invariant(!!toColorType, notAnimatable(to));\n    let fromColor = fromColorType.parse(from);\n    let toColor = toColorType.parse(to);\n    if (fromColorType === hsla) {\n        fromColor = hslaToRgba(fromColor);\n        fromColorType = rgba;\n    }\n    if (toColorType === hsla) {\n        toColor = hslaToRgba(toColor);\n        toColorType = rgba;\n    }\n    const blended = Object.assign({}, fromColor);\n    return (v) => {\n        for (const key in blended) {\n            if (key !== \"alpha\") {\n                blended[key] = mixLinearColor(fromColor[key], toColor[key], v);\n            }\n        }\n        blended.alpha = mix(fromColor.alpha, toColor.alpha, v);\n        return fromColorType.transform(blended);\n    };\n};\n\nexport { mixColor, mixLinearColor };\n","import { isString } from '../utils.mjs';\nimport { hex } from './hex.mjs';\nimport { hsla } from './hsla.mjs';\nimport { rgba } from './rgba.mjs';\n\nconst color = {\n    test: (v) => rgba.test(v) || hex.test(v) || hsla.test(v),\n    parse: (v) => {\n        if (rgba.test(v)) {\n            return rgba.parse(v);\n        }\n        else if (hsla.test(v)) {\n            return hsla.parse(v);\n        }\n        else {\n            return hex.parse(v);\n        }\n    },\n    transform: (v) => {\n        return isString(v)\n            ? v\n            : v.hasOwnProperty('red')\n                ? rgba.transform(v)\n                : hsla.transform(v);\n    },\n};\n\nexport { color };\n","import { color } from '../color/index.mjs';\nimport { number } from '../numbers/index.mjs';\nimport { isString, floatRegex, colorRegex, sanitize } from '../utils.mjs';\n\nconst colorToken = '${c}';\nconst numberToken = '${n}';\nfunction test(v) {\n    var _a, _b, _c, _d;\n    return (isNaN(v) &&\n        isString(v) &&\n        ((_b = (_a = v.match(floatRegex)) === null || _a === void 0 ? void 0 : _a.length) !== null && _b !== void 0 ? _b : 0) + ((_d = (_c = v.match(colorRegex)) === null || _c === void 0 ? void 0 : _c.length) !== null && _d !== void 0 ? _d : 0) > 0);\n}\nfunction analyse(v) {\n    if (typeof v === 'number')\n        v = `${v}`;\n    const values = [];\n    let numColors = 0;\n    const colors = v.match(colorRegex);\n    if (colors) {\n        numColors = colors.length;\n        v = v.replace(colorRegex, colorToken);\n        values.push(...colors.map(color.parse));\n    }\n    const numbers = v.match(floatRegex);\n    if (numbers) {\n        v = v.replace(floatRegex, numberToken);\n        values.push(...numbers.map(number.parse));\n    }\n    return { values, numColors, tokenised: v };\n}\nfunction parse(v) {\n    return analyse(v).values;\n}\nfunction createTransformer(v) {\n    const { values, numColors, tokenised } = analyse(v);\n    const numValues = values.length;\n    return (v) => {\n        let output = tokenised;\n        for (let i = 0; i < numValues; i++) {\n            output = output.replace(i < numColors ? colorToken : numberToken, i < numColors ? color.transform(v[i]) : sanitize(v[i]));\n        }\n        return output;\n    };\n}\nconst convertNumbersToZero = (v) => typeof v === 'number' ? 0 : v;\nfunction getAnimatableNone(v) {\n    const parsed = parse(v);\n    const transformer = createTransformer(v);\n    return transformer(parsed.map(convertNumbersToZero));\n}\nconst complex = { test, parse, createTransformer, getAnimatableNone };\n\nexport { complex };\n","import { complex, color } from 'style-value-types';\nimport { mix } from './mix.mjs';\nimport { mixColor } from './mix-color.mjs';\nimport { isNum } from './inc.mjs';\nimport { pipe } from './pipe.mjs';\nimport { warning } from 'hey-listen';\n\nfunction getMixer(origin, target) {\n    if (isNum(origin)) {\n        return (v) => mix(origin, target, v);\n    }\n    else if (color.test(origin)) {\n        return mixColor(origin, target);\n    }\n    else {\n        return mixComplex(origin, target);\n    }\n}\nconst mixArray = (from, to) => {\n    const output = [...from];\n    const numValues = output.length;\n    const blendValue = from.map((fromThis, i) => getMixer(fromThis, to[i]));\n    return (v) => {\n        for (let i = 0; i < numValues; i++) {\n            output[i] = blendValue[i](v);\n        }\n        return output;\n    };\n};\nconst mixObject = (origin, target) => {\n    const output = Object.assign(Object.assign({}, origin), target);\n    const blendValue = {};\n    for (const key in output) {\n        if (origin[key] !== undefined && target[key] !== undefined) {\n            blendValue[key] = getMixer(origin[key], target[key]);\n        }\n    }\n    return (v) => {\n        for (const key in blendValue) {\n            output[key] = blendValue[key](v);\n        }\n        return output;\n    };\n};\nfunction analyse(value) {\n    const parsed = complex.parse(value);\n    const numValues = parsed.length;\n    let numNumbers = 0;\n    let numRGB = 0;\n    let numHSL = 0;\n    for (let i = 0; i < numValues; i++) {\n        if (numNumbers || typeof parsed[i] === \"number\") {\n            numNumbers++;\n        }\n        else {\n            if (parsed[i].hue !== undefined) {\n                numHSL++;\n            }\n            else {\n                numRGB++;\n            }\n        }\n    }\n    return { parsed, numNumbers, numRGB, numHSL };\n}\nconst mixComplex = (origin, target) => {\n    const template = complex.createTransformer(target);\n    const originStats = analyse(origin);\n    const targetStats = analyse(target);\n    const canInterpolate = originStats.numHSL === targetStats.numHSL &&\n        originStats.numRGB === targetStats.numRGB &&\n        originStats.numNumbers >= targetStats.numNumbers;\n    if (canInterpolate) {\n        return pipe(mixArray(originStats.parsed, targetStats.parsed), template);\n    }\n    else {\n        warning(true, `Complex values '${origin}' and '${target}' too different to mix. Ensure all colors are of the same type, and that each contains the same quantity of number and color values. Falling back to instant transition.`);\n        return (p) => `${p > 0 ? target : origin}`;\n    }\n};\n\nexport { mixArray, mixComplex, mixObject };\n","import { progress } from './progress.mjs';\nimport { mix } from './mix.mjs';\nimport { mixColor } from './mix-color.mjs';\nimport { mixComplex, mixArray, mixObject } from './mix-complex.mjs';\nimport { color } from 'style-value-types';\nimport { clamp } from './clamp.mjs';\nimport { pipe } from './pipe.mjs';\nimport { invariant } from 'hey-listen';\n\nconst mixNumber = (from, to) => (p) => mix(from, to, p);\nfunction detectMixerFactory(v) {\n    if (typeof v === 'number') {\n        return mixNumber;\n    }\n    else if (typeof v === 'string') {\n        if (color.test(v)) {\n            return mixColor;\n        }\n        else {\n            return mixComplex;\n        }\n    }\n    else if (Array.isArray(v)) {\n        return mixArray;\n    }\n    else if (typeof v === 'object') {\n        return mixObject;\n    }\n}\nfunction createMixers(output, ease, customMixer) {\n    const mixers = [];\n    const mixerFactory = customMixer || detectMixerFactory(output[0]);\n    const numMixers = output.length - 1;\n    for (let i = 0; i < numMixers; i++) {\n        let mixer = mixerFactory(output[i], output[i + 1]);\n        if (ease) {\n            const easingFunction = Array.isArray(ease) ? ease[i] : ease;\n            mixer = pipe(easingFunction, mixer);\n        }\n        mixers.push(mixer);\n    }\n    return mixers;\n}\nfunction fastInterpolate([from, to], [mixer]) {\n    return (v) => mixer(progress(from, to, v));\n}\nfunction slowInterpolate(input, mixers) {\n    const inputLength = input.length;\n    const lastInputIndex = inputLength - 1;\n    return (v) => {\n        let mixerIndex = 0;\n        let foundMixerIndex = false;\n        if (v <= input[0]) {\n            foundMixerIndex = true;\n        }\n        else if (v >= input[lastInputIndex]) {\n            mixerIndex = lastInputIndex - 1;\n            foundMixerIndex = true;\n        }\n        if (!foundMixerIndex) {\n            let i = 1;\n            for (; i < inputLength; i++) {\n                if (input[i] > v || i === lastInputIndex) {\n                    break;\n                }\n            }\n            mixerIndex = i - 1;\n        }\n        const progressInRange = progress(input[mixerIndex], input[mixerIndex + 1], v);\n        return mixers[mixerIndex](progressInRange);\n    };\n}\nfunction interpolate(input, output, { clamp: isClamp = true, ease, mixer } = {}) {\n    const inputLength = input.length;\n    invariant(inputLength === output.length, 'Both input and output ranges must be the same length');\n    invariant(!ease || !Array.isArray(ease) || ease.length === inputLength - 1, 'Array of easing functions must be of length `input.length - 1`, as it applies to the transitions **between** the defined values.');\n    if (input[0] > input[inputLength - 1]) {\n        input = [].concat(input);\n        output = [].concat(output);\n        input.reverse();\n        output.reverse();\n    }\n    const mixers = createMixers(output, ease, mixer);\n    const interpolator = inputLength === 2\n        ? fastInterpolate(input, mixers)\n        : slowInterpolate(input, mixers);\n    return isClamp\n        ? (v) => interpolator(clamp(input[0], input[inputLength - 1], v))\n        : interpolator;\n}\n\nexport { interpolate };\n","const reverseEasing = easing => p => 1 - easing(1 - p);\nconst mirrorEasing = easing => p => p <= 0.5 ? easing(2 * p) / 2 : (2 - easing(2 * (1 - p))) / 2;\nconst createExpoIn = (power) => p => Math.pow(p, power);\nconst createBackIn = (power) => p => p * p * ((power + 1) * p - power);\nconst createAnticipate = (power) => {\n    const backEasing = createBackIn(power);\n    return p => (p *= 2) < 1\n        ? 0.5 * backEasing(p)\n        : 0.5 * (2 - Math.pow(2, -10 * (p - 1)));\n};\n\nexport { createAnticipate, createBackIn, createExpoIn, mirrorEasing, reverseEasing };\n","import { createExpoIn, reverseEasing, mirrorEasing, createBackIn, createAnticipate } from './utils.mjs';\n\nconst DEFAULT_OVERSHOOT_STRENGTH = 1.525;\nconst BOUNCE_FIRST_THRESHOLD = 4.0 / 11.0;\nconst BOUNCE_SECOND_THRESHOLD = 8.0 / 11.0;\nconst BOUNCE_THIRD_THRESHOLD = 9.0 / 10.0;\nconst linear = p => p;\nconst easeIn = createExpoIn(2);\nconst easeOut = reverseEasing(easeIn);\nconst easeInOut = mirrorEasing(easeIn);\nconst circIn = p => 1 - Math.sin(Math.acos(p));\nconst circOut = reverseEasing(circIn);\nconst circInOut = mirrorEasing(circOut);\nconst backIn = createBackIn(DEFAULT_OVERSHOOT_STRENGTH);\nconst backOut = reverseEasing(backIn);\nconst backInOut = mirrorEasing(backIn);\nconst anticipate = createAnticipate(DEFAULT_OVERSHOOT_STRENGTH);\nconst ca = 4356.0 / 361.0;\nconst cb = 35442.0 / 1805.0;\nconst cc = 16061.0 / 1805.0;\nconst bounceOut = (p) => {\n    if (p === 1 || p === 0)\n        return p;\n    const p2 = p * p;\n    return p < BOUNCE_FIRST_THRESHOLD\n        ? 7.5625 * p2\n        : p < BOUNCE_SECOND_THRESHOLD\n            ? 9.075 * p2 - 9.9 * p + 3.4\n            : p < BOUNCE_THIRD_THRESHOLD\n                ? ca * p2 - cb * p + cc\n                : 10.8 * p * p - 20.52 * p + 10.72;\n};\nconst bounceIn = reverseEasing(bounceOut);\nconst bounceInOut = (p) => p < 0.5\n    ? 0.5 * (1.0 - bounceOut(1.0 - p * 2.0))\n    : 0.5 * bounceOut(p * 2.0 - 1.0) + 0.5;\n\nexport { anticipate, backIn, backInOut, backOut, bounceIn, bounceInOut, bounceOut, circIn, circInOut, circOut, easeIn, easeInOut, easeOut, linear };\n","import { interpolate } from '../../utils/interpolate.mjs';\nimport { easeInOut } from '../../easing/index.mjs';\n\nfunction defaultEasing(values, easing) {\n    return values.map(() => easing || easeInOut).splice(0, values.length - 1);\n}\nfunction defaultOffset(values) {\n    const numValues = values.length;\n    return values.map((_value, i) => i !== 0 ? i / (numValues - 1) : 0);\n}\nfunction convertOffsetToTimes(offset, duration) {\n    return offset.map((o) => o * duration);\n}\nfunction keyframes({ from = 0, to = 1, ease, offset, duration = 300, }) {\n    const state = { done: false, value: from };\n    const values = Array.isArray(to) ? to : [from, to];\n    const times = convertOffsetToTimes(offset && offset.length === values.length\n        ? offset\n        : defaultOffset(values), duration);\n    function createInterpolator() {\n        return interpolate(times, values, {\n            ease: Array.isArray(ease) ? ease : defaultEasing(values, ease),\n        });\n    }\n    let interpolator = createInterpolator();\n    return {\n        next: (t) => {\n            state.value = interpolator(t);\n            state.done = t >= duration;\n            return state;\n        },\n        flipTarget: () => {\n            values.reverse();\n            interpolator = createInterpolator();\n        },\n    };\n}\n\nexport { convertOffsetToTimes, defaultEasing, defaultOffset, keyframes };\n","import { spring } from '../generators/spring.mjs';\nimport { keyframes } from '../generators/keyframes.mjs';\nimport { decay } from '../generators/decay.mjs';\n\nconst types = { keyframes, spring, decay };\nfunction detectAnimationFromOptions(config) {\n    if (Array.isArray(config.to)) {\n        return keyframes;\n    }\n    else if (types[config.type]) {\n        return types[config.type];\n    }\n    const keys = new Set(Object.keys(config));\n    if (keys.has(\"ease\") ||\n        (keys.has(\"duration\") && !keys.has(\"dampingRatio\"))) {\n        return keyframes;\n    }\n    else if (keys.has(\"dampingRatio\") ||\n        keys.has(\"stiffness\") ||\n        keys.has(\"mass\") ||\n        keys.has(\"damping\") ||\n        keys.has(\"restSpeed\") ||\n        keys.has(\"restDelta\")) {\n        return spring;\n    }\n    return keyframes;\n}\n\nexport { detectAnimationFromOptions };\n","function decay({ velocity = 0, from = 0, power = 0.8, timeConstant = 350, restDelta = 0.5, modifyTarget, }) {\n    const state = { done: false, value: from };\n    let amplitude = power * velocity;\n    const ideal = from + amplitude;\n    const target = modifyTarget === undefined ? ideal : modifyTarget(ideal);\n    if (target !== ideal)\n        amplitude = target - from;\n    return {\n        next: (t) => {\n            const delta = -amplitude * Math.exp(-t / timeConstant);\n            state.done = !(delta > restDelta || delta < -restDelta);\n            state.value = state.done ? target : target + delta;\n            return state;\n        },\n        flipTarget: () => { },\n    };\n}\n\nexport { decay };\n","function loopElapsed(elapsed, duration, delay = 0) {\n    return elapsed - duration - delay;\n}\nfunction reverseElapsed(elapsed, duration, delay = 0, isForwardPlayback = true) {\n    return isForwardPlayback\n        ? loopElapsed(duration + -elapsed, duration, delay)\n        : duration - (elapsed - duration) + delay;\n}\nfunction hasRepeatDelayElapsed(elapsed, duration, delay, isForwardPlayback) {\n    return isForwardPlayback ? elapsed >= duration + delay : elapsed <= -delay;\n}\n\nexport { hasRepeatDelayElapsed, loopElapsed, reverseElapsed };\n","import { __rest } from 'tslib';\nimport { detectAnimationFromOptions } from './utils/detect-animation-from-options.mjs';\nimport sync, { cancelSync } from 'framesync';\nimport { interpolate } from '../utils/interpolate.mjs';\nimport { hasRepeatDelayElapsed, reverseElapsed, loopElapsed } from './utils/elapsed.mjs';\n\nconst framesync = (update) => {\n    const passTimestamp = ({ delta }) => update(delta);\n    return {\n        start: () => sync.update(passTimestamp, true),\n        stop: () => cancelSync.update(passTimestamp),\n    };\n};\nfunction animate(_a) {\n    var _b, _c;\n    var { from, autoplay = true, driver = framesync, elapsed = 0, repeat: repeatMax = 0, repeatType = \"loop\", repeatDelay = 0, onPlay, onStop, onComplete, onRepeat, onUpdate } = _a, options = __rest(_a, [\"from\", \"autoplay\", \"driver\", \"elapsed\", \"repeat\", \"repeatType\", \"repeatDelay\", \"onPlay\", \"onStop\", \"onComplete\", \"onRepeat\", \"onUpdate\"]);\n    let { to } = options;\n    let driverControls;\n    let repeatCount = 0;\n    let computedDuration = options.duration;\n    let latest;\n    let isComplete = false;\n    let isForwardPlayback = true;\n    let interpolateFromNumber;\n    const animator = detectAnimationFromOptions(options);\n    if ((_c = (_b = animator).needsInterpolation) === null || _c === void 0 ? void 0 : _c.call(_b, from, to)) {\n        interpolateFromNumber = interpolate([0, 100], [from, to], {\n            clamp: false,\n        });\n        from = 0;\n        to = 100;\n    }\n    const animation = animator(Object.assign(Object.assign({}, options), { from, to }));\n    function repeat() {\n        repeatCount++;\n        if (repeatType === \"reverse\") {\n            isForwardPlayback = repeatCount % 2 === 0;\n            elapsed = reverseElapsed(elapsed, computedDuration, repeatDelay, isForwardPlayback);\n        }\n        else {\n            elapsed = loopElapsed(elapsed, computedDuration, repeatDelay);\n            if (repeatType === \"mirror\")\n                animation.flipTarget();\n        }\n        isComplete = false;\n        onRepeat && onRepeat();\n    }\n    function complete() {\n        driverControls.stop();\n        onComplete && onComplete();\n    }\n    function update(delta) {\n        if (!isForwardPlayback)\n            delta = -delta;\n        elapsed += delta;\n        if (!isComplete) {\n            const state = animation.next(Math.max(0, elapsed));\n            latest = state.value;\n            if (interpolateFromNumber)\n                latest = interpolateFromNumber(latest);\n            isComplete = isForwardPlayback ? state.done : elapsed <= 0;\n        }\n        onUpdate === null || onUpdate === void 0 ? void 0 : onUpdate(latest);\n        if (isComplete) {\n            if (repeatCount === 0)\n                computedDuration !== null && computedDuration !== void 0 ? computedDuration : (computedDuration = elapsed);\n            if (repeatCount < repeatMax) {\n                hasRepeatDelayElapsed(elapsed, computedDuration, repeatDelay, isForwardPlayback) && repeat();\n            }\n            else {\n                complete();\n            }\n        }\n    }\n    function play() {\n        onPlay === null || onPlay === void 0 ? void 0 : onPlay();\n        driverControls = driver(update);\n        driverControls.start();\n    }\n    autoplay && play();\n    return {\n        stop: () => {\n            onStop === null || onStop === void 0 ? void 0 : onStop();\n            driverControls.stop();\n        },\n    };\n}\n\nexport { animate };\n","import { linear } from './index.mjs';\n\nconst a = (a1, a2) => 1.0 - 3.0 * a2 + 3.0 * a1;\nconst b = (a1, a2) => 3.0 * a2 - 6.0 * a1;\nconst c = (a1) => 3.0 * a1;\nconst calcBezier = (t, a1, a2) => ((a(a1, a2) * t + b(a1, a2)) * t + c(a1)) * t;\nconst getSlope = (t, a1, a2) => 3.0 * a(a1, a2) * t * t + 2.0 * b(a1, a2) * t + c(a1);\nconst subdivisionPrecision = 0.0000001;\nconst subdivisionMaxIterations = 10;\nfunction binarySubdivide(aX, aA, aB, mX1, mX2) {\n    let currentX;\n    let currentT;\n    let i = 0;\n    do {\n        currentT = aA + (aB - aA) / 2.0;\n        currentX = calcBezier(currentT, mX1, mX2) - aX;\n        if (currentX > 0.0) {\n            aB = currentT;\n        }\n        else {\n            aA = currentT;\n        }\n    } while (Math.abs(currentX) > subdivisionPrecision &&\n        ++i < subdivisionMaxIterations);\n    return currentT;\n}\nconst newtonIterations = 8;\nconst newtonMinSlope = 0.001;\nfunction newtonRaphsonIterate(aX, aGuessT, mX1, mX2) {\n    for (let i = 0; i < newtonIterations; ++i) {\n        const currentSlope = getSlope(aGuessT, mX1, mX2);\n        if (currentSlope === 0.0) {\n            return aGuessT;\n        }\n        const currentX = calcBezier(aGuessT, mX1, mX2) - aX;\n        aGuessT -= currentX / currentSlope;\n    }\n    return aGuessT;\n}\nconst kSplineTableSize = 11;\nconst kSampleStepSize = 1.0 / (kSplineTableSize - 1.0);\nfunction cubicBezier(mX1, mY1, mX2, mY2) {\n    if (mX1 === mY1 && mX2 === mY2)\n        return linear;\n    const sampleValues = new Float32Array(kSplineTableSize);\n    for (let i = 0; i < kSplineTableSize; ++i) {\n        sampleValues[i] = calcBezier(i * kSampleStepSize, mX1, mX2);\n    }\n    function getTForX(aX) {\n        let intervalStart = 0.0;\n        let currentSample = 1;\n        const lastSample = kSplineTableSize - 1;\n        for (; currentSample !== lastSample && sampleValues[currentSample] <= aX; ++currentSample) {\n            intervalStart += kSampleStepSize;\n        }\n        --currentSample;\n        const dist = (aX - sampleValues[currentSample]) /\n            (sampleValues[currentSample + 1] - sampleValues[currentSample]);\n        const guessForT = intervalStart + dist * kSampleStepSize;\n        const initialSlope = getSlope(guessForT, mX1, mX2);\n        if (initialSlope >= newtonMinSlope) {\n            return newtonRaphsonIterate(aX, guessForT, mX1, mX2);\n        }\n        else if (initialSlope === 0.0) {\n            return guessForT;\n        }\n        else {\n            return binarySubdivide(aX, intervalStart, intervalStart + kSampleStepSize, mX1, mX2);\n        }\n    }\n    return (t) => t === 0 || t === 1 ? t : calcBezier(getTForX(t), mY1, mY2);\n}\n\nexport { cubicBezier };\n","import { invariant } from 'hey-listen';\nimport { cubicBezier, linear, easeIn, easeInOut, easeOut, circIn, circInOut, circOut, backIn, backInOut, backOut, anticipate, bounceIn, bounceInOut, bounceOut } from 'popmotion';\n\nconst easingLookup = {\n    linear,\n    easeIn,\n    easeInOut,\n    easeOut,\n    circIn,\n    circInOut,\n    circOut,\n    backIn,\n    backInOut,\n    backOut,\n    anticipate,\n    bounceIn,\n    bounceInOut,\n    bounceOut,\n};\nconst easingDefinitionToFunction = (definition) => {\n    if (Array.isArray(definition)) {\n        // If cubic bezier definition, create bezier curve\n        invariant(definition.length === 4, `Cubic bezier arrays must contain four numerical values.`);\n        const [x1, y1, x2, y2] = definition;\n        return cubicBezier(x1, y1, x2, y2);\n    }\n    else if (typeof definition === \"string\") {\n        // Else lookup from table\n        invariant(easingLookup[definition] !== undefined, `Invalid easing type '${definition}'`);\n        return easingLookup[definition];\n    }\n    return definition;\n};\nconst isEasingArray = (ease) => {\n    return Array.isArray(ease) && typeof ease[0] !== \"number\";\n};\n\nexport { easingDefinitionToFunction, isEasingArray };\n","import { complex } from 'style-value-types';\n\n/**\n * Check if a value is animatable. Examples:\n *\n * ✅: 100, \"100px\", \"#fff\"\n * ❌: \"block\", \"url(2.jpg)\"\n * @param value\n *\n * @internal\n */\nconst isAnimatable = (key, value) => {\n    // If the list of keys tat might be non-animatable grows, replace with Set\n    if (key === \"zIndex\")\n        return false;\n    // If it's a number or a keyframes array, we can animate it. We might at some point\n    // need to do a deep isAnimatable check of keyframes, or let Popmotion handle this,\n    // but for now lets leave it like this for performance reasons\n    if (typeof value === \"number\" || Array.isArray(value))\n        return true;\n    if (typeof value === \"string\" && // It's animatable if we have a string\n        complex.test(value) && // And it contains numbers and/or colors\n        !value.startsWith(\"url(\") // Unless it starts with \"url(\"\n    ) {\n        return true;\n    }\n    return false;\n};\n\nexport { isAnimatable };\n","import { isKeyframesTarget } from './is-keyframes-target.mjs';\n\nconst underDampedSpring = () => ({\n    type: \"spring\",\n    stiffness: 500,\n    damping: 25,\n    restSpeed: 10,\n});\nconst criticallyDampedSpring = (to) => ({\n    type: \"spring\",\n    stiffness: 550,\n    damping: to === 0 ? 2 * Math.sqrt(550) : 30,\n    restSpeed: 10,\n});\nconst linearTween = () => ({\n    type: \"keyframes\",\n    ease: \"linear\",\n    duration: 0.3,\n});\nconst keyframes = (values) => ({\n    type: \"keyframes\",\n    duration: 0.8,\n    values,\n});\nconst defaultTransitions = {\n    x: underDampedSpring,\n    y: underDampedSpring,\n    z: underDampedSpring,\n    rotate: underDampedSpring,\n    rotateX: underDampedSpring,\n    rotateY: underDampedSpring,\n    rotateZ: underDampedSpring,\n    scaleX: criticallyDampedSpring,\n    scaleY: criticallyDampedSpring,\n    scale: criticallyDampedSpring,\n    opacity: linearTween,\n    backgroundColor: linearTween,\n    color: linearTween,\n    default: criticallyDampedSpring,\n};\nconst getDefaultTransition = (valueKey, to) => {\n    let transitionFactory;\n    if (isKeyframesTarget(to)) {\n        transitionFactory = keyframes;\n    }\n    else {\n        transitionFactory =\n            defaultTransitions[valueKey] || defaultTransitions.default;\n    }\n    return { to, ...transitionFactory(to) };\n};\n\nexport { criticallyDampedSpring, getDefaultTransition, linearTween, underDampedSpring };\n","import { complex } from './index.mjs';\nimport { floatRegex } from '../utils.mjs';\n\nconst maxDefaults = new Set(['brightness', 'contrast', 'saturate', 'opacity']);\nfunction applyDefaultFilter(v) {\n    let [name, value] = v.slice(0, -1).split('(');\n    if (name === 'drop-shadow')\n        return v;\n    const [number] = value.match(floatRegex) || [];\n    if (!number)\n        return v;\n    const unit = value.replace(number, '');\n    let defaultValue = maxDefaults.has(name) ? 1 : 0;\n    if (number !== value)\n        defaultValue *= 100;\n    return name + '(' + defaultValue + unit + ')';\n}\nconst functionRegex = /([a-z-]*)\\(.*?\\)/g;\nconst filter = Object.assign(Object.assign({}, complex), { getAnimatableNone: (v) => {\n        const functions = v.match(functionRegex);\n        return functions ? functions.map(applyDefaultFilter).join(' ') : v;\n    } });\n\nexport { filter };\n","import { color, filter } from 'style-value-types';\nimport { numberValueTypes } from './number.mjs';\n\n/**\n * A map of default value types for common values\n */\nconst defaultValueTypes = {\n    ...numberValueTypes,\n    // Color props\n    color,\n    backgroundColor: color,\n    outlineColor: color,\n    fill: color,\n    stroke: color,\n    // Border props\n    borderColor: color,\n    borderTopColor: color,\n    borderRightColor: color,\n    borderBottomColor: color,\n    borderLeftColor: color,\n    filter,\n    WebkitFilter: filter,\n};\n/**\n * Gets the default ValueType for the provided value key\n */\nconst getDefaultValueType = (key) => defaultValueTypes[key];\n\nexport { defaultValueTypes, getDefaultValueType };\n","import { filter, complex } from 'style-value-types';\nimport { getDefaultValueType } from './defaults.mjs';\n\nfunction getAnimatableNone(key, value) {\n    var _a;\n    let defaultValueType = getDefaultValueType(key);\n    if (defaultValueType !== filter)\n        defaultValueType = complex;\n    // If value is not recognised as animatable, ie \"none\", create an animatable version origin based on the target\n    return (_a = defaultValueType.getAnimatableNone) === null || _a === void 0 ? void 0 : _a.call(defaultValueType, value);\n}\n\nexport { getAnimatableNone };\n","const instantAnimationState = {\n    current: false,\n};\n\nexport { instantAnimationState };\n","import { inertia, animate } from 'popmotion';\nimport { secondsToMilliseconds } from '../../utils/time-conversion.mjs';\nimport { isEasingArray, easingDefinitionToFunction } from './easing.mjs';\nimport { isAnimatable } from './is-animatable.mjs';\nimport { getDefaultTransition } from './default-transitions.mjs';\nimport { warning } from 'hey-listen';\nimport { getAnimatableNone } from '../../render/dom/value-types/animatable-none.mjs';\nimport { instantAnimationState } from '../../utils/use-instant-transition-state.mjs';\nimport { resolveFinalValueInKeyframes } from '../../utils/resolve-value.mjs';\n\n/**\n * Decide whether a transition is defined on a given Transition.\n * This filters out orchestration options and returns true\n * if any options are left.\n */\nfunction isTransitionDefined({ when, delay, delayChildren, staggerChildren, staggerDirection, repeat, repeatType, repeatDelay, from, ...transition }) {\n    return !!Object.keys(transition).length;\n}\nlet legacyRepeatWarning = false;\n/**\n * Convert Framer Motion's Transition type into Popmotion-compatible options.\n */\nfunction convertTransitionToAnimationOptions({ ease, times, yoyo, flip, loop, ...transition }) {\n    const options = { ...transition };\n    if (times)\n        options[\"offset\"] = times;\n    /**\n     * Convert any existing durations from seconds to milliseconds\n     */\n    if (transition.duration)\n        options[\"duration\"] = secondsToMilliseconds(transition.duration);\n    if (transition.repeatDelay)\n        options.repeatDelay = secondsToMilliseconds(transition.repeatDelay);\n    /**\n     * Map easing names to Popmotion's easing functions\n     */\n    if (ease) {\n        options[\"ease\"] = isEasingArray(ease)\n            ? ease.map(easingDefinitionToFunction)\n            : easingDefinitionToFunction(ease);\n    }\n    /**\n     * Support legacy transition API\n     */\n    if (transition.type === \"tween\")\n        options.type = \"keyframes\";\n    /**\n     * TODO: These options are officially removed from the API.\n     */\n    if (yoyo || loop || flip) {\n        warning(!legacyRepeatWarning, \"yoyo, loop and flip have been removed from the API. Replace with repeat and repeatType options.\");\n        legacyRepeatWarning = true;\n        if (yoyo) {\n            options.repeatType = \"reverse\";\n        }\n        else if (loop) {\n            options.repeatType = \"loop\";\n        }\n        else if (flip) {\n            options.repeatType = \"mirror\";\n        }\n        options.repeat = loop || yoyo || flip || transition.repeat;\n    }\n    /**\n     * TODO: Popmotion 9 has the ability to automatically detect whether to use\n     * a keyframes or spring animation, but does so by detecting velocity and other spring options.\n     * It'd be good to introduce a similar thing here.\n     */\n    if (transition.type !== \"spring\")\n        options.type = \"keyframes\";\n    return options;\n}\n/**\n * Get the delay for a value by checking Transition with decreasing specificity.\n */\nfunction getDelayFromTransition(transition, key) {\n    var _a, _b;\n    const valueTransition = getValueTransition(transition, key) || {};\n    return (_b = (_a = valueTransition.delay) !== null && _a !== void 0 ? _a : transition.delay) !== null && _b !== void 0 ? _b : 0;\n}\nfunction hydrateKeyframes(options) {\n    if (Array.isArray(options.to) && options.to[0] === null) {\n        options.to = [...options.to];\n        options.to[0] = options.from;\n    }\n    return options;\n}\nfunction getPopmotionAnimationOptions(transition, options, key) {\n    if (Array.isArray(options.to) && transition.duration === undefined) {\n        transition.duration = 0.8;\n    }\n    hydrateKeyframes(options);\n    /**\n     * Get a default transition if none is determined to be defined.\n     */\n    if (!isTransitionDefined(transition)) {\n        transition = {\n            ...transition,\n            ...getDefaultTransition(key, options.to),\n        };\n    }\n    return {\n        ...options,\n        ...convertTransitionToAnimationOptions(transition),\n    };\n}\n/**\n *\n */\nfunction getAnimation(key, value, target, transition, onComplete) {\n    const valueTransition = getValueTransition(transition, key) || {};\n    let origin = valueTransition.from !== undefined ? valueTransition.from : value.get();\n    const isTargetAnimatable = isAnimatable(key, target);\n    if (origin === \"none\" && isTargetAnimatable && typeof target === \"string\") {\n        /**\n         * If we're trying to animate from \"none\", try and get an animatable version\n         * of the target. This could be improved to work both ways.\n         */\n        origin = getAnimatableNone(key, target);\n    }\n    else if (isZero(origin) && typeof target === \"string\") {\n        origin = getZeroUnit(target);\n    }\n    else if (!Array.isArray(target) &&\n        isZero(target) &&\n        typeof origin === \"string\") {\n        target = getZeroUnit(origin);\n    }\n    const isOriginAnimatable = isAnimatable(key, origin);\n    warning(isOriginAnimatable === isTargetAnimatable, `You are trying to animate ${key} from \"${origin}\" to \"${target}\". ${origin} is not an animatable value - to enable this animation set ${origin} to a value animatable to ${target} via the \\`style\\` property.`);\n    function start() {\n        const options = {\n            from: origin,\n            to: target,\n            velocity: value.getVelocity(),\n            onComplete,\n            onUpdate: (v) => value.set(v),\n        };\n        return valueTransition.type === \"inertia\" ||\n            valueTransition.type === \"decay\"\n            ? inertia({ ...options, ...valueTransition })\n            : animate({\n                ...getPopmotionAnimationOptions(valueTransition, options, key),\n                onUpdate: (v) => {\n                    options.onUpdate(v);\n                    valueTransition.onUpdate && valueTransition.onUpdate(v);\n                },\n                onComplete: () => {\n                    options.onComplete();\n                    valueTransition.onComplete && valueTransition.onComplete();\n                },\n            });\n    }\n    function set() {\n        const finalTarget = resolveFinalValueInKeyframes(target);\n        value.set(finalTarget);\n        onComplete();\n        valueTransition.onUpdate && valueTransition.onUpdate(finalTarget);\n        valueTransition.onComplete && valueTransition.onComplete();\n        return { stop: () => { } };\n    }\n    return !isOriginAnimatable ||\n        !isTargetAnimatable ||\n        valueTransition.type === false\n        ? set\n        : start;\n}\nfunction isZero(value) {\n    return (value === 0 ||\n        (typeof value === \"string\" &&\n            parseFloat(value) === 0 &&\n            value.indexOf(\" \") === -1));\n}\nfunction getZeroUnit(potentialUnitType) {\n    return typeof potentialUnitType === \"number\"\n        ? 0\n        : getAnimatableNone(\"\", potentialUnitType);\n}\nfunction getValueTransition(transition, key) {\n    return transition[key] || transition[\"default\"] || transition;\n}\n/**\n * Start animation on a MotionValue. This function is an interface between\n * Framer Motion and Popmotion\n */\nfunction startAnimation(key, value, target, transition = {}) {\n    if (instantAnimationState.current) {\n        transition = { type: false };\n    }\n    return value.start((onComplete) => {\n        let delayTimer;\n        let controls;\n        const animation = getAnimation(key, value, target, transition, onComplete);\n        const delay = getDelayFromTransition(transition, key);\n        const start = () => (controls = animation());\n        if (delay) {\n            delayTimer = window.setTimeout(start, secondsToMilliseconds(delay));\n        }\n        else {\n            start();\n        }\n        return () => {\n            clearTimeout(delayTimer);\n            controls && controls.stop();\n        };\n    });\n}\n\nexport { convertTransitionToAnimationOptions, getDelayFromTransition, getPopmotionAnimationOptions, getValueTransition, getZeroUnit, hydrateKeyframes, isTransitionDefined, isZero, startAnimation };\n","import { animate } from './index.mjs';\nimport { velocityPerSecond } from '../utils/velocity-per-second.mjs';\nimport { getFrameData } from 'framesync';\n\nfunction inertia({ from = 0, velocity = 0, min, max, power = 0.8, timeConstant = 750, bounceStiffness = 500, bounceDamping = 10, restDelta = 1, modifyTarget, driver, onUpdate, onComplete, onStop, }) {\n    let currentAnimation;\n    function isOutOfBounds(v) {\n        return (min !== undefined && v < min) || (max !== undefined && v > max);\n    }\n    function boundaryNearest(v) {\n        if (min === undefined)\n            return max;\n        if (max === undefined)\n            return min;\n        return Math.abs(min - v) < Math.abs(max - v) ? min : max;\n    }\n    function startAnimation(options) {\n        currentAnimation === null || currentAnimation === void 0 ? void 0 : currentAnimation.stop();\n        currentAnimation = animate(Object.assign(Object.assign({}, options), { driver, onUpdate: (v) => {\n                var _a;\n                onUpdate === null || onUpdate === void 0 ? void 0 : onUpdate(v);\n                (_a = options.onUpdate) === null || _a === void 0 ? void 0 : _a.call(options, v);\n            }, onComplete,\n            onStop }));\n    }\n    function startSpring(options) {\n        startAnimation(Object.assign({ type: \"spring\", stiffness: bounceStiffness, damping: bounceDamping, restDelta }, options));\n    }\n    if (isOutOfBounds(from)) {\n        startSpring({ from, velocity, to: boundaryNearest(from) });\n    }\n    else {\n        let target = power * velocity + from;\n        if (typeof modifyTarget !== \"undefined\")\n            target = modifyTarget(target);\n        const boundary = boundaryNearest(target);\n        const heading = boundary === min ? -1 : 1;\n        let prev;\n        let current;\n        const checkBoundary = (v) => {\n            prev = current;\n            current = v;\n            velocity = velocityPerSecond(v - prev, getFrameData().delta);\n            if ((heading === 1 && v > boundary) ||\n                (heading === -1 && v < boundary)) {\n                startSpring({ from: v, to: boundary, velocity });\n            }\n        };\n        startAnimation({\n            type: \"decay\",\n            from,\n            velocity,\n            timeConstant,\n            power,\n            restDelta,\n            modifyTarget,\n            onUpdate: isOutOfBounds(target) ? checkBoundary : undefined,\n        });\n    }\n    return {\n        stop: () => currentAnimation === null || currentAnimation === void 0 ? void 0 : currentAnimation.stop(),\n    };\n}\n\nexport { inertia };\n","import { invariant } from 'hey-listen';\nimport { PanSession } from '../PanSession.mjs';\nimport { getGlobalLock } from './utils/lock.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { addPointerEvent } from '../../events/use-pointer-event.mjs';\nimport { applyConstraints, calcRelativeConstraints, resolveDragElastic, rebaseAxisConstraints, calcViewportConstraints, calcOrigin, defaultElastic } from './utils/constraints.mjs';\nimport { AnimationType } from '../../render/utils/types.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { eachAxis } from '../../projection/utils/each-axis.mjs';\nimport { measurePageBox } from '../../projection/utils/measure.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { startAnimation } from '../../animation/utils/transitions.mjs';\nimport { convertBoxToBoundingBox, convertBoundingBoxToBox } from '../../projection/geometry/conversion.mjs';\nimport { addDomEvent } from '../../events/use-dom-event.mjs';\nimport { mix } from 'popmotion';\nimport { percent } from 'style-value-types';\nimport { calcLength } from '../../projection/geometry/delta-calc.mjs';\n\nconst elementDragControls = new WeakMap();\n/**\n *\n */\n// let latestPointerEvent: AnyPointerEvent\nclass VisualElementDragControls {\n    constructor(visualElement) {\n        // This is a reference to the global drag gesture lock, ensuring only one component\n        // can \"capture\" the drag of one or both axes.\n        // TODO: Look into moving this into pansession?\n        this.openGlobalLock = null;\n        this.isDragging = false;\n        this.currentDirection = null;\n        this.originPoint = { x: 0, y: 0 };\n        /**\n         * The permitted boundaries of travel, in pixels.\n         */\n        this.constraints = false;\n        this.hasMutatedConstraints = false;\n        /**\n         * The per-axis resolved elastic values.\n         */\n        this.elastic = createBox();\n        this.visualElement = visualElement;\n    }\n    start(originEvent, { snapToCursor = false } = {}) {\n        /**\n         * Don't start dragging if this component is exiting\n         */\n        if (this.visualElement.isPresent === false)\n            return;\n        const onSessionStart = (event) => {\n            // Stop any animations on both axis values immediately. This allows the user to throw and catch\n            // the component.\n            this.stopAnimation();\n            if (snapToCursor) {\n                this.snapToCursor(extractEventInfo(event, \"page\").point);\n            }\n        };\n        const onStart = (event, info) => {\n            var _a;\n            // Attempt to grab the global drag gesture lock - maybe make this part of PanSession\n            const { drag, dragPropagation, onDragStart } = this.getProps();\n            if (drag && !dragPropagation) {\n                if (this.openGlobalLock)\n                    this.openGlobalLock();\n                this.openGlobalLock = getGlobalLock(drag);\n                // If we don 't have the lock, don't start dragging\n                if (!this.openGlobalLock)\n                    return;\n            }\n            this.isDragging = true;\n            this.currentDirection = null;\n            this.resolveConstraints();\n            if (this.visualElement.projection) {\n                this.visualElement.projection.isAnimationBlocked = true;\n                this.visualElement.projection.target = undefined;\n            }\n            /**\n             * Record gesture origin\n             */\n            eachAxis((axis) => {\n                var _a, _b;\n                let current = this.getAxisMotionValue(axis).get() || 0;\n                /**\n                 * If the MotionValue is a percentage value convert to px\n                 */\n                if (percent.test(current)) {\n                    const measuredAxis = (_b = (_a = this.visualElement.projection) === null || _a === void 0 ? void 0 : _a.layout) === null || _b === void 0 ? void 0 : _b.actual[axis];\n                    if (measuredAxis) {\n                        const length = calcLength(measuredAxis);\n                        current = length * (parseFloat(current) / 100);\n                    }\n                }\n                this.originPoint[axis] = current;\n            });\n            // Fire onDragStart event\n            onDragStart === null || onDragStart === void 0 ? void 0 : onDragStart(event, info);\n            (_a = this.visualElement.animationState) === null || _a === void 0 ? void 0 : _a.setActive(AnimationType.Drag, true);\n        };\n        const onMove = (event, info) => {\n            // latestPointerEvent = event\n            const { dragPropagation, dragDirectionLock, onDirectionLock, onDrag, } = this.getProps();\n            // If we didn't successfully receive the gesture lock, early return.\n            if (!dragPropagation && !this.openGlobalLock)\n                return;\n            const { offset } = info;\n            // Attempt to detect drag direction if directionLock is true\n            if (dragDirectionLock && this.currentDirection === null) {\n                this.currentDirection = getCurrentDirection(offset);\n                // If we've successfully set a direction, notify listener\n                if (this.currentDirection !== null) {\n                    onDirectionLock === null || onDirectionLock === void 0 ? void 0 : onDirectionLock(this.currentDirection);\n                }\n                return;\n            }\n            // Update each point with the latest position\n            this.updateAxis(\"x\", info.point, offset);\n            this.updateAxis(\"y\", info.point, offset);\n            /**\n             * Ideally we would leave the renderer to fire naturally at the end of\n             * this frame but if the element is about to change layout as the result\n             * of a re-render we want to ensure the browser can read the latest\n             * bounding box to ensure the pointer and element don't fall out of sync.\n             */\n            this.visualElement.syncRender();\n            /**\n             * This must fire after the syncRender call as it might trigger a state\n             * change which itself might trigger a layout update.\n             */\n            onDrag === null || onDrag === void 0 ? void 0 : onDrag(event, info);\n        };\n        const onSessionEnd = (event, info) => this.stop(event, info);\n        this.panSession = new PanSession(originEvent, {\n            onSessionStart,\n            onStart,\n            onMove,\n            onSessionEnd,\n        }, { transformPagePoint: this.visualElement.getTransformPagePoint() });\n    }\n    stop(event, info) {\n        const isDragging = this.isDragging;\n        this.cancel();\n        if (!isDragging)\n            return;\n        const { velocity } = info;\n        this.startAnimation(velocity);\n        const { onDragEnd } = this.getProps();\n        onDragEnd === null || onDragEnd === void 0 ? void 0 : onDragEnd(event, info);\n    }\n    cancel() {\n        var _a, _b;\n        this.isDragging = false;\n        if (this.visualElement.projection) {\n            this.visualElement.projection.isAnimationBlocked = false;\n        }\n        (_a = this.panSession) === null || _a === void 0 ? void 0 : _a.end();\n        this.panSession = undefined;\n        const { dragPropagation } = this.getProps();\n        if (!dragPropagation && this.openGlobalLock) {\n            this.openGlobalLock();\n            this.openGlobalLock = null;\n        }\n        (_b = this.visualElement.animationState) === null || _b === void 0 ? void 0 : _b.setActive(AnimationType.Drag, false);\n    }\n    updateAxis(axis, _point, offset) {\n        const { drag } = this.getProps();\n        // If we're not dragging this axis, do an early return.\n        if (!offset || !shouldDrag(axis, drag, this.currentDirection))\n            return;\n        const axisValue = this.getAxisMotionValue(axis);\n        let next = this.originPoint[axis] + offset[axis];\n        // Apply constraints\n        if (this.constraints && this.constraints[axis]) {\n            next = applyConstraints(next, this.constraints[axis], this.elastic[axis]);\n        }\n        axisValue.set(next);\n    }\n    resolveConstraints() {\n        const { dragConstraints, dragElastic } = this.getProps();\n        const { layout } = this.visualElement.projection || {};\n        const prevConstraints = this.constraints;\n        if (dragConstraints && isRefObject(dragConstraints)) {\n            if (!this.constraints) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        }\n        else {\n            if (dragConstraints && layout) {\n                this.constraints = calcRelativeConstraints(layout.actual, dragConstraints);\n            }\n            else {\n                this.constraints = false;\n            }\n        }\n        this.elastic = resolveDragElastic(dragElastic);\n        /**\n         * If we're outputting to external MotionValues, we want to rebase the measured constraints\n         * from viewport-relative to component-relative.\n         */\n        if (prevConstraints !== this.constraints &&\n            layout &&\n            this.constraints &&\n            !this.hasMutatedConstraints) {\n            eachAxis((axis) => {\n                if (this.getAxisMotionValue(axis)) {\n                    this.constraints[axis] = rebaseAxisConstraints(layout.actual[axis], this.constraints[axis]);\n                }\n            });\n        }\n    }\n    resolveRefConstraints() {\n        const { dragConstraints: constraints, onMeasureDragConstraints } = this.getProps();\n        if (!constraints || !isRefObject(constraints))\n            return false;\n        const constraintsElement = constraints.current;\n        invariant(constraintsElement !== null, \"If `dragConstraints` is set as a React ref, that ref must be passed to another component's `ref` prop.\");\n        const { projection } = this.visualElement;\n        // TODO\n        if (!projection || !projection.layout)\n            return false;\n        const constraintsBox = measurePageBox(constraintsElement, projection.root, this.visualElement.getTransformPagePoint());\n        let measuredConstraints = calcViewportConstraints(projection.layout.actual, constraintsBox);\n        /**\n         * If there's an onMeasureDragConstraints listener we call it and\n         * if different constraints are returned, set constraints to that\n         */\n        if (onMeasureDragConstraints) {\n            const userConstraints = onMeasureDragConstraints(convertBoxToBoundingBox(measuredConstraints));\n            this.hasMutatedConstraints = !!userConstraints;\n            if (userConstraints) {\n                measuredConstraints = convertBoundingBoxToBox(userConstraints);\n            }\n        }\n        return measuredConstraints;\n    }\n    startAnimation(velocity) {\n        const { drag, dragMomentum, dragElastic, dragTransition, dragSnapToOrigin, onDragTransitionEnd, } = this.getProps();\n        const constraints = this.constraints || {};\n        const momentumAnimations = eachAxis((axis) => {\n            var _a;\n            if (!shouldDrag(axis, drag, this.currentDirection)) {\n                return;\n            }\n            let transition = (_a = constraints === null || constraints === void 0 ? void 0 : constraints[axis]) !== null && _a !== void 0 ? _a : {};\n            if (dragSnapToOrigin)\n                transition = { min: 0, max: 0 };\n            /**\n             * Overdamp the boundary spring if `dragElastic` is disabled. There's still a frame\n             * of spring animations so we should look into adding a disable spring option to `inertia`.\n             * We could do something here where we affect the `bounceStiffness` and `bounceDamping`\n             * using the value of `dragElastic`.\n             */\n            const bounceStiffness = dragElastic ? 200 : 1000000;\n            const bounceDamping = dragElastic ? 40 : 10000000;\n            const inertia = {\n                type: \"inertia\",\n                velocity: dragMomentum ? velocity[axis] : 0,\n                bounceStiffness,\n                bounceDamping,\n                timeConstant: 750,\n                restDelta: 1,\n                restSpeed: 10,\n                ...dragTransition,\n                ...transition,\n            };\n            // If we're not animating on an externally-provided `MotionValue` we can use the\n            // component's animation controls which will handle interactions with whileHover (etc),\n            // otherwise we just have to animate the `MotionValue` itself.\n            return this.startAxisValueAnimation(axis, inertia);\n        });\n        // Run all animations and then resolve the new drag constraints.\n        return Promise.all(momentumAnimations).then(onDragTransitionEnd);\n    }\n    startAxisValueAnimation(axis, transition) {\n        const axisValue = this.getAxisMotionValue(axis);\n        return startAnimation(axis, axisValue, 0, transition);\n    }\n    stopAnimation() {\n        eachAxis((axis) => this.getAxisMotionValue(axis).stop());\n    }\n    /**\n     * Drag works differently depending on which props are provided.\n     *\n     * - If _dragX and _dragY are provided, we output the gesture delta directly to those motion values.\n     * - Otherwise, we apply the delta to the x/y motion values.\n     */\n    getAxisMotionValue(axis) {\n        var _a, _b;\n        const dragKey = \"_drag\" + axis.toUpperCase();\n        const externalMotionValue = this.visualElement.getProps()[dragKey];\n        return externalMotionValue\n            ? externalMotionValue\n            : this.visualElement.getValue(axis, (_b = (_a = this.visualElement.getProps().initial) === null || _a === void 0 ? void 0 : _a[axis]) !== null && _b !== void 0 ? _b : 0);\n    }\n    snapToCursor(point) {\n        eachAxis((axis) => {\n            const { drag } = this.getProps();\n            // If we're not dragging this axis, do an early return.\n            if (!shouldDrag(axis, drag, this.currentDirection))\n                return;\n            const { projection } = this.visualElement;\n            const axisValue = this.getAxisMotionValue(axis);\n            if (projection && projection.layout) {\n                const { min, max } = projection.layout.actual[axis];\n                axisValue.set(point[axis] - mix(min, max, 0.5));\n            }\n        });\n    }\n    /**\n     * When the viewport resizes we want to check if the measured constraints\n     * have changed and, if so, reposition the element within those new constraints\n     * relative to where it was before the resize.\n     */\n    scalePositionWithinConstraints() {\n        var _a;\n        const { drag, dragConstraints } = this.getProps();\n        const { projection } = this.visualElement;\n        if (!isRefObject(dragConstraints) || !projection || !this.constraints)\n            return;\n        /**\n         * Stop current animations as there can be visual glitching if we try to do\n         * this mid-animation\n         */\n        this.stopAnimation();\n        /**\n         * Record the relative position of the dragged element relative to the\n         * constraints box and save as a progress value.\n         */\n        const boxProgress = { x: 0, y: 0 };\n        eachAxis((axis) => {\n            const axisValue = this.getAxisMotionValue(axis);\n            if (axisValue) {\n                const latest = axisValue.get();\n                boxProgress[axis] = calcOrigin({ min: latest, max: latest }, this.constraints[axis]);\n            }\n        });\n        /**\n         * Update the layout of this element and resolve the latest drag constraints\n         */\n        const { transformTemplate } = this.visualElement.getProps();\n        this.visualElement.getInstance().style.transform = transformTemplate\n            ? transformTemplate({}, \"\")\n            : \"none\";\n        (_a = projection.root) === null || _a === void 0 ? void 0 : _a.updateScroll();\n        projection.updateLayout();\n        this.resolveConstraints();\n        /**\n         * For each axis, calculate the current progress of the layout axis\n         * within the new constraints.\n         */\n        eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, null))\n                return;\n            /**\n             * Calculate a new transform based on the previous box progress\n             */\n            const axisValue = this.getAxisMotionValue(axis);\n            const { min, max } = this.constraints[axis];\n            axisValue.set(mix(min, max, boxProgress[axis]));\n        });\n    }\n    addListeners() {\n        var _a;\n        elementDragControls.set(this.visualElement, this);\n        const element = this.visualElement.getInstance();\n        /**\n         * Attach a pointerdown event listener on this DOM element to initiate drag tracking.\n         */\n        const stopPointerListener = addPointerEvent(element, \"pointerdown\", (event) => {\n            const { drag, dragListener = true } = this.getProps();\n            drag && dragListener && this.start(event);\n        });\n        const measureDragConstraints = () => {\n            const { dragConstraints } = this.getProps();\n            if (isRefObject(dragConstraints)) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        };\n        const { projection } = this.visualElement;\n        const stopMeasureLayoutListener = projection.addEventListener(\"measure\", measureDragConstraints);\n        if (projection && !projection.layout) {\n            (_a = projection.root) === null || _a === void 0 ? void 0 : _a.updateScroll();\n            projection.updateLayout();\n        }\n        measureDragConstraints();\n        /**\n         * Attach a window resize listener to scale the draggable target within its defined\n         * constraints as the window resizes.\n         */\n        const stopResizeListener = addDomEvent(window, \"resize\", () => this.scalePositionWithinConstraints());\n        /**\n         * If the element's layout changes, calculate the delta and apply that to\n         * the drag gesture's origin point.\n         */\n        const stopLayoutUpdateListener = projection.addEventListener(\"didUpdate\", (({ delta, hasLayoutChanged }) => {\n            if (this.isDragging && hasLayoutChanged) {\n                eachAxis((axis) => {\n                    const motionValue = this.getAxisMotionValue(axis);\n                    if (!motionValue)\n                        return;\n                    this.originPoint[axis] += delta[axis].translate;\n                    motionValue.set(motionValue.get() + delta[axis].translate);\n                });\n                this.visualElement.syncRender();\n            }\n        }));\n        return () => {\n            stopResizeListener();\n            stopPointerListener();\n            stopMeasureLayoutListener();\n            stopLayoutUpdateListener === null || stopLayoutUpdateListener === void 0 ? void 0 : stopLayoutUpdateListener();\n        };\n    }\n    getProps() {\n        const props = this.visualElement.getProps();\n        const { drag = false, dragDirectionLock = false, dragPropagation = false, dragConstraints = false, dragElastic = defaultElastic, dragMomentum = true, } = props;\n        return {\n            ...props,\n            drag,\n            dragDirectionLock,\n            dragPropagation,\n            dragConstraints,\n            dragElastic,\n            dragMomentum,\n        };\n    }\n}\nfunction shouldDrag(direction, drag, currentDirection) {\n    return ((drag === true || drag === direction) &&\n        (currentDirection === null || currentDirection === direction));\n}\n/**\n * Based on an x/y offset determine the current drag direction. If both axis' offsets are lower\n * than the provided threshold, return `null`.\n *\n * @param offset - The x/y offset from origin.\n * @param lockThreshold - (Optional) - the minimum absolute offset before we can determine a drag direction.\n */\nfunction getCurrentDirection(offset, lockThreshold = 10) {\n    let direction = null;\n    if (Math.abs(offset.y) > lockThreshold) {\n        direction = \"y\";\n    }\n    else if (Math.abs(offset.x) > lockThreshold) {\n        direction = \"x\";\n    }\n    return direction;\n}\n\nexport { VisualElementDragControls, elementDragControls };\n","const createAxisDelta = () => ({\n    translate: 0,\n    scale: 1,\n    origin: 0,\n    originPoint: 0,\n});\nconst createDelta = () => ({\n    x: createAxisDelta(),\n    y: createAxisDelta(),\n});\nconst createAxis = () => ({ min: 0, max: 0 });\nconst createBox = () => ({\n    x: createAxis(),\n    y: createAxis(),\n});\n\nexport { createAxis, createAxisDelta, createBox, createDelta };\n","import { useEffect } from 'react';\n\nfunction useUnmountEffect(callback) {\n    return useEffect(() => () => callback(), []);\n}\n\nexport { useUnmountEffect };\n","const makeRenderlessComponent = (hook) => (props) => {\n    hook(props);\n    return null;\n};\n\nexport { makeRenderlessComponent };\n","import { useDrag } from '../../gestures/drag/use-drag.mjs';\nimport { usePanGesture } from '../../gestures/use-pan-gesture.mjs';\nimport { makeRenderlessComponent } from '../utils/make-renderless-component.mjs';\n\nconst drag = {\n    pan: makeRenderlessComponent(usePanGesture),\n    drag: makeRenderlessComponent(useDrag),\n};\n\nexport { drag };\n","import { useRef, useContext, useEffect } from 'react';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { useUnmountEffect } from '../utils/use-unmount-effect.mjs';\nimport { usePointerEvent } from '../events/use-pointer-event.mjs';\nimport { PanSession } from './PanSession.mjs';\n\n/**\n *\n * @param handlers -\n * @param ref -\n *\n * @privateRemarks\n * Currently this sets new pan gesture functions every render. The memo route has been explored\n * in the past but ultimately we're still creating new functions every render. An optimisation\n * to explore is creating the pan gestures and loading them into a `ref`.\n *\n * @internal\n */\nfunction usePanGesture({ onPan, onPanStart, onPanEnd, onPanSessionStart, visualElement, }) {\n    const hasPanEvents = onPan || onPanStart || onPanEnd || onPanSessionStart;\n    const panSession = useRef(null);\n    const { transformPagePoint } = useContext(MotionConfigContext);\n    const handlers = {\n        onSessionStart: onPanSessionStart,\n        onStart: onPanStart,\n        onMove: onPan,\n        onEnd: (event, info) => {\n            panSession.current = null;\n            onPanEnd && onPanEnd(event, info);\n        },\n    };\n    useEffect(() => {\n        if (panSession.current !== null) {\n            panSession.current.updateHandlers(handlers);\n        }\n    });\n    function onPointerDown(event) {\n        panSession.current = new PanSession(event, handlers, {\n            transformPagePoint,\n        });\n    }\n    usePointerEvent(visualElement, \"pointerdown\", hasPanEvents && onPointerDown);\n    useUnmountEffect(() => panSession.current && panSession.current.end());\n}\n\nexport { usePanGesture };\n","import { useEffect } from 'react';\nimport { VisualElementDragControls } from './VisualElementDragControls.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\n\n/**\n * A hook that allows an element to be dragged.\n *\n * @internal\n */\nfunction useDrag(props) {\n    const { dragControls: groupDragControls, visualElement } = props;\n    const dragControls = useConstant(() => new VisualElementDragControls(visualElement));\n    // If we've been provided a DragControls for manual control over the drag gesture,\n    // subscribe this component to it on mount.\n    useEffect(() => groupDragControls && groupDragControls.subscribe(dragControls), [dragControls, groupDragControls]);\n    // Apply the event listeners to the element\n    useEffect(() => dragControls.addListeners(), [dragControls]);\n}\n\nexport { useDrag };\n","import { useContext, useId, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\n\n/**\n * When a component is the child of `AnimatePresence`, it can use `usePresence`\n * to access information about whether it's still present in the React tree.\n *\n * ```jsx\n * import { usePresence } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const [isPresent, safeToRemove] = usePresence()\n *\n *   useEffect(() => {\n *     !isPresent && setTimeout(safeToRemove, 1000)\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * If `isPresent` is `false`, it means that a component has been removed the tree, but\n * `AnimatePresence` won't really remove it until `safeToRemove` has been called.\n *\n * @public\n */\nfunction usePresence() {\n    const context = useContext(PresenceContext);\n    if (context === null)\n        return [true, null];\n    const { isPresent, onExitComplete, register } = context;\n    // It's safe to call the following hooks conditionally (after an early return) because the context will always\n    // either be null or non-null for the lifespan of the component.\n    // Replace with useId when released in React\n    const id = useId();\n    useEffect(() => register(id), []);\n    const safeToRemove = () => onExitComplete && onExitComplete(id);\n    return !isPresent && onExitComplete ? [false, safeToRemove] : [true];\n}\n/**\n * Similar to `usePresence`, except `useIsPresent` simply returns whether or not the component is present.\n * There is no `safeToRemove` function.\n *\n * ```jsx\n * import { useIsPresent } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const isPresent = useIsPresent()\n *\n *   useEffect(() => {\n *     !isPresent && console.log(\"I've been removed!\")\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * @public\n */\nfunction useIsPresent() {\n    return isPresent(useContext(PresenceContext));\n}\nfunction isPresent(context) {\n    return context === null ? true : context.isPresent;\n}\n\nexport { isPresent, useIsPresent, usePresence };\n","import { px } from 'style-value-types';\n\nfunction pixelsToPercent(pixels, axis) {\n    if (axis.max === axis.min)\n        return 0;\n    return (pixels / (axis.max - axis.min)) * 100;\n}\n/**\n * We always correct borderRadius as a percentage rather than pixels to reduce paints.\n * For example, if you are projecting a box that is 100px wide with a 10px borderRadius\n * into a box that is 200px wide with a 20px borderRadius, that is actually a 10%\n * borderRadius in both states. If we animate between the two in pixels that will trigger\n * a paint each time. If we animate between the two in percentage we'll avoid a paint.\n */\nconst correctBorderRadius = {\n    correct: (latest, node) => {\n        if (!node.target)\n            return latest;\n        /**\n         * If latest is a string, if it's a percentage we can return immediately as it's\n         * going to be stretched appropriately. Otherwise, if it's a pixel, convert it to a number.\n         */\n        if (typeof latest === \"string\") {\n            if (px.test(latest)) {\n                latest = parseFloat(latest);\n            }\n            else {\n                return latest;\n            }\n        }\n        /**\n         * If latest is a number, it's a pixel value. We use the current viewportBox to calculate that\n         * pixel value as a percentage of each axis\n         */\n        const x = pixelsToPercent(latest, node.target.x);\n        const y = pixelsToPercent(latest, node.target.y);\n        return `${x}% ${y}%`;\n    },\n};\n\nexport { correctBorderRadius, pixelsToPercent };\n","import { invariant } from 'hey-listen';\n\nfunction isCSSVariable(value) {\n    return typeof value === \"string\" && value.startsWith(\"var(--\");\n}\n/**\n * Parse Framer's special CSS variable format into a CSS token and a fallback.\n *\n * ```\n * `var(--foo, #fff)` => [`--foo`, '#fff']\n * ```\n *\n * @param current\n */\nconst cssVariableRegex = /var\\((--[a-zA-Z0-9-_]+),? ?([a-zA-Z0-9 ()%#.,-]+)?\\)/;\nfunction parseCSSVariable(current) {\n    const match = cssVariableRegex.exec(current);\n    if (!match)\n        return [,];\n    const [, token, fallback] = match;\n    return [token, fallback];\n}\nconst maxDepth = 4;\nfunction getVariableValue(current, element, depth = 1) {\n    invariant(depth <= maxDepth, `Max CSS variable fallback depth detected in property \"${current}\". This may indicate a circular fallback dependency.`);\n    const [token, fallback] = parseCSSVariable(current);\n    // No CSS variable detected\n    if (!token)\n        return;\n    // Attempt to read this CSS variable off the element\n    const resolved = window.getComputedStyle(element).getPropertyValue(token);\n    if (resolved) {\n        return resolved.trim();\n    }\n    else if (isCSSVariable(fallback)) {\n        // The fallback might itself be a CSS variable, in which case we attempt to resolve it too.\n        return getVariableValue(fallback, element, depth + 1);\n    }\n    else {\n        return fallback;\n    }\n}\n/**\n * Resolve CSS variables from\n *\n * @internal\n */\nfunction resolveCSSVariables(visualElement, { ...target }, transitionEnd) {\n    const element = visualElement.getInstance();\n    if (!(element instanceof Element))\n        return { target, transitionEnd };\n    // If `transitionEnd` isn't `undefined`, clone it. We could clone `target` and `transitionEnd`\n    // only if they change but I think this reads clearer and this isn't a performance-critical path.\n    if (transitionEnd) {\n        transitionEnd = { ...transitionEnd };\n    }\n    // Go through existing `MotionValue`s and ensure any existing CSS variables are resolved\n    visualElement.forEachValue((value) => {\n        const current = value.get();\n        if (!isCSSVariable(current))\n            return;\n        const resolved = getVariableValue(current, element);\n        if (resolved)\n            value.set(resolved);\n    });\n    // Cycle through every target property and resolve CSS variables. Currently\n    // we only read single-var properties like `var(--foo)`, not `calc(var(--foo) + 20px)`\n    for (const key in target) {\n        const current = target[key];\n        if (!isCSSVariable(current))\n            continue;\n        const resolved = getVariableValue(current, element);\n        if (!resolved)\n            continue;\n        // Clone target if it hasn't already been\n        target[key] = resolved;\n        // If the user hasn't already set this key on `transitionEnd`, set it to the unresolved\n        // CSS variable. This will ensure that after the animation the component will reflect\n        // changes in the value of the CSS variable.\n        if (transitionEnd && transitionEnd[key] === undefined) {\n            transitionEnd[key] = current;\n        }\n    }\n    return { target, transitionEnd };\n}\n\nexport { cssVariableRegex, parseCSSVariable, resolveCSSVariables };\n","import { mix } from 'popmotion';\nimport { complex } from 'style-value-types';\nimport { cssVariableRegex } from '../../render/dom/utils/css-variables-conversion.mjs';\n\nconst varToken = \"_$css\";\nconst correctBoxShadow = {\n    correct: (latest, { treeScale, projectionDelta }) => {\n        const original = latest;\n        /**\n         * We need to first strip and store CSS variables from the string.\n         */\n        const containsCSSVariables = latest.includes(\"var(\");\n        const cssVariables = [];\n        if (containsCSSVariables) {\n            latest = latest.replace(cssVariableRegex, (match) => {\n                cssVariables.push(match);\n                return varToken;\n            });\n        }\n        const shadow = complex.parse(latest);\n        // TODO: Doesn't support multiple shadows\n        if (shadow.length > 5)\n            return original;\n        const template = complex.createTransformer(latest);\n        const offset = typeof shadow[0] !== \"number\" ? 1 : 0;\n        // Calculate the overall context scale\n        const xScale = projectionDelta.x.scale * treeScale.x;\n        const yScale = projectionDelta.y.scale * treeScale.y;\n        shadow[0 + offset] /= xScale;\n        shadow[1 + offset] /= yScale;\n        /**\n         * Ideally we'd correct x and y scales individually, but because blur and\n         * spread apply to both we have to take a scale average and apply that instead.\n         * We could potentially improve the outcome of this by incorporating the ratio between\n         * the two scales.\n         */\n        const averageScale = mix(xScale, yScale, 0.5);\n        // Blur\n        if (typeof shadow[2 + offset] === \"number\")\n            shadow[2 + offset] /= averageScale;\n        // Spread\n        if (typeof shadow[3 + offset] === \"number\")\n            shadow[3 + offset] /= averageScale;\n        let output = template(shadow);\n        if (containsCSSVariables) {\n            let i = 0;\n            output = output.replace(varToken, () => {\n                const cssVariable = cssVariables[i];\n                i++;\n                return cssVariable;\n            });\n        }\n        return output;\n    },\n};\n\nexport { correctBoxShadow };\n","import sync from 'framesync';\nimport React__default, { useContext } from 'react';\nimport { usePresence } from '../../../components/AnimatePresence/use-presence.mjs';\nimport { LayoutGroupContext } from '../../../context/LayoutGroupContext.mjs';\nimport { SwitchLayoutGroupContext } from '../../../context/SwitchLayoutGroupContext.mjs';\nimport { globalProjectionState } from '../../../projection/node/state.mjs';\nimport { correctBorderRadius } from '../../../projection/styles/scale-border-radius.mjs';\nimport { correctBoxShadow } from '../../../projection/styles/scale-box-shadow.mjs';\nimport { addScaleCorrector } from '../../../projection/styles/scale-correction.mjs';\n\nclass MeasureLayoutWithContext extends React__default.Component {\n    /**\n     * This only mounts projection nodes for components that\n     * need measuring, we might want to do it for all components\n     * in order to incorporate transforms\n     */\n    componentDidMount() {\n        const { visualElement, layoutGroup, switchLayoutGroup, layoutId } = this.props;\n        const { projection } = visualElement;\n        addScaleCorrector(defaultScaleCorrectors);\n        if (projection) {\n            if (layoutGroup.group)\n                layoutGroup.group.add(projection);\n            if (switchLayoutGroup && switchLayoutGroup.register && layoutId) {\n                switchLayoutGroup.register(projection);\n            }\n            projection.root.didUpdate();\n            projection.addEventListener(\"animationComplete\", () => {\n                this.safeToRemove();\n            });\n            projection.setOptions({\n                ...projection.options,\n                onExitComplete: () => this.safeToRemove(),\n            });\n        }\n        globalProjectionState.hasEverUpdated = true;\n    }\n    getSnapshotBeforeUpdate(prevProps) {\n        const { layoutDependency, visualElement, drag, isPresent } = this.props;\n        const projection = visualElement.projection;\n        if (!projection)\n            return null;\n        /**\n         * TODO: We use this data in relegate to determine whether to\n         * promote a previous element. There's no guarantee its presence data\n         * will have updated by this point - if a bug like this arises it will\n         * have to be that we markForRelegation and then find a new lead some other way,\n         * perhaps in didUpdate\n         */\n        projection.isPresent = isPresent;\n        if (drag ||\n            prevProps.layoutDependency !== layoutDependency ||\n            layoutDependency === undefined) {\n            projection.willUpdate();\n        }\n        else {\n            this.safeToRemove();\n        }\n        if (prevProps.isPresent !== isPresent) {\n            if (isPresent) {\n                projection.promote();\n            }\n            else if (!projection.relegate()) {\n                /**\n                 * If there's another stack member taking over from this one,\n                 * it's in charge of the exit animation and therefore should\n                 * be in charge of the safe to remove. Otherwise we call it here.\n                 */\n                sync.postRender(() => {\n                    var _a;\n                    if (!((_a = projection.getStack()) === null || _a === void 0 ? void 0 : _a.members.length)) {\n                        this.safeToRemove();\n                    }\n                });\n            }\n        }\n        return null;\n    }\n    componentDidUpdate() {\n        const { projection } = this.props.visualElement;\n        if (projection) {\n            projection.root.didUpdate();\n            if (!projection.currentAnimation && projection.isLead()) {\n                this.safeToRemove();\n            }\n        }\n    }\n    componentWillUnmount() {\n        const { visualElement, layoutGroup, switchLayoutGroup: promoteContext, } = this.props;\n        const { projection } = visualElement;\n        if (projection) {\n            projection.scheduleCheckAfterUnmount();\n            if (layoutGroup === null || layoutGroup === void 0 ? void 0 : layoutGroup.group)\n                layoutGroup.group.remove(projection);\n            if (promoteContext === null || promoteContext === void 0 ? void 0 : promoteContext.deregister)\n                promoteContext.deregister(projection);\n        }\n    }\n    safeToRemove() {\n        const { safeToRemove } = this.props;\n        safeToRemove === null || safeToRemove === void 0 ? void 0 : safeToRemove();\n    }\n    render() {\n        return null;\n    }\n}\nfunction MeasureLayout(props) {\n    const [isPresent, safeToRemove] = usePresence();\n    const layoutGroup = useContext(LayoutGroupContext);\n    return (React__default.createElement(MeasureLayoutWithContext, { ...props, layoutGroup: layoutGroup, switchLayoutGroup: useContext(SwitchLayoutGroupContext), isPresent: isPresent, safeToRemove: safeToRemove }));\n}\nconst defaultScaleCorrectors = {\n    borderRadius: {\n        ...correctBorderRadius,\n        applyTo: [\n            \"borderTopLeftRadius\",\n            \"borderTopRightRadius\",\n            \"borderBottomLeftRadius\",\n            \"borderBottomRightRadius\",\n        ],\n    },\n    borderTopLeftRadius: correctBorderRadius,\n    borderTopRightRadius: correctBorderRadius,\n    borderBottomLeftRadius: correctBorderRadius,\n    borderBottomRightRadius: correctBorderRadius,\n    boxShadow: correctBoxShadow,\n};\n\nexport { MeasureLayout };\n","import { MeasureLayout } from './MeasureLayout.mjs';\n\nconst layoutFeatures = {\n    measureLayout: MeasureLayout,\n};\n\nexport { layoutFeatures };\n","function shallowCompare(next, prev) {\n    if (!Array.isArray(prev))\n        return false;\n    const prevLength = prev.length;\n    if (prevLength !== next.length)\n        return false;\n    for (let i = 0; i < prevLength; i++) {\n        if (prev[i] !== next[i])\n            return false;\n    }\n    return true;\n}\n\nexport { shallowCompare };\n","/**\n * Check if value is a numerical string, ie a string that is purely a number eg \"100\" or \"-100.1\"\n */\nconst isNumericalString = (v) => /^\\-?\\d*\\.?\\d+$/.test(v);\n\nexport { isNumericalString };\n","/**\n * Check if the value is a zero value string like \"0px\" or \"0%\"\n */\nconst isZeroValueString = (v) => /^0[^.\\s]+$/.test(v);\n\nexport { isZeroValueString };\n","/**\n * Tests a provided value against a ValueType\n */\nconst testValueType = (v) => (type) => type.test(v);\n\nexport { testValueType };\n","import { number, px, percent, degrees, vw, vh } from 'style-value-types';\nimport { testValueType } from './test.mjs';\nimport { auto } from './type-auto.mjs';\n\n/**\n * A list of value types commonly used for dimensions\n */\nconst dimensionValueTypes = [number, px, percent, degrees, vw, vh, auto];\n/**\n * Tests a dimensional value against the list of dimension ValueTypes\n */\nconst findDimensionValueType = (v) => dimensionValueTypes.find(testValueType(v));\n\nexport { dimensionValueTypes, findDimensionValueType };\n","/**\n * ValueType for \"auto\"\n */\nconst auto = {\n    test: (v) => v === \"auto\",\n    parse: (v) => v,\n};\n\nexport { auto };\n","import { color, complex } from 'style-value-types';\nimport { dimensionValueTypes } from './dimensions.mjs';\nimport { testValueType } from './test.mjs';\n\n/**\n * A list of all ValueTypes\n */\nconst valueTypes = [...dimensionValueTypes, color, complex];\n/**\n * Tests a value against the list of ValueTypes\n */\nconst findValueType = (v) => valueTypes.find(testValueType(v));\n\nexport { findValueType };\n","import { resolveVariantFromProps } from './resolve-variants.mjs';\n\n/**\n * Creates an object containing the latest state of every MotionValue on a VisualElement\n */\nfunction getCurrent(visualElement) {\n    const current = {};\n    visualElement.forEachValue((value, key) => (current[key] = value.get()));\n    return current;\n}\n/**\n * Creates an object containing the latest velocity of every MotionValue on a VisualElement\n */\nfunction getVelocity(visualElement) {\n    const velocity = {};\n    visualElement.forEachValue((value, key) => (velocity[key] = value.getVelocity()));\n    return velocity;\n}\nfunction resolveVariant(visualElement, definition, custom) {\n    const props = visualElement.getProps();\n    return resolveVariantFromProps(props, definition, custom !== undefined ? custom : props.custom, getCurrent(visualElement), getVelocity(visualElement));\n}\n\nexport { resolveVariant };\n","import { complex } from 'style-value-types';\nimport { isNumericalString } from '../../utils/is-numerical-string.mjs';\nimport { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\nimport { resolveFinalValueInKeyframes } from '../../utils/resolve-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { getAnimatableNone } from '../dom/value-types/animatable-none.mjs';\nimport { findValueType } from '../dom/value-types/find.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\n\n/**\n * Set VisualElement's MotionValue, creating a new MotionValue for it if\n * it doesn't exist.\n */\nfunction setMotionValue(visualElement, key, value) {\n    if (visualElement.hasValue(key)) {\n        visualElement.getValue(key).set(value);\n    }\n    else {\n        visualElement.addValue(key, motionValue(value));\n    }\n}\nfunction setTarget(visualElement, definition) {\n    const resolved = resolveVariant(visualElement, definition);\n    let { transitionEnd = {}, transition = {}, ...target } = resolved ? visualElement.makeTargetAnimatable(resolved, false) : {};\n    target = { ...target, ...transitionEnd };\n    for (const key in target) {\n        const value = resolveFinalValueInKeyframes(target[key]);\n        setMotionValue(visualElement, key, value);\n    }\n}\nfunction setVariants(visualElement, variantLabels) {\n    const reversedLabels = [...variantLabels].reverse();\n    reversedLabels.forEach((key) => {\n        var _a;\n        const variant = visualElement.getVariant(key);\n        variant && setTarget(visualElement, variant);\n        (_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.forEach((child) => {\n            setVariants(child, variantLabels);\n        });\n    });\n}\nfunction setValues(visualElement, definition) {\n    if (Array.isArray(definition)) {\n        return setVariants(visualElement, definition);\n    }\n    else if (typeof definition === \"string\") {\n        return setVariants(visualElement, [definition]);\n    }\n    else {\n        setTarget(visualElement, definition);\n    }\n}\nfunction checkTargetForNewValues(visualElement, target, origin) {\n    var _a, _b;\n    const newValueKeys = Object.keys(target).filter((key) => !visualElement.hasValue(key));\n    const numNewValues = newValueKeys.length;\n    if (!numNewValues)\n        return;\n    for (let i = 0; i < numNewValues; i++) {\n        const key = newValueKeys[i];\n        const targetValue = target[key];\n        let value = null;\n        /**\n         * If the target is a series of keyframes, we can use the first value\n         * in the array. If this first value is null, we'll still need to read from the DOM.\n         */\n        if (Array.isArray(targetValue)) {\n            value = targetValue[0];\n        }\n        /**\n         * If the target isn't keyframes, or the first keyframe was null, we need to\n         * first check if an origin value was explicitly defined in the transition as \"from\",\n         * if not read the value from the DOM. As an absolute fallback, take the defined target value.\n         */\n        if (value === null) {\n            value = (_b = (_a = origin[key]) !== null && _a !== void 0 ? _a : visualElement.readValue(key)) !== null && _b !== void 0 ? _b : target[key];\n        }\n        /**\n         * If value is still undefined or null, ignore it. Preferably this would throw,\n         * but this was causing issues in Framer.\n         */\n        if (value === undefined || value === null)\n            continue;\n        if (typeof value === \"string\" &&\n            (isNumericalString(value) || isZeroValueString(value))) {\n            // If this is a number read as a string, ie \"0\" or \"200\", convert it to a number\n            value = parseFloat(value);\n        }\n        else if (!findValueType(value) && complex.test(targetValue)) {\n            value = getAnimatableNone(key, targetValue);\n        }\n        visualElement.addValue(key, motionValue(value));\n        if (origin[key] === undefined) {\n            origin[key] = value;\n        }\n        visualElement.setBaseTarget(key, value);\n    }\n}\nfunction getOriginFromTransition(key, transition) {\n    if (!transition)\n        return;\n    const valueTransition = transition[key] || transition[\"default\"] || transition;\n    return valueTransition.from;\n}\nfunction getOrigin(target, transition, visualElement) {\n    var _a;\n    const origin = {};\n    for (const key in target) {\n        const transitionOrigin = getOriginFromTransition(key, transition);\n        origin[key] =\n            transitionOrigin !== undefined\n                ? transitionOrigin\n                : (_a = visualElement.getValue(key)) === null || _a === void 0 ? void 0 : _a.get();\n    }\n    return origin;\n}\n\nexport { checkTargetForNewValues, getOrigin, getOriginFromTransition, setTarget, setValues };\n","import { isMotionValue } from '../utils/is-motion-value.mjs';\n\nfunction isWillChangeMotionValue(value) {\n    return Boolean(isMotionValue(value) && value.add);\n}\n\nexport { isWillChangeMotionValue };\n","import { startAnimation } from '../../animation/utils/transitions.mjs';\nimport { setTarget } from './setters.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\nimport { transformProps } from '../html/utils/transform.mjs';\nimport { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\n\nfunction animateVisualElement(visualElement, definition, options = {}) {\n    visualElement.notifyAnimationStart(definition);\n    let animation;\n    if (Array.isArray(definition)) {\n        const animations = definition.map((variant) => animateVariant(visualElement, variant, options));\n        animation = Promise.all(animations);\n    }\n    else if (typeof definition === \"string\") {\n        animation = animateVariant(visualElement, definition, options);\n    }\n    else {\n        const resolvedDefinition = typeof definition === \"function\"\n            ? resolveVariant(visualElement, definition, options.custom)\n            : definition;\n        animation = animateTarget(visualElement, resolvedDefinition, options);\n    }\n    return animation.then(() => visualElement.notifyAnimationComplete(definition));\n}\nfunction animateVariant(visualElement, variant, options = {}) {\n    var _a;\n    const resolved = resolveVariant(visualElement, variant, options.custom);\n    let { transition = visualElement.getDefaultTransition() || {} } = resolved || {};\n    if (options.transitionOverride) {\n        transition = options.transitionOverride;\n    }\n    /**\n     * If we have a variant, create a callback that runs it as an animation.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getAnimation = resolved\n        ? () => animateTarget(visualElement, resolved, options)\n        : () => Promise.resolve();\n    /**\n     * If we have children, create a callback that runs all their animations.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getChildAnimations = ((_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.size)\n        ? (forwardDelay = 0) => {\n            const { delayChildren = 0, staggerChildren, staggerDirection, } = transition;\n            return animateChildren(visualElement, variant, delayChildren + forwardDelay, staggerChildren, staggerDirection, options);\n        }\n        : () => Promise.resolve();\n    /**\n     * If the transition explicitly defines a \"when\" option, we need to resolve either\n     * this animation or all children animations before playing the other.\n     */\n    const { when } = transition;\n    if (when) {\n        const [first, last] = when === \"beforeChildren\"\n            ? [getAnimation, getChildAnimations]\n            : [getChildAnimations, getAnimation];\n        return first().then(last);\n    }\n    else {\n        return Promise.all([getAnimation(), getChildAnimations(options.delay)]);\n    }\n}\n/**\n * @internal\n */\nfunction animateTarget(visualElement, definition, { delay = 0, transitionOverride, type } = {}) {\n    var _a;\n    let { transition = visualElement.getDefaultTransition(), transitionEnd, ...target } = visualElement.makeTargetAnimatable(definition);\n    const willChange = visualElement.getValue(\"willChange\");\n    if (transitionOverride)\n        transition = transitionOverride;\n    const animations = [];\n    const animationTypeState = type && ((_a = visualElement.animationState) === null || _a === void 0 ? void 0 : _a.getState()[type]);\n    for (const key in target) {\n        const value = visualElement.getValue(key);\n        const valueTarget = target[key];\n        if (!value ||\n            valueTarget === undefined ||\n            (animationTypeState &&\n                shouldBlockAnimation(animationTypeState, key))) {\n            continue;\n        }\n        let valueTransition = { delay, ...transition };\n        /**\n         * Make animation instant if this is a transform prop and we should reduce motion.\n         */\n        if (visualElement.shouldReduceMotion && transformProps.has(key)) {\n            valueTransition = {\n                ...valueTransition,\n                type: false,\n                delay: 0,\n            };\n        }\n        let animation = startAnimation(key, value, valueTarget, valueTransition);\n        if (isWillChangeMotionValue(willChange)) {\n            willChange.add(key);\n            animation = animation.then(() => willChange.remove(key));\n        }\n        animations.push(animation);\n    }\n    return Promise.all(animations).then(() => {\n        transitionEnd && setTarget(visualElement, transitionEnd);\n    });\n}\nfunction animateChildren(visualElement, variant, delayChildren = 0, staggerChildren = 0, staggerDirection = 1, options) {\n    const animations = [];\n    const maxStaggerDuration = (visualElement.variantChildren.size - 1) * staggerChildren;\n    const generateStaggerDuration = staggerDirection === 1\n        ? (i = 0) => i * staggerChildren\n        : (i = 0) => maxStaggerDuration - i * staggerChildren;\n    Array.from(visualElement.variantChildren)\n        .sort(sortByTreeOrder)\n        .forEach((child, i) => {\n        animations.push(animateVariant(child, variant, {\n            ...options,\n            delay: delayChildren + generateStaggerDuration(i),\n        }).then(() => child.notifyAnimationComplete(variant)));\n    });\n    return Promise.all(animations);\n}\nfunction stopAnimation(visualElement) {\n    visualElement.forEachValue((value) => value.stop());\n}\nfunction sortByTreeOrder(a, b) {\n    return a.sortNodePosition(b);\n}\n/**\n * Decide whether we should block this animation. Previously, we achieved this\n * just by checking whether the key was listed in protectedKeys, but this\n * posed problems if an animation was triggered by afterChildren and protectedKeys\n * had been set to true in the meantime.\n */\nfunction shouldBlockAnimation({ protectedKeys, needsAnimating }, key) {\n    const shouldBlock = protectedKeys.hasOwnProperty(key) && needsAnimating[key] !== true;\n    needsAnimating[key] = false;\n    return shouldBlock;\n}\n\nexport { animateVisualElement, sortByTreeOrder, stopAnimation };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isKeyframesTarget } from '../../animation/utils/is-keyframes-target.mjs';\nimport { shallowCompare } from '../../utils/shallow-compare.mjs';\nimport { animateVisualElement } from './animation.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { AnimationType } from './types.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\n\nconst variantPriorityOrder = [\n    AnimationType.Animate,\n    AnimationType.InView,\n    AnimationType.Focus,\n    AnimationType.Hover,\n    AnimationType.Tap,\n    AnimationType.Drag,\n    AnimationType.Exit,\n];\nconst reversePriorityOrder = [...variantPriorityOrder].reverse();\nconst numAnimationTypes = variantPriorityOrder.length;\nfunction animateList(visualElement) {\n    return (animations) => Promise.all(animations.map(({ animation, options }) => animateVisualElement(visualElement, animation, options)));\n}\nfunction createAnimationState(visualElement) {\n    let animate = animateList(visualElement);\n    const state = createState();\n    let isInitialRender = true;\n    /**\n     * This function will be used to reduce the animation definitions for\n     * each active animation type into an object of resolved values for it.\n     */\n    const buildResolvedTypeValues = (acc, definition) => {\n        const resolved = resolveVariant(visualElement, definition);\n        if (resolved) {\n            const { transition, transitionEnd, ...target } = resolved;\n            acc = { ...acc, ...target, ...transitionEnd };\n        }\n        return acc;\n    };\n    /**\n     * This just allows us to inject mocked animation functions\n     * @internal\n     */\n    function setAnimateFunction(makeAnimator) {\n        animate = makeAnimator(visualElement);\n    }\n    /**\n     * When we receive new props, we need to:\n     * 1. Create a list of protected keys for each type. This is a directory of\n     *    value keys that are currently being \"handled\" by types of a higher priority\n     *    so that whenever an animation is played of a given type, these values are\n     *    protected from being animated.\n     * 2. Determine if an animation type needs animating.\n     * 3. Determine if any values have been removed from a type and figure out\n     *    what to animate those to.\n     */\n    function animateChanges(options, changedActiveType) {\n        var _a;\n        const props = visualElement.getProps();\n        const context = visualElement.getVariantContext(true) || {};\n        /**\n         * A list of animations that we'll build into as we iterate through the animation\n         * types. This will get executed at the end of the function.\n         */\n        const animations = [];\n        /**\n         * Keep track of which values have been removed. Then, as we hit lower priority\n         * animation types, we can check if they contain removed values and animate to that.\n         */\n        const removedKeys = new Set();\n        /**\n         * A dictionary of all encountered keys. This is an object to let us build into and\n         * copy it without iteration. Each time we hit an animation type we set its protected\n         * keys - the keys its not allowed to animate - to the latest version of this object.\n         */\n        let encounteredKeys = {};\n        /**\n         * If a variant has been removed at a given index, and this component is controlling\n         * variant animations, we want to ensure lower-priority variants are forced to animate.\n         */\n        let removedVariantIndex = Infinity;\n        /**\n         * Iterate through all animation types in reverse priority order. For each, we want to\n         * detect which values it's handling and whether or not they've changed (and therefore\n         * need to be animated). If any values have been removed, we want to detect those in\n         * lower priority props and flag for animation.\n         */\n        for (let i = 0; i < numAnimationTypes; i++) {\n            const type = reversePriorityOrder[i];\n            const typeState = state[type];\n            const prop = (_a = props[type]) !== null && _a !== void 0 ? _a : context[type];\n            const propIsVariant = isVariantLabel(prop);\n            /**\n             * If this type has *just* changed isActive status, set activeDelta\n             * to that status. Otherwise set to null.\n             */\n            const activeDelta = type === changedActiveType ? typeState.isActive : null;\n            if (activeDelta === false)\n                removedVariantIndex = i;\n            /**\n             * If this prop is an inherited variant, rather than been set directly on the\n             * component itself, we want to make sure we allow the parent to trigger animations.\n             *\n             * TODO: Can probably change this to a !isControllingVariants check\n             */\n            let isInherited = prop === context[type] && prop !== props[type] && propIsVariant;\n            /**\n             *\n             */\n            if (isInherited &&\n                isInitialRender &&\n                visualElement.manuallyAnimateOnMount) {\n                isInherited = false;\n            }\n            /**\n             * Set all encountered keys so far as the protected keys for this type. This will\n             * be any key that has been animated or otherwise handled by active, higher-priortiy types.\n             */\n            typeState.protectedKeys = { ...encounteredKeys };\n            // Check if we can skip analysing this prop early\n            if (\n            // If it isn't active and hasn't *just* been set as inactive\n            (!typeState.isActive && activeDelta === null) ||\n                // If we didn't and don't have any defined prop for this animation type\n                (!prop && !typeState.prevProp) ||\n                // Or if the prop doesn't define an animation\n                isAnimationControls(prop) ||\n                typeof prop === \"boolean\") {\n                continue;\n            }\n            /**\n             * As we go look through the values defined on this type, if we detect\n             * a changed value or a value that was removed in a higher priority, we set\n             * this to true and add this prop to the animation list.\n             */\n            const variantDidChange = checkVariantsDidChange(typeState.prevProp, prop);\n            let shouldAnimateType = variantDidChange ||\n                // If we're making this variant active, we want to always make it active\n                (type === changedActiveType &&\n                    typeState.isActive &&\n                    !isInherited &&\n                    propIsVariant) ||\n                // If we removed a higher-priority variant (i is in reverse order)\n                (i > removedVariantIndex && propIsVariant);\n            /**\n             * As animations can be set as variant lists, variants or target objects, we\n             * coerce everything to an array if it isn't one already\n             */\n            const definitionList = Array.isArray(prop) ? prop : [prop];\n            /**\n             * Build an object of all the resolved values. We'll use this in the subsequent\n             * animateChanges calls to determine whether a value has changed.\n             */\n            let resolvedValues = definitionList.reduce(buildResolvedTypeValues, {});\n            if (activeDelta === false)\n                resolvedValues = {};\n            /**\n             * Now we need to loop through all the keys in the prev prop and this prop,\n             * and decide:\n             * 1. If the value has changed, and needs animating\n             * 2. If it has been removed, and needs adding to the removedKeys set\n             * 3. If it has been removed in a higher priority type and needs animating\n             * 4. If it hasn't been removed in a higher priority but hasn't changed, and\n             *    needs adding to the type's protectedKeys list.\n             */\n            const { prevResolvedValues = {} } = typeState;\n            const allKeys = {\n                ...prevResolvedValues,\n                ...resolvedValues,\n            };\n            const markToAnimate = (key) => {\n                shouldAnimateType = true;\n                removedKeys.delete(key);\n                typeState.needsAnimating[key] = true;\n            };\n            for (const key in allKeys) {\n                const next = resolvedValues[key];\n                const prev = prevResolvedValues[key];\n                // If we've already handled this we can just skip ahead\n                if (encounteredKeys.hasOwnProperty(key))\n                    continue;\n                /**\n                 * If the value has changed, we probably want to animate it.\n                 */\n                if (next !== prev) {\n                    /**\n                     * If both values are keyframes, we need to shallow compare them to\n                     * detect whether any value has changed. If it has, we animate it.\n                     */\n                    if (isKeyframesTarget(next) && isKeyframesTarget(prev)) {\n                        if (!shallowCompare(next, prev) || variantDidChange) {\n                            markToAnimate(key);\n                        }\n                        else {\n                            /**\n                             * If it hasn't changed, we want to ensure it doesn't animate by\n                             * adding it to the list of protected keys.\n                             */\n                            typeState.protectedKeys[key] = true;\n                        }\n                    }\n                    else if (next !== undefined) {\n                        // If next is defined and doesn't equal prev, it needs animating\n                        markToAnimate(key);\n                    }\n                    else {\n                        // If it's undefined, it's been removed.\n                        removedKeys.add(key);\n                    }\n                }\n                else if (next !== undefined && removedKeys.has(key)) {\n                    /**\n                     * If next hasn't changed and it isn't undefined, we want to check if it's\n                     * been removed by a higher priority\n                     */\n                    markToAnimate(key);\n                }\n                else {\n                    /**\n                     * If it hasn't changed, we add it to the list of protected values\n                     * to ensure it doesn't get animated.\n                     */\n                    typeState.protectedKeys[key] = true;\n                }\n            }\n            /**\n             * Update the typeState so next time animateChanges is called we can compare the\n             * latest prop and resolvedValues to these.\n             */\n            typeState.prevProp = prop;\n            typeState.prevResolvedValues = resolvedValues;\n            /**\n             *\n             */\n            if (typeState.isActive) {\n                encounteredKeys = { ...encounteredKeys, ...resolvedValues };\n            }\n            if (isInitialRender && visualElement.blockInitialAnimation) {\n                shouldAnimateType = false;\n            }\n            /**\n             * If this is an inherited prop we want to hard-block animations\n             * TODO: Test as this should probably still handle animations triggered\n             * by removed values?\n             */\n            if (shouldAnimateType && !isInherited) {\n                animations.push(...definitionList.map((animation) => ({\n                    animation: animation,\n                    options: { type, ...options },\n                })));\n            }\n        }\n        /**\n         * If there are some removed value that haven't been dealt with,\n         * we need to create a new animation that falls back either to the value\n         * defined in the style prop, or the last read value.\n         */\n        if (removedKeys.size) {\n            const fallbackAnimation = {};\n            removedKeys.forEach((key) => {\n                const fallbackTarget = visualElement.getBaseTarget(key);\n                if (fallbackTarget !== undefined) {\n                    fallbackAnimation[key] = fallbackTarget;\n                }\n            });\n            animations.push({ animation: fallbackAnimation });\n        }\n        let shouldAnimate = Boolean(animations.length);\n        if (isInitialRender &&\n            props.initial === false &&\n            !visualElement.manuallyAnimateOnMount) {\n            shouldAnimate = false;\n        }\n        isInitialRender = false;\n        return shouldAnimate ? animate(animations) : Promise.resolve();\n    }\n    /**\n     * Change whether a certain animation type is active.\n     */\n    function setActive(type, isActive, options) {\n        var _a;\n        // If the active state hasn't changed, we can safely do nothing here\n        if (state[type].isActive === isActive)\n            return Promise.resolve();\n        // Propagate active change to children\n        (_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.forEach((child) => { var _a; return (_a = child.animationState) === null || _a === void 0 ? void 0 : _a.setActive(type, isActive); });\n        state[type].isActive = isActive;\n        const animations = animateChanges(options, type);\n        for (const key in state) {\n            state[key].protectedKeys = {};\n        }\n        return animations;\n    }\n    return {\n        animateChanges,\n        setActive,\n        setAnimateFunction,\n        getState: () => state,\n    };\n}\nfunction checkVariantsDidChange(prev, next) {\n    if (typeof next === \"string\") {\n        return next !== prev;\n    }\n    else if (Array.isArray(next)) {\n        return !shallowCompare(next, prev);\n    }\n    return false;\n}\nfunction createTypeState(isActive = false) {\n    return {\n        isActive,\n        protectedKeys: {},\n        needsAnimating: {},\n        prevResolvedValues: {},\n    };\n}\nfunction createState() {\n    return {\n        [AnimationType.Animate]: createTypeState(true),\n        [AnimationType.InView]: createTypeState(),\n        [AnimationType.Hover]: createTypeState(),\n        [AnimationType.Tap]: createTypeState(),\n        [AnimationType.Drag]: createTypeState(),\n        [AnimationType.Focus]: createTypeState(),\n        [AnimationType.Exit]: createTypeState(),\n    };\n}\n\nexport { checkVariantsDidChange, createAnimationState, variantPriorityOrder };\n","import { useEffect, useContext } from 'react';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { usePresence } from '../../components/AnimatePresence/use-presence.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { createAnimationState } from '../../render/utils/animation-state.mjs';\nimport { AnimationType } from '../../render/utils/types.mjs';\nimport { makeRenderlessComponent } from '../utils/make-renderless-component.mjs';\n\nconst animations = {\n    animation: makeRenderlessComponent(({ visualElement, animate }) => {\n        /**\n         * We dynamically generate the AnimationState manager as it contains a reference\n         * to the underlying animation library. We only want to load that if we load this,\n         * so people can optionally code split it out using the `m` component.\n         */\n        visualElement.animationState || (visualElement.animationState = createAnimationState(visualElement));\n        /**\n         * Subscribe any provided AnimationControls to the component's VisualElement\n         */\n        if (isAnimationControls(animate)) {\n            useEffect(() => animate.subscribe(visualElement), [animate]);\n        }\n    }),\n    exit: makeRenderlessComponent((props) => {\n        const { custom, visualElement } = props;\n        const [isPresent, safeToRemove] = usePresence();\n        const presenceContext = useContext(PresenceContext);\n        useEffect(() => {\n            visualElement.isPresent = isPresent;\n            const animation = visualElement.animationState &&\n                visualElement.animationState.setActive(AnimationType.Exit, !isPresent, {\n                    custom: (presenceContext && presenceContext.custom) ||\n                        custom,\n                });\n            if (animation && !isPresent) {\n                animation.then(safeToRemove);\n            }\n        }, [isPresent]);\n    }),\n};\n\nexport { animations };\n","import { isMouseEvent } from './utils/event-type.mjs';\nimport { AnimationType } from '../render/utils/types.mjs';\nimport { usePointerEvent } from '../events/use-pointer-event.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\n\nfunction createHoverEvent(visualElement, isActive, callback) {\n    return (event, info) => {\n        if (!isMouseEvent(event) || isDragActive())\n            return;\n        /**\n         * Ensure we trigger animations before firing event callback\n         */\n        if (visualElement.animationState) {\n            visualElement.animationState.setActive(AnimationType.Hover, isActive);\n        }\n        callback && callback(event, info);\n    };\n}\nfunction useHoverGesture({ onHoverStart, onHoverEnd, whileHover, visualElement, }) {\n    usePointerEvent(visualElement, \"pointerenter\", onHoverStart || whileHover\n        ? createHoverEvent(visualElement, true, onHoverStart)\n        : undefined, { passive: !onHoverStart });\n    usePointerEvent(visualElement, \"pointerleave\", onHoverEnd || whileHover\n        ? createHoverEvent(visualElement, false, onHoverEnd)\n        : undefined, { passive: !onHoverEnd });\n}\n\nexport { useHoverGesture };\n","/**\n * Recursively traverse up the tree to check whether the provided child node\n * is the parent or a descendant of it.\n *\n * @param parent - Element to find\n * @param child - Element to test against parent\n */\nconst isNodeOrChild = (parent, child) => {\n    if (!child) {\n        return false;\n    }\n    else if (parent === child) {\n        return true;\n    }\n    else {\n        return isNodeOrChild(parent, child.parentElement);\n    }\n};\n\nexport { isNodeOrChild };\n","const warned = new Set();\nfunction warnOnce(condition, message, element) {\n    if (condition || warned.has(message))\n        return;\n    console.warn(message);\n    if (element)\n        console.warn(element);\n    warned.add(message);\n}\n\nexport { warnOnce };\n","/**\n * Map an IntersectionHandler callback to an element. We only ever make one handler for one\n * element, so even though these handlers might all be triggered by different\n * observers, we can keep them in the same map.\n */\nconst observerCallbacks = new WeakMap();\n/**\n * Multiple observers can be created for multiple element/document roots. Each with\n * different settings. So here we store dictionaries of observers to each root,\n * using serialised settings (threshold/margin) as lookup keys.\n */\nconst observers = new WeakMap();\nconst fireObserverCallback = (entry) => {\n    const callback = observerCallbacks.get(entry.target);\n    callback && callback(entry);\n};\nconst fireAllObserverCallbacks = (entries) => {\n    entries.forEach(fireObserverCallback);\n};\nfunction initIntersectionObserver({ root, ...options }) {\n    const lookupRoot = root || document;\n    /**\n     * If we don't have an observer lookup map for this root, create one.\n     */\n    if (!observers.has(lookupRoot)) {\n        observers.set(lookupRoot, {});\n    }\n    const rootObservers = observers.get(lookupRoot);\n    const key = JSON.stringify(options);\n    /**\n     * If we don't have an observer for this combination of root and settings,\n     * create one.\n     */\n    if (!rootObservers[key]) {\n        rootObservers[key] = new IntersectionObserver(fireAllObserverCallbacks, { root, ...options });\n    }\n    return rootObservers[key];\n}\nfunction observeIntersection(element, options, callback) {\n    const rootInteresectionObserver = initIntersectionObserver(options);\n    observerCallbacks.set(element, callback);\n    rootInteresectionObserver.observe(element);\n    return () => {\n        observerCallbacks.delete(element);\n        rootInteresectionObserver.unobserve(element);\n    };\n}\n\nexport { observeIntersection };\n","import { env } from '../../../utils/process.mjs';\nimport { useRef, useEffect } from 'react';\nimport { AnimationType } from '../../../render/utils/types.mjs';\nimport { warnOnce } from '../../../utils/warn-once.mjs';\nimport { observeIntersection } from './observers.mjs';\n\nfunction useViewport({ visualElement, whileInView, onViewportEnter, onViewportLeave, viewport = {}, }) {\n    const state = useRef({\n        hasEnteredView: false,\n        isInView: false,\n    });\n    let shouldObserve = Boolean(whileInView || onViewportEnter || onViewportLeave);\n    if (viewport.once && state.current.hasEnteredView)\n        shouldObserve = false;\n    const useObserver = typeof IntersectionObserver === \"undefined\"\n        ? useMissingIntersectionObserver\n        : useIntersectionObserver;\n    useObserver(shouldObserve, state.current, visualElement, viewport);\n}\nconst thresholdNames = {\n    some: 0,\n    all: 1,\n};\nfunction useIntersectionObserver(shouldObserve, state, visualElement, { root, margin: rootMargin, amount = \"some\", once }) {\n    useEffect(() => {\n        if (!shouldObserve)\n            return;\n        const options = {\n            root: root === null || root === void 0 ? void 0 : root.current,\n            rootMargin,\n            threshold: typeof amount === \"number\" ? amount : thresholdNames[amount],\n        };\n        const intersectionCallback = (entry) => {\n            const { isIntersecting } = entry;\n            /**\n             * If there's been no change in the viewport state, early return.\n             */\n            if (state.isInView === isIntersecting)\n                return;\n            state.isInView = isIntersecting;\n            /**\n             * Handle hasEnteredView. If this is only meant to run once, and\n             * element isn't visible, early return. Otherwise set hasEnteredView to true.\n             */\n            if (once && !isIntersecting && state.hasEnteredView) {\n                return;\n            }\n            else if (isIntersecting) {\n                state.hasEnteredView = true;\n            }\n            if (visualElement.animationState) {\n                visualElement.animationState.setActive(AnimationType.InView, isIntersecting);\n            }\n            /**\n             * Use the latest committed props rather than the ones in scope\n             * when this observer is created\n             */\n            const props = visualElement.getProps();\n            const callback = isIntersecting\n                ? props.onViewportEnter\n                : props.onViewportLeave;\n            callback && callback(entry);\n        };\n        return observeIntersection(visualElement.getInstance(), options, intersectionCallback);\n    }, [shouldObserve, root, rootMargin, amount]);\n}\n/**\n * If IntersectionObserver is missing, we activate inView and fire onViewportEnter\n * on mount. This way, the page will be in the state the author expects users\n * to see it in for everyone.\n */\nfunction useMissingIntersectionObserver(shouldObserve, state, visualElement, { fallback = true }) {\n    useEffect(() => {\n        if (!shouldObserve || !fallback)\n            return;\n        if (env !== \"production\") {\n            warnOnce(false, \"IntersectionObserver not available on this device. whileInView animations will trigger on mount.\");\n        }\n        /**\n         * Fire this in an rAF because, at this point, the animation state\n         * won't have flushed for the first time and there's certain logic in\n         * there that behaves differently on the initial animation.\n         *\n         * This hook should be quite rarely called so setting this in an rAF\n         * is preferred to changing the behaviour of the animation state.\n         */\n        requestAnimationFrame(() => {\n            state.hasEnteredView = true;\n            const { onViewportEnter } = visualElement.getProps();\n            onViewportEnter && onViewportEnter(null);\n            if (visualElement.animationState) {\n                visualElement.animationState.setActive(AnimationType.InView, true);\n            }\n        });\n    }, [shouldObserve]);\n}\n\nexport { useViewport };\n","import { useFocusGesture } from '../../gestures/use-focus-gesture.mjs';\nimport { useHoverGesture } from '../../gestures/use-hover-gesture.mjs';\nimport { useTapGesture } from '../../gestures/use-tap-gesture.mjs';\nimport { useViewport } from './viewport/use-viewport.mjs';\nimport { makeRenderlessComponent } from '../utils/make-renderless-component.mjs';\n\nconst gestureAnimations = {\n    inView: makeRenderlessComponent(useViewport),\n    tap: makeRenderlessComponent(useTapGesture),\n    focus: makeRenderlessComponent(useFocusGesture),\n    hover: makeRenderlessComponent(useHoverGesture),\n};\n\nexport { gestureAnimations };\n","import { useRef } from 'react';\nimport { isNodeOrChild } from './utils/is-node-or-child.mjs';\nimport { usePointerEvent, addPointerEvent } from '../events/use-pointer-event.mjs';\nimport { useUnmountEffect } from '../utils/use-unmount-effect.mjs';\nimport { pipe } from 'popmotion';\nimport { AnimationType } from '../render/utils/types.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\n\n/**\n * @param handlers -\n * @internal\n */\nfunction useTapGesture({ onTap, onTapStart, onTapCancel, whileTap, visualElement, }) {\n    const hasPressListeners = onTap || onTapStart || onTapCancel || whileTap;\n    const isPressing = useRef(false);\n    const cancelPointerEndListeners = useRef(null);\n    /**\n     * Only set listener to passive if there are no external listeners.\n     */\n    const eventOptions = {\n        passive: !(onTapStart || onTap || onTapCancel || onPointerDown),\n    };\n    function removePointerEndListener() {\n        cancelPointerEndListeners.current && cancelPointerEndListeners.current();\n        cancelPointerEndListeners.current = null;\n    }\n    function checkPointerEnd() {\n        removePointerEndListener();\n        isPressing.current = false;\n        visualElement.animationState &&\n            visualElement.animationState.setActive(AnimationType.Tap, false);\n        return !isDragActive();\n    }\n    function onPointerUp(event, info) {\n        if (!checkPointerEnd())\n            return;\n        /**\n         * We only count this as a tap gesture if the event.target is the same\n         * as, or a child of, this component's element\n         */\n        !isNodeOrChild(visualElement.getInstance(), event.target)\n            ? onTapCancel && onTapCancel(event, info)\n            : onTap && onTap(event, info);\n    }\n    function onPointerCancel(event, info) {\n        if (!checkPointerEnd())\n            return;\n        onTapCancel && onTapCancel(event, info);\n    }\n    function onPointerDown(event, info) {\n        removePointerEndListener();\n        if (isPressing.current)\n            return;\n        isPressing.current = true;\n        cancelPointerEndListeners.current = pipe(addPointerEvent(window, \"pointerup\", onPointerUp, eventOptions), addPointerEvent(window, \"pointercancel\", onPointerCancel, eventOptions));\n        /**\n         * Ensure we trigger animations before firing event callback\n         */\n        visualElement.animationState &&\n            visualElement.animationState.setActive(AnimationType.Tap, true);\n        onTapStart && onTapStart(event, info);\n    }\n    usePointerEvent(visualElement, \"pointerdown\", hasPressListeners ? onPointerDown : undefined, eventOptions);\n    useUnmountEffect(removePointerEndListener);\n}\n\nexport { useTapGesture };\n","import { AnimationType } from '../render/utils/types.mjs';\nimport { useDomEvent } from '../events/use-dom-event.mjs';\n\n/**\n *\n * @param props\n * @param ref\n * @internal\n */\nfunction useFocusGesture({ whileFocus, visualElement }) {\n    const { animationState } = visualElement;\n    const onFocus = () => {\n        animationState && animationState.setActive(AnimationType.Focus, true);\n    };\n    const onBlur = () => {\n        animationState && animationState.setActive(AnimationType.Focus, false);\n    };\n    useDomEvent(visualElement, \"focus\", whileFocus ? onFocus : undefined);\n    useDomEvent(visualElement, \"blur\", whileFocus ? onBlur : undefined);\n}\n\nexport { useFocusGesture };\n","// Does this device prefer reduced motion? Returns `null` server-side.\nconst prefersReducedMotion = { current: null };\nconst hasReducedMotionListener = { current: false };\n\nexport { hasReducedMotionListener, prefersReducedMotion };\n","import { isBrowser } from '../is-browser.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from './state.mjs';\n\nfunction initPrefersReducedMotion() {\n    hasReducedMotionListener.current = true;\n    if (!isBrowser)\n        return;\n    if (window.matchMedia) {\n        const motionMediaQuery = window.matchMedia(\"(prefers-reduced-motion)\");\n        const setReducedMotionPreferences = () => (prefersReducedMotion.current = motionMediaQuery.matches);\n        motionMediaQuery.addListener(setReducedMotionPreferences);\n        setReducedMotionPreferences();\n    }\n    else {\n        prefersReducedMotion.current = false;\n    }\n}\n\nexport { initPrefersReducedMotion };\n","import { SubscriptionManager } from '../../utils/subscription-manager.mjs';\n\nconst names = [\n    \"LayoutMeasure\",\n    \"BeforeLayoutMeasure\",\n    \"LayoutUpdate\",\n    \"ViewportBoxUpdate\",\n    \"Update\",\n    \"Render\",\n    \"AnimationComplete\",\n    \"LayoutAnimationComplete\",\n    \"AnimationStart\",\n    \"LayoutAnimationStart\",\n    \"SetAxisTarget\",\n    \"Unmount\",\n];\nfunction createLifecycles() {\n    const managers = names.map(() => new SubscriptionManager());\n    const propSubscriptions = {};\n    const lifecycles = {\n        clearAllListeners: () => managers.forEach((manager) => manager.clear()),\n        updatePropListeners: (props) => {\n            names.forEach((name) => {\n                var _a;\n                const on = \"on\" + name;\n                const propListener = props[on];\n                // Unsubscribe existing subscription\n                (_a = propSubscriptions[name]) === null || _a === void 0 ? void 0 : _a.call(propSubscriptions);\n                // Add new subscription\n                if (propListener) {\n                    propSubscriptions[name] = lifecycles[on](propListener);\n                }\n            });\n        },\n    };\n    managers.forEach((manager, i) => {\n        lifecycles[\"on\" + names[i]] = (handler) => manager.add(handler);\n        lifecycles[\"notify\" + names[i]] = (...args) => manager.notify(...args);\n    });\n    return lifecycles;\n}\n\nexport { createLifecycles };\n","import { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { warnOnce } from '../../utils/warn-once.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction updateMotionValuesFromProps(element, next, prev) {\n    const { willChange } = next;\n    for (const key in next) {\n        const nextValue = next[key];\n        const prevValue = prev[key];\n        if (isMotionValue(nextValue)) {\n            /**\n             * If this is a motion value found in props or style, we want to add it\n             * to our visual element's motion value map.\n             */\n            element.addValue(key, nextValue);\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.add(key);\n            }\n            /**\n             * Check the version of the incoming motion value with this version\n             * and warn against mismatches.\n             */\n            if (process.env.NODE_ENV === \"development\") {\n                warnOnce(nextValue.version === \"7.5.3\", `Attempting to mix Framer Motion versions ${nextValue.version} with 7.5.3 may not work as expected.`);\n            }\n        }\n        else if (isMotionValue(prevValue)) {\n            /**\n             * If we're swapping from a motion value to a static value,\n             * create a new motion value from that\n             */\n            element.addValue(key, motionValue(nextValue));\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.remove(key);\n            }\n        }\n        else if (prevValue !== nextValue) {\n            /**\n             * If this is a flat value that has changed, update the motion value\n             * or create one if it doesn't exist. We only want to do this if we're\n             * not handling the value with our animation state.\n             */\n            if (element.hasValue(key)) {\n                const existingValue = element.getValue(key);\n                // TODO: Only update values that aren't being animated or even looked at\n                !existingValue.hasAnimated && existingValue.set(nextValue);\n            }\n            else {\n                const latestValue = element.getStaticValue(key);\n                element.addValue(key, motionValue(latestValue !== undefined ? latestValue : nextValue));\n            }\n        }\n    }\n    // Handle removed values\n    for (const key in prev) {\n        if (next[key] === undefined)\n            element.removeValue(key);\n    }\n    return next;\n}\n\nexport { updateMotionValuesFromProps };\n","import { px, number } from 'style-value-types';\nimport { isKeyframesTarget } from '../../../animation/utils/is-keyframes-target.mjs';\nimport { invariant } from 'hey-listen';\nimport { transformPropOrder } from '../../html/utils/transform.mjs';\nimport { findDimensionValueType } from '../value-types/dimensions.mjs';\nimport { isBrowser } from '../../../utils/is-browser.mjs';\n\nconst positionalKeys = new Set([\n    \"width\",\n    \"height\",\n    \"top\",\n    \"left\",\n    \"right\",\n    \"bottom\",\n    \"x\",\n    \"y\",\n]);\nconst isPositionalKey = (key) => positionalKeys.has(key);\nconst hasPositionalKey = (target) => {\n    return Object.keys(target).some(isPositionalKey);\n};\nconst setAndResetVelocity = (value, to) => {\n    // Looks odd but setting it twice doesn't render, it'll just\n    // set both prev and current to the latest value\n    value.set(to, false);\n    value.set(to);\n};\nconst isNumOrPxType = (v) => v === number || v === px;\nvar BoundingBoxDimension;\n(function (BoundingBoxDimension) {\n    BoundingBoxDimension[\"width\"] = \"width\";\n    BoundingBoxDimension[\"height\"] = \"height\";\n    BoundingBoxDimension[\"left\"] = \"left\";\n    BoundingBoxDimension[\"right\"] = \"right\";\n    BoundingBoxDimension[\"top\"] = \"top\";\n    BoundingBoxDimension[\"bottom\"] = \"bottom\";\n})(BoundingBoxDimension || (BoundingBoxDimension = {}));\nconst getPosFromMatrix = (matrix, pos) => parseFloat(matrix.split(\", \")[pos]);\nconst getTranslateFromMatrix = (pos2, pos3) => (_bbox, { transform }) => {\n    if (transform === \"none\" || !transform)\n        return 0;\n    const matrix3d = transform.match(/^matrix3d\\((.+)\\)$/);\n    if (matrix3d) {\n        return getPosFromMatrix(matrix3d[1], pos3);\n    }\n    else {\n        const matrix = transform.match(/^matrix\\((.+)\\)$/);\n        if (matrix) {\n            return getPosFromMatrix(matrix[1], pos2);\n        }\n        else {\n            return 0;\n        }\n    }\n};\nconst transformKeys = new Set([\"x\", \"y\", \"z\"]);\nconst nonTranslationalTransformKeys = transformPropOrder.filter((key) => !transformKeys.has(key));\nfunction removeNonTranslationalTransform(visualElement) {\n    const removedTransforms = [];\n    nonTranslationalTransformKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (value !== undefined) {\n            removedTransforms.push([key, value.get()]);\n            value.set(key.startsWith(\"scale\") ? 1 : 0);\n        }\n    });\n    // Apply changes to element before measurement\n    if (removedTransforms.length)\n        visualElement.syncRender();\n    return removedTransforms;\n}\nconst positionalValues = {\n    // Dimensions\n    width: ({ x }, { paddingLeft = \"0\", paddingRight = \"0\" }) => x.max - x.min - parseFloat(paddingLeft) - parseFloat(paddingRight),\n    height: ({ y }, { paddingTop = \"0\", paddingBottom = \"0\" }) => y.max - y.min - parseFloat(paddingTop) - parseFloat(paddingBottom),\n    top: (_bbox, { top }) => parseFloat(top),\n    left: (_bbox, { left }) => parseFloat(left),\n    bottom: ({ y }, { top }) => parseFloat(top) + (y.max - y.min),\n    right: ({ x }, { left }) => parseFloat(left) + (x.max - x.min),\n    // Transform\n    x: getTranslateFromMatrix(4, 13),\n    y: getTranslateFromMatrix(5, 14),\n};\nconst convertChangedValueTypes = (target, visualElement, changedKeys) => {\n    const originBbox = visualElement.measureViewportBox();\n    const element = visualElement.getInstance();\n    const elementComputedStyle = getComputedStyle(element);\n    const { display } = elementComputedStyle;\n    const origin = {};\n    // If the element is currently set to display: \"none\", make it visible before\n    // measuring the target bounding box\n    if (display === \"none\") {\n        visualElement.setStaticValue(\"display\", target.display || \"block\");\n    }\n    /**\n     * Record origins before we render and update styles\n     */\n    changedKeys.forEach((key) => {\n        origin[key] = positionalValues[key](originBbox, elementComputedStyle);\n    });\n    // Apply the latest values (as set in checkAndConvertChangedValueTypes)\n    visualElement.syncRender();\n    const targetBbox = visualElement.measureViewportBox();\n    changedKeys.forEach((key) => {\n        // Restore styles to their **calculated computed style**, not their actual\n        // originally set style. This allows us to animate between equivalent pixel units.\n        const value = visualElement.getValue(key);\n        setAndResetVelocity(value, origin[key]);\n        target[key] = positionalValues[key](targetBbox, elementComputedStyle);\n    });\n    return target;\n};\nconst checkAndConvertChangedValueTypes = (visualElement, target, origin = {}, transitionEnd = {}) => {\n    target = { ...target };\n    transitionEnd = { ...transitionEnd };\n    const targetPositionalKeys = Object.keys(target).filter(isPositionalKey);\n    // We want to remove any transform values that could affect the element's bounding box before\n    // it's measured. We'll reapply these later.\n    let removedTransformValues = [];\n    let hasAttemptedToRemoveTransformValues = false;\n    const changedValueTypeKeys = [];\n    targetPositionalKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (!visualElement.hasValue(key))\n            return;\n        let from = origin[key];\n        let fromType = findDimensionValueType(from);\n        const to = target[key];\n        let toType;\n        // TODO: The current implementation of this basically throws an error\n        // if you try and do value conversion via keyframes. There's probably\n        // a way of doing this but the performance implications would need greater scrutiny,\n        // as it'd be doing multiple resize-remeasure operations.\n        if (isKeyframesTarget(to)) {\n            const numKeyframes = to.length;\n            const fromIndex = to[0] === null ? 1 : 0;\n            from = to[fromIndex];\n            fromType = findDimensionValueType(from);\n            for (let i = fromIndex; i < numKeyframes; i++) {\n                if (!toType) {\n                    toType = findDimensionValueType(to[i]);\n                    invariant(toType === fromType ||\n                        (isNumOrPxType(fromType) && isNumOrPxType(toType)), \"Keyframes must be of the same dimension as the current value\");\n                }\n                else {\n                    invariant(findDimensionValueType(to[i]) === toType, \"All keyframes must be of the same type\");\n                }\n            }\n        }\n        else {\n            toType = findDimensionValueType(to);\n        }\n        if (fromType !== toType) {\n            // If they're both just number or px, convert them both to numbers rather than\n            // relying on resize/remeasure to convert (which is wasteful in this situation)\n            if (isNumOrPxType(fromType) && isNumOrPxType(toType)) {\n                const current = value.get();\n                if (typeof current === \"string\") {\n                    value.set(parseFloat(current));\n                }\n                if (typeof to === \"string\") {\n                    target[key] = parseFloat(to);\n                }\n                else if (Array.isArray(to) && toType === px) {\n                    target[key] = to.map(parseFloat);\n                }\n            }\n            else if ((fromType === null || fromType === void 0 ? void 0 : fromType.transform) &&\n                (toType === null || toType === void 0 ? void 0 : toType.transform) &&\n                (from === 0 || to === 0)) {\n                // If one or the other value is 0, it's safe to coerce it to the\n                // type of the other without measurement\n                if (from === 0) {\n                    value.set(toType.transform(from));\n                }\n                else {\n                    target[key] = fromType.transform(to);\n                }\n            }\n            else {\n                // If we're going to do value conversion via DOM measurements, we first\n                // need to remove non-positional transform values that could affect the bbox measurements.\n                if (!hasAttemptedToRemoveTransformValues) {\n                    removedTransformValues =\n                        removeNonTranslationalTransform(visualElement);\n                    hasAttemptedToRemoveTransformValues = true;\n                }\n                changedValueTypeKeys.push(key);\n                transitionEnd[key] =\n                    transitionEnd[key] !== undefined\n                        ? transitionEnd[key]\n                        : target[key];\n                setAndResetVelocity(value, to);\n            }\n        }\n    });\n    if (changedValueTypeKeys.length) {\n        const scrollY = changedValueTypeKeys.indexOf(\"height\") >= 0\n            ? window.pageYOffset\n            : null;\n        const convertedTarget = convertChangedValueTypes(target, visualElement, changedValueTypeKeys);\n        // If we removed transform values, reapply them before the next render\n        if (removedTransformValues.length) {\n            removedTransformValues.forEach(([key, value]) => {\n                visualElement.getValue(key).set(value);\n            });\n        }\n        // Reapply original values\n        visualElement.syncRender();\n        // Restore scroll position\n        if (isBrowser && scrollY !== null) {\n            window.scrollTo({ top: scrollY });\n        }\n        return { target: convertedTarget, transitionEnd };\n    }\n    else {\n        return { target, transitionEnd };\n    }\n};\n/**\n * Convert value types for x/y/width/height/top/left/bottom/right\n *\n * Allows animation between `'auto'` -> `'100%'` or `0` -> `'calc(50% - 10vw)'`\n *\n * @internal\n */\nfunction unitConversion(visualElement, target, origin, transitionEnd) {\n    return hasPositionalKey(target)\n        ? checkAndConvertChangedValueTypes(visualElement, target, origin, transitionEnd)\n        : { target, transitionEnd };\n}\n\nexport { BoundingBoxDimension, positionalValues, unitConversion };\n","import sync, { cancelSync } from 'framesync';\nimport { initPrefersReducedMotion } from '../utils/reduced-motion/index.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from '../utils/reduced-motion/state.mjs';\nimport { motionValue } from '../value/index.mjs';\nimport { isWillChangeMotionValue } from '../value/use-will-change/is.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\nimport { variantPriorityOrder } from './utils/animation-state.mjs';\nimport { isVariantLabel } from './utils/is-variant-label.mjs';\nimport { createLifecycles } from './utils/lifecycles.mjs';\nimport { updateMotionValuesFromProps } from './utils/motion-values.mjs';\nimport { isControllingVariants, isVariantNode } from './utils/is-controlling-variants.mjs';\nimport { env } from '../utils/process.mjs';\nimport { invariant } from 'hey-listen';\nimport { featureDefinitions } from '../motion/features/definitions.mjs';\nimport { createElement } from 'react';\nimport { isRefObject } from '../utils/is-ref-object.mjs';\nimport { resolveVariantFromProps } from './utils/resolve-variants.mjs';\n\nconst featureNames = Object.keys(featureDefinitions);\nconst numFeatures = featureNames.length;\nconst visualElement = ({ treeType = \"\", build, getBaseTarget, makeTargetAnimatable, measureViewportBox, render: renderInstance, readValueFromInstance, removeValueFromRenderState, sortNodePosition, scrapeMotionValuesFromProps, }) => ({ parent, props, presenceId, blockInitialAnimation, visualState, reducedMotionConfig, }, options = {}) => {\n    let isMounted = false;\n    const { latestValues, renderState } = visualState;\n    /**\n     * The instance of the render-specific node that will be hydrated by the\n     * exposed React ref. So for example, this visual element can host a\n     * HTMLElement, plain object, or Three.js object. The functions provided\n     * in VisualElementConfig allow us to interface with this instance.\n     */\n    let instance;\n    /**\n     * Manages the subscriptions for a visual element's lifecycle, for instance\n     * onRender\n     */\n    const lifecycles = createLifecycles();\n    /**\n     * A map of all motion values attached to this visual element. Motion\n     * values are source of truth for any given animated value. A motion\n     * value might be provided externally by the component via props.\n     */\n    const values = new Map();\n    /**\n     * A map of every subscription that binds the provided or generated\n     * motion values onChange listeners to this visual element.\n     */\n    const valueSubscriptions = new Map();\n    /**\n     * A reference to the previously-provided motion values as returned\n     * from scrapeMotionValuesFromProps. We use the keys in here to determine\n     * if any motion values need to be removed after props are updated.\n     */\n    let prevMotionValues = {};\n    /**\n     * When values are removed from all animation props we need to search\n     * for a fallback value to animate to. These values are tracked in baseTarget.\n     */\n    const baseTarget = {\n        ...latestValues,\n    };\n    /**\n     * Create an object of the values we initially animated from (if initial prop present).\n     */\n    const initialValues = props.initial ? { ...latestValues } : {};\n    // Internal methods ========================\n    /**\n     * On mount, this will be hydrated with a callback to disconnect\n     * this visual element from its parent on unmount.\n     */\n    let removeFromVariantTree;\n    /**\n     * Render the element with the latest styles outside of the React\n     * render lifecycle\n     */\n    function render() {\n        if (!instance || !isMounted)\n            return;\n        triggerBuild();\n        renderInstance(instance, renderState, props.style, element.projection);\n    }\n    function triggerBuild() {\n        build(element, renderState, latestValues, options, props);\n    }\n    function update() {\n        lifecycles.notifyUpdate(latestValues);\n    }\n    /**\n     *\n     */\n    function bindToMotionValue(key, value) {\n        const removeOnChange = value.onChange((latestValue) => {\n            latestValues[key] = latestValue;\n            props.onUpdate && sync.update(update, false, true);\n        });\n        const removeOnRenderRequest = value.onRenderRequest(element.scheduleRender);\n        valueSubscriptions.set(key, () => {\n            removeOnChange();\n            removeOnRenderRequest();\n        });\n    }\n    /**\n     * Any motion values that are provided to the element when created\n     * aren't yet bound to the element, as this would technically be impure.\n     * However, we iterate through the motion values and set them to the\n     * initial values for this component.\n     *\n     * TODO: This is impure and we should look at changing this to run on mount.\n     * Doing so will break some tests but this isn't neccessarily a breaking change,\n     * more a reflection of the test.\n     */\n    const { willChange, ...initialMotionValues } = scrapeMotionValuesFromProps(props);\n    for (const key in initialMotionValues) {\n        const value = initialMotionValues[key];\n        if (latestValues[key] !== undefined && isMotionValue(value)) {\n            value.set(latestValues[key], false);\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.add(key);\n            }\n        }\n    }\n    /**\n     * Update external values with initial values\n     */\n    if (props.values) {\n        for (const key in props.values) {\n            const value = props.values[key];\n            if (latestValues[key] !== undefined && isMotionValue(value)) {\n                value.set(latestValues[key]);\n            }\n        }\n    }\n    /**\n     * Determine what role this visual element should take in the variant tree.\n     */\n    const isControllingVariants$1 = isControllingVariants(props);\n    const isVariantNode$1 = isVariantNode(props);\n    const element = {\n        treeType,\n        /**\n         * This is a mirror of the internal instance prop, which keeps\n         * VisualElement type-compatible with React's RefObject.\n         */\n        current: null,\n        /**\n         * The depth of this visual element within the visual element tree.\n         */\n        depth: parent ? parent.depth + 1 : 0,\n        parent,\n        children: new Set(),\n        /**\n         *\n         */\n        presenceId,\n        shouldReduceMotion: null,\n        /**\n         * If this component is part of the variant tree, it should track\n         * any children that are also part of the tree. This is essentially\n         * a shadow tree to simplify logic around how to stagger over children.\n         */\n        variantChildren: isVariantNode$1 ? new Set() : undefined,\n        /**\n         * Whether this instance is visible. This can be changed imperatively\n         * by the projection tree, is analogous to CSS's visibility in that\n         * hidden elements should take up layout, and needs enacting by the configured\n         * render function.\n         */\n        isVisible: undefined,\n        /**\n         * Normally, if a component is controlled by a parent's variants, it can\n         * rely on that ancestor to trigger animations further down the tree.\n         * However, if a component is created after its parent is mounted, the parent\n         * won't trigger that mount animation so the child needs to.\n         *\n         * TODO: This might be better replaced with a method isParentMounted\n         */\n        manuallyAnimateOnMount: Boolean(parent === null || parent === void 0 ? void 0 : parent.isMounted()),\n        /**\n         * This can be set by AnimatePresence to force components that mount\n         * at the same time as it to mount as if they have initial={false} set.\n         */\n        blockInitialAnimation,\n        /**\n         * Determine whether this component has mounted yet. This is mostly used\n         * by variant children to determine whether they need to trigger their\n         * own animations on mount.\n         */\n        isMounted: () => Boolean(instance),\n        mount(newInstance) {\n            isMounted = true;\n            instance = element.current = newInstance;\n            if (element.projection) {\n                element.projection.mount(newInstance);\n            }\n            if (isVariantNode$1 && parent && !isControllingVariants$1) {\n                removeFromVariantTree = parent === null || parent === void 0 ? void 0 : parent.addVariantChild(element);\n            }\n            values.forEach((value, key) => bindToMotionValue(key, value));\n            if (!hasReducedMotionListener.current) {\n                initPrefersReducedMotion();\n            }\n            element.shouldReduceMotion =\n                reducedMotionConfig === \"never\"\n                    ? false\n                    : reducedMotionConfig === \"always\"\n                        ? true\n                        : prefersReducedMotion.current;\n            parent === null || parent === void 0 ? void 0 : parent.children.add(element);\n            element.setProps(props);\n        },\n        /**\n         *\n         */\n        unmount() {\n            var _a;\n            (_a = element.projection) === null || _a === void 0 ? void 0 : _a.unmount();\n            cancelSync.update(update);\n            cancelSync.render(render);\n            valueSubscriptions.forEach((remove) => remove());\n            removeFromVariantTree === null || removeFromVariantTree === void 0 ? void 0 : removeFromVariantTree();\n            parent === null || parent === void 0 ? void 0 : parent.children.delete(element);\n            lifecycles.clearAllListeners();\n            instance = undefined;\n            isMounted = false;\n        },\n        loadFeatures(renderedProps, isStrict, preloadedFeatures, projectionId, ProjectionNodeConstructor, initialLayoutGroupConfig) {\n            const features = [];\n            /**\n             * If we're in development mode, check to make sure we're not rendering a motion component\n             * as a child of LazyMotion, as this will break the file-size benefits of using it.\n             */\n            if (env !== \"production\" && preloadedFeatures && isStrict) {\n                invariant(false, \"You have rendered a `motion` component within a `LazyMotion` component. This will break tree shaking. Import and render a `m` component instead.\");\n            }\n            for (let i = 0; i < numFeatures; i++) {\n                const name = featureNames[i];\n                const { isEnabled, Component } = featureDefinitions[name];\n                /**\n                 * It might be possible in the future to use this moment to\n                 * dynamically request functionality. In initial tests this\n                 * was producing a lot of duplication amongst bundles.\n                 */\n                if (isEnabled(renderedProps) && Component) {\n                    features.push(createElement(Component, {\n                        key: name,\n                        ...renderedProps,\n                        visualElement: element,\n                    }));\n                }\n            }\n            if (!element.projection && ProjectionNodeConstructor) {\n                element.projection = new ProjectionNodeConstructor(projectionId, element.getLatestValues(), parent && parent.projection);\n                const { layoutId, layout, drag, dragConstraints, layoutScroll, } = renderedProps;\n                element.projection.setOptions({\n                    layoutId,\n                    layout,\n                    alwaysMeasureLayout: Boolean(drag) ||\n                        (dragConstraints && isRefObject(dragConstraints)),\n                    visualElement: element,\n                    scheduleRender: () => element.scheduleRender(),\n                    /**\n                     * TODO: Update options in an effect. This could be tricky as it'll be too late\n                     * to update by the time layout animations run.\n                     * We also need to fix this safeToRemove by linking it up to the one returned by usePresence,\n                     * ensuring it gets called if there's no potential layout animations.\n                     *\n                     */\n                    animationType: typeof layout === \"string\" ? layout : \"both\",\n                    initialPromotionConfig: initialLayoutGroupConfig,\n                    layoutScroll,\n                });\n            }\n            return features;\n        },\n        /**\n         * Add a child visual element to our set of children.\n         */\n        addVariantChild(child) {\n            var _a;\n            const closestVariantNode = element.getClosestVariantNode();\n            if (closestVariantNode) {\n                (_a = closestVariantNode.variantChildren) === null || _a === void 0 ? void 0 : _a.add(child);\n                return () => closestVariantNode.variantChildren.delete(child);\n            }\n        },\n        sortNodePosition(other) {\n            /**\n             * If these nodes aren't even of the same type we can't compare their depth.\n             */\n            if (!sortNodePosition || treeType !== other.treeType)\n                return 0;\n            return sortNodePosition(element.getInstance(), other.getInstance());\n        },\n        /**\n         * Returns the closest variant node in the tree starting from\n         * this visual element.\n         */\n        getClosestVariantNode: () => isVariantNode$1 ? element : parent === null || parent === void 0 ? void 0 : parent.getClosestVariantNode(),\n        /**\n         * Expose the latest layoutId prop.\n         */\n        getLayoutId: () => props.layoutId,\n        /**\n         * Returns the current instance.\n         */\n        getInstance: () => instance,\n        /**\n         * Get/set the latest static values.\n         */\n        getStaticValue: (key) => latestValues[key],\n        setStaticValue: (key, value) => (latestValues[key] = value),\n        /**\n         * Returns the latest motion value state. Currently only used to take\n         * a snapshot of the visual element - perhaps this can return the whole\n         * visual state\n         */\n        getLatestValues: () => latestValues,\n        /**\n         * Set the visiblity of the visual element. If it's changed, schedule\n         * a render to reflect these changes.\n         */\n        setVisibility(visibility) {\n            if (element.isVisible === visibility)\n                return;\n            element.isVisible = visibility;\n            element.scheduleRender();\n        },\n        /**\n         * Make a target animatable by Popmotion. For instance, if we're\n         * trying to animate width from 100px to 100vw we need to measure 100vw\n         * in pixels to determine what we really need to animate to. This is also\n         * pluggable to support Framer's custom value types like Color,\n         * and CSS variables.\n         */\n        makeTargetAnimatable(target, canMutate = true) {\n            return makeTargetAnimatable(element, target, props, canMutate);\n        },\n        /**\n         * Measure the current viewport box with or without transforms.\n         * Only measures axis-aligned boxes, rotate and skew must be manually\n         * removed with a re-render to work.\n         */\n        measureViewportBox() {\n            return measureViewportBox(instance, props);\n        },\n        // Motion values ========================\n        /**\n         * Add a motion value and bind it to this visual element.\n         */\n        addValue(key, value) {\n            // Remove existing value if it exists\n            if (element.hasValue(key))\n                element.removeValue(key);\n            values.set(key, value);\n            latestValues[key] = value.get();\n            bindToMotionValue(key, value);\n        },\n        /**\n         * Remove a motion value and unbind any active subscriptions.\n         */\n        removeValue(key) {\n            var _a;\n            values.delete(key);\n            (_a = valueSubscriptions.get(key)) === null || _a === void 0 ? void 0 : _a();\n            valueSubscriptions.delete(key);\n            delete latestValues[key];\n            removeValueFromRenderState(key, renderState);\n        },\n        /**\n         * Check whether we have a motion value for this key\n         */\n        hasValue: (key) => values.has(key),\n        /**\n         * Get a motion value for this key. If called with a default\n         * value, we'll create one if none exists.\n         */\n        getValue(key, defaultValue) {\n            if (props.values && props.values[key]) {\n                return props.values[key];\n            }\n            let value = values.get(key);\n            if (value === undefined && defaultValue !== undefined) {\n                value = motionValue(defaultValue);\n                element.addValue(key, value);\n            }\n            return value;\n        },\n        /**\n         * Iterate over our motion values.\n         */\n        forEachValue: (callback) => values.forEach(callback),\n        /**\n         * If we're trying to animate to a previously unencountered value,\n         * we need to check for it in our state and as a last resort read it\n         * directly from the instance (which might have performance implications).\n         */\n        readValue: (key) => latestValues[key] !== undefined\n            ? latestValues[key]\n            : readValueFromInstance(instance, key, options),\n        /**\n         * Set the base target to later animate back to. This is currently\n         * only hydrated on creation and when we first read a value.\n         */\n        setBaseTarget(key, value) {\n            baseTarget[key] = value;\n        },\n        /**\n         * Find the base target for a value thats been removed from all animation\n         * props.\n         */\n        getBaseTarget(key) {\n            var _a;\n            const { initial } = props;\n            const valueFromInitial = typeof initial === \"string\" || typeof initial === \"object\"\n                ? (_a = resolveVariantFromProps(props, initial)) === null || _a === void 0 ? void 0 : _a[key]\n                : undefined;\n            /**\n             * If this value still exists in the current initial variant, read that.\n             */\n            if (initial && valueFromInitial !== undefined) {\n                return valueFromInitial;\n            }\n            /**\n             * Alternatively, if this VisualElement config has defined a getBaseTarget\n             * so we can read the value from an alternative source, try that.\n             */\n            if (getBaseTarget) {\n                const target = getBaseTarget(props, key);\n                if (target !== undefined && !isMotionValue(target))\n                    return target;\n            }\n            /**\n             * If the value was initially defined on initial, but it doesn't any more,\n             * return undefined. Otherwise return the value as initially read from the DOM.\n             */\n            return initialValues[key] !== undefined &&\n                valueFromInitial === undefined\n                ? undefined\n                : baseTarget[key];\n        },\n        // Lifecyles ========================\n        ...lifecycles,\n        /**\n         * Build the renderer state based on the latest visual state.\n         */\n        build() {\n            triggerBuild();\n            return renderState;\n        },\n        /**\n         * Schedule a render on the next animation frame.\n         */\n        scheduleRender() {\n            sync.render(render, false, true);\n        },\n        /**\n         * Synchronously fire render. It's prefered that we batch renders but\n         * in many circumstances, like layout measurement, we need to run this\n         * synchronously. However in those instances other measures should be taken\n         * to batch reads/writes.\n         */\n        syncRender: render,\n        /**\n         * Update the provided props. Ensure any newly-added motion values are\n         * added to our map, old ones removed, and listeners updated.\n         */\n        setProps(newProps) {\n            if (newProps.transformTemplate || props.transformTemplate) {\n                element.scheduleRender();\n            }\n            props = newProps;\n            lifecycles.updatePropListeners(newProps);\n            prevMotionValues = updateMotionValuesFromProps(element, scrapeMotionValuesFromProps(props), prevMotionValues);\n        },\n        getProps: () => props,\n        // Variants ==============================\n        /**\n         * Returns the variant definition with a given name.\n         */\n        getVariant: (name) => { var _a; return (_a = props.variants) === null || _a === void 0 ? void 0 : _a[name]; },\n        /**\n         * Returns the defined default transition on this component.\n         */\n        getDefaultTransition: () => props.transition,\n        getTransformPagePoint: () => {\n            return props.transformPagePoint;\n        },\n        /**\n         * Used by child variant nodes to get the closest ancestor variant props.\n         */\n        getVariantContext(startAtParent = false) {\n            if (startAtParent)\n                return parent === null || parent === void 0 ? void 0 : parent.getVariantContext();\n            if (!isControllingVariants$1) {\n                const context = (parent === null || parent === void 0 ? void 0 : parent.getVariantContext()) || {};\n                if (props.initial !== undefined) {\n                    context.initial = props.initial;\n                }\n                return context;\n            }\n            const context = {};\n            for (let i = 0; i < numVariantProps; i++) {\n                const name = variantProps[i];\n                const prop = props[name];\n                if (isVariantLabel(prop) || prop === false) {\n                    context[name] = prop;\n                }\n            }\n            return context;\n        },\n    };\n    return element;\n};\nconst variantProps = [\"initial\", ...variantPriorityOrder];\nconst numVariantProps = variantProps.length;\n\nexport { visualElement };\n","import { resolveCSSVariables } from './css-variables-conversion.mjs';\nimport { unitConversion } from './unit-conversion.mjs';\n\n/**\n * Parse a DOM variant to make it animatable. This involves resolving CSS variables\n * and ensuring animations like \"20%\" => \"calc(50vw)\" are performed in pixels.\n */\nconst parseDomVariant = (visualElement, target, origin, transitionEnd) => {\n    const resolved = resolveCSSVariables(visualElement, target, transitionEnd);\n    target = resolved.target;\n    transitionEnd = resolved.transitionEnd;\n    return unitConversion(visualElement, target, origin, transitionEnd);\n};\n\nexport { parseDomVariant };\n","import { visualElement } from '../index.mjs';\nimport { getOrigin, checkTargetForNewValues } from '../utils/setters.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { isCSSVariable } from '../dom/utils/is-css-variable.mjs';\nimport { parseDomVariant } from '../dom/utils/parse-dom-variant.mjs';\nimport { transformProps } from './utils/transform.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { renderHTML } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { measureViewportBox } from '../../projection/utils/measure.mjs';\n\nfunction getComputedStyle(element) {\n    return window.getComputedStyle(element);\n}\nconst htmlConfig = {\n    treeType: \"dom\",\n    readValueFromInstance(domElement, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        else {\n            const computedStyle = getComputedStyle(domElement);\n            const value = (isCSSVariable(key)\n                ? computedStyle.getPropertyValue(key)\n                : computedStyle[key]) || 0;\n            return typeof value === \"string\" ? value.trim() : value;\n        }\n    },\n    sortNodePosition(a, b) {\n        /**\n         * compareDocumentPosition returns a bitmask, by using the bitwise &\n         * we're returning true if 2 in that bitmask is set to true. 2 is set\n         * to true if b preceeds a.\n         */\n        return a.compareDocumentPosition(b) & 2 ? 1 : -1;\n    },\n    getBaseTarget(props, key) {\n        var _a;\n        return (_a = props.style) === null || _a === void 0 ? void 0 : _a[key];\n    },\n    measureViewportBox(element, { transformPagePoint }) {\n        return measureViewportBox(element, transformPagePoint);\n    },\n    /**\n     * Reset the transform on the current Element. This is called as part\n     * of a batched process across the entire layout tree. To remove this write\n     * cycle it'd be interesting to see if it's possible to \"undo\" all the current\n     * layout transforms up the tree in the same way this.getBoundingBoxWithoutTransforms\n     * works\n     */\n    resetTransform(element, domElement, props) {\n        const { transformTemplate } = props;\n        domElement.style.transform = transformTemplate\n            ? transformTemplate({}, \"\")\n            : \"none\";\n        // Ensure that whatever happens next, we restore our transform on the next frame\n        element.scheduleRender();\n    },\n    restoreTransform(instance, mutableState) {\n        instance.style.transform = mutableState.style.transform;\n    },\n    removeValueFromRenderState(key, { vars, style }) {\n        delete vars[key];\n        delete style[key];\n    },\n    /**\n     * Ensure that HTML and Framer-specific value types like `px`->`%` and `Color`\n     * can be animated by Motion.\n     */\n    makeTargetAnimatable(element, { transition, transitionEnd, ...target }, { transformValues }, isMounted = true) {\n        let origin = getOrigin(target, transition || {}, element);\n        /**\n         * If Framer has provided a function to convert `Color` etc value types, convert them\n         */\n        if (transformValues) {\n            if (transitionEnd)\n                transitionEnd = transformValues(transitionEnd);\n            if (target)\n                target = transformValues(target);\n            if (origin)\n                origin = transformValues(origin);\n        }\n        if (isMounted) {\n            checkTargetForNewValues(element, target, origin);\n            const parsed = parseDomVariant(element, target, origin, transitionEnd);\n            transitionEnd = parsed.transitionEnd;\n            target = parsed.target;\n        }\n        return {\n            transition,\n            transitionEnd,\n            ...target,\n        };\n    },\n    scrapeMotionValuesFromProps,\n    build(element, renderState, latestValues, options, props) {\n        if (element.isVisible !== undefined) {\n            renderState.style.visibility = element.isVisible\n                ? \"visible\"\n                : \"hidden\";\n        }\n        buildHTMLStyles(renderState, latestValues, options, props.transformTemplate);\n    },\n    render: renderHTML,\n};\nconst htmlVisualElement = visualElement(htmlConfig);\n\nexport { getComputedStyle, htmlConfig, htmlVisualElement };\n","import { visualElement } from '../index.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { htmlConfig } from '../html/visual-element.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { camelToDash } from '../dom/utils/camel-to-dash.mjs';\nimport { camelCaseAttributes } from './utils/camel-case-attrs.mjs';\nimport { transformProps } from '../html/utils/transform.mjs';\nimport { renderSVG } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\n\nconst svgVisualElement = visualElement({\n    ...htmlConfig,\n    getBaseTarget(props, key) {\n        return props[key];\n    },\n    readValueFromInstance(domElement, key) {\n        var _a;\n        if (transformProps.has(key)) {\n            return ((_a = getDefaultValueType(key)) === null || _a === void 0 ? void 0 : _a.default) || 0;\n        }\n        key = !camelCaseAttributes.has(key) ? camelToDash(key) : key;\n        return domElement.getAttribute(key);\n    },\n    scrapeMotionValuesFromProps,\n    build(_element, renderState, latestValues, options, props) {\n        buildSVGAttrs(renderState, latestValues, options, props.transformTemplate);\n    },\n    render: renderSVG,\n});\n\nexport { svgVisualElement };\n","import { animations } from '../../motion/features/animations.mjs';\nimport { gestureAnimations } from '../../motion/features/gestures.mjs';\nimport { createDomVisualElement } from './create-visual-element.mjs';\n\n/**\n * @public\n */\nconst domAnimation = {\n    renderer: createDomVisualElement,\n    ...animations,\n    ...gestureAnimations,\n};\n\nexport { domAnimation };\n","import { htmlVisualElement } from '../html/visual-element.mjs';\nimport { svgVisualElement } from '../svg/visual-element.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\n\nconst createDomVisualElement = (Component, options) => {\n    return isSVGComponent(Component)\n        ? svgVisualElement(options, { enableHardwareAcceleration: false })\n        : htmlVisualElement(options, { enableHardwareAcceleration: true });\n};\n\nexport { createDomVisualElement };\n","import { motionValue } from '../value/index.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\nimport { startAnimation } from './utils/transitions.mjs';\n\n/**\n * Animate a single value or a `MotionValue`.\n *\n * The first argument is either a `MotionValue` to animate, or an initial animation value.\n *\n * The second is either a value to animate to, or an array of keyframes to animate through.\n *\n * The third argument can be either tween or spring options, and optional lifecycle methods: `onUpdate`, `onPlay`, `onComplete`, `onRepeat` and `onStop`.\n *\n * Returns `AnimationPlaybackControls`, currently just a `stop` method.\n *\n * ```javascript\n * const x = useMotionValue(0)\n *\n * useEffect(() => {\n *   const controls = animate(x, 100, {\n *     type: \"spring\",\n *     stiffness: 2000,\n *     onComplete: v => {}\n *   })\n *\n *   return controls.stop\n * })\n * ```\n *\n * @public\n */\nfunction animate(from, to, transition = {}) {\n    const value = isMotionValue(from) ? from : motionValue(from);\n    startAnimation(\"\", value, to, transition);\n    return {\n        stop: () => value.stop(),\n        isAnimating: () => value.isAnimating(),\n    };\n}\n\nexport { animate };\n","import { mix, progress, circOut, linear } from 'popmotion';\nimport { percent, px } from 'style-value-types';\n\nconst borders = [\"TopLeft\", \"TopRight\", \"BottomLeft\", \"BottomRight\"];\nconst numBorders = borders.length;\nconst asNumber = (value) => typeof value === \"string\" ? parseFloat(value) : value;\nconst isPx = (value) => typeof value === \"number\" || px.test(value);\nfunction mixValues(target, follow, lead, progress, shouldCrossfadeOpacity, isOnlyMember) {\n    var _a, _b, _c, _d;\n    if (shouldCrossfadeOpacity) {\n        target.opacity = mix(0, \n        // (follow?.opacity as number) ?? 0,\n        // TODO Reinstate this if only child\n        (_a = lead.opacity) !== null && _a !== void 0 ? _a : 1, easeCrossfadeIn(progress));\n        target.opacityExit = mix((_b = follow.opacity) !== null && _b !== void 0 ? _b : 1, 0, easeCrossfadeOut(progress));\n    }\n    else if (isOnlyMember) {\n        target.opacity = mix((_c = follow.opacity) !== null && _c !== void 0 ? _c : 1, (_d = lead.opacity) !== null && _d !== void 0 ? _d : 1, progress);\n    }\n    /**\n     * Mix border radius\n     */\n    for (let i = 0; i < numBorders; i++) {\n        const borderLabel = `border${borders[i]}Radius`;\n        let followRadius = getRadius(follow, borderLabel);\n        let leadRadius = getRadius(lead, borderLabel);\n        if (followRadius === undefined && leadRadius === undefined)\n            continue;\n        followRadius || (followRadius = 0);\n        leadRadius || (leadRadius = 0);\n        const canMix = followRadius === 0 ||\n            leadRadius === 0 ||\n            isPx(followRadius) === isPx(leadRadius);\n        if (canMix) {\n            target[borderLabel] = Math.max(mix(asNumber(followRadius), asNumber(leadRadius), progress), 0);\n            if (percent.test(leadRadius) || percent.test(followRadius)) {\n                target[borderLabel] += \"%\";\n            }\n        }\n        else {\n            target[borderLabel] = leadRadius;\n        }\n    }\n    /**\n     * Mix rotation\n     */\n    if (follow.rotate || lead.rotate) {\n        target.rotate = mix(follow.rotate || 0, lead.rotate || 0, progress);\n    }\n}\nfunction getRadius(values, radiusName) {\n    var _a;\n    return (_a = values[radiusName]) !== null && _a !== void 0 ? _a : values.borderRadius;\n}\n// /**\n//  * We only want to mix the background color if there's a follow element\n//  * that we're not crossfading opacity between. For instance with switch\n//  * AnimateSharedLayout animations, this helps the illusion of a continuous\n//  * element being animated but also cuts down on the number of paints triggered\n//  * for elements where opacity is doing that work for us.\n//  */\n// if (\n//     !hasFollowElement &&\n//     latestLeadValues.backgroundColor &&\n//     latestFollowValues.backgroundColor\n// ) {\n//     /**\n//      * This isn't ideal performance-wise as mixColor is creating a new function every frame.\n//      * We could probably create a mixer that runs at the start of the animation but\n//      * the idea behind the crossfader is that it runs dynamically between two potentially\n//      * changing targets (ie opacity or borderRadius may be animating independently via variants)\n//      */\n//     leadState.backgroundColor = followState.backgroundColor = mixColor(\n//         latestFollowValues.backgroundColor as string,\n//         latestLeadValues.backgroundColor as string\n//     )(p)\n// }\nconst easeCrossfadeIn = compress(0, 0.5, circOut);\nconst easeCrossfadeOut = compress(0.5, 0.95, linear);\nfunction compress(min, max, easing) {\n    return (p) => {\n        // Could replace ifs with clamp\n        if (p < min)\n            return 0;\n        if (p > max)\n            return 1;\n        return easing(progress(min, max, p));\n    };\n}\n\nexport { mixValues };\n","/**\n * Reset an axis to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisInto(axis, originAxis) {\n    axis.min = originAxis.min;\n    axis.max = originAxis.max;\n}\n/**\n * Reset a box to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyBoxInto(box, originBox) {\n    copyAxisInto(box.x, originBox.x);\n    copyAxisInto(box.y, originBox.y);\n}\n\nexport { copyAxisInto, copyBoxInto };\n","import { mix } from 'popmotion';\nimport { percent } from 'style-value-types';\nimport { scalePoint } from './delta-apply.mjs';\n\n/**\n * Remove a delta from a point. This is essentially the steps of applyPointDelta in reverse\n */\nfunction removePointDelta(point, translate, scale, originPoint, boxScale) {\n    point -= translate;\n    point = scalePoint(point, 1 / scale, originPoint);\n    if (boxScale !== undefined) {\n        point = scalePoint(point, 1 / boxScale, originPoint);\n    }\n    return point;\n}\n/**\n * Remove a delta from an axis. This is essentially the steps of applyAxisDelta in reverse\n */\nfunction removeAxisDelta(axis, translate = 0, scale = 1, origin = 0.5, boxScale, originAxis = axis, sourceAxis = axis) {\n    if (percent.test(translate)) {\n        translate = parseFloat(translate);\n        const relativeProgress = mix(sourceAxis.min, sourceAxis.max, translate / 100);\n        translate = relativeProgress - sourceAxis.min;\n    }\n    if (typeof translate !== \"number\")\n        return;\n    let originPoint = mix(originAxis.min, originAxis.max, origin);\n    if (axis === originAxis)\n        originPoint -= translate;\n    axis.min = removePointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = removePointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Remove a transforms from an axis. This is essentially the steps of applyAxisTransforms in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeAxisTransforms(axis, transforms, [key, scaleKey, originKey], origin, sourceAxis) {\n    removeAxisDelta(axis, transforms[key], transforms[scaleKey], transforms[originKey], transforms.scale, origin, sourceAxis);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Remove a transforms from an box. This is essentially the steps of applyAxisBox in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeBoxTransforms(box, transforms, originBox, sourceBox) {\n    removeAxisTransforms(box.x, transforms, xKeys, originBox === null || originBox === void 0 ? void 0 : originBox.x, sourceBox === null || sourceBox === void 0 ? void 0 : sourceBox.x);\n    removeAxisTransforms(box.y, transforms, yKeys, originBox === null || originBox === void 0 ? void 0 : originBox.y, sourceBox === null || sourceBox === void 0 ? void 0 : sourceBox.y);\n}\n\nexport { removeAxisDelta, removeAxisTransforms, removeBoxTransforms, removePointDelta };\n","import { distance } from 'popmotion';\nimport { calcLength } from './delta-calc.mjs';\n\nfunction isAxisDeltaZero(delta) {\n    return delta.translate === 0 && delta.scale === 1;\n}\nfunction isDeltaZero(delta) {\n    return isAxisDeltaZero(delta.x) && isAxisDeltaZero(delta.y);\n}\nfunction boxEquals(a, b) {\n    return (a.x.min === b.x.min &&\n        a.x.max === b.x.max &&\n        a.y.min === b.y.min &&\n        a.y.max === b.y.max);\n}\nfunction aspectRatio(box) {\n    return calcLength(box.x) / calcLength(box.y);\n}\nfunction isCloseTo(a, b, max = 0.1) {\n    return distance(a, b) <= max;\n}\n\nexport { aspectRatio, boxEquals, isCloseTo, isDeltaZero };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\n\nclass NodeStack {\n    constructor() {\n        this.members = [];\n    }\n    add(node) {\n        addUniqueItem(this.members, node);\n        node.scheduleRender();\n    }\n    remove(node) {\n        removeItem(this.members, node);\n        if (node === this.prevLead) {\n            this.prevLead = undefined;\n        }\n        if (node === this.lead) {\n            const prevLead = this.members[this.members.length - 1];\n            if (prevLead) {\n                this.promote(prevLead);\n            }\n        }\n    }\n    relegate(node) {\n        const indexOfNode = this.members.findIndex((member) => node === member);\n        if (indexOfNode === 0)\n            return false;\n        /**\n         * Find the next projection node that is present\n         */\n        let prevLead;\n        for (let i = indexOfNode; i >= 0; i--) {\n            const member = this.members[i];\n            if (member.isPresent !== false) {\n                prevLead = member;\n                break;\n            }\n        }\n        if (prevLead) {\n            this.promote(prevLead);\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    promote(node, preserveFollowOpacity) {\n        var _a;\n        const prevLead = this.lead;\n        if (node === prevLead)\n            return;\n        this.prevLead = prevLead;\n        this.lead = node;\n        node.show();\n        if (prevLead) {\n            prevLead.instance && prevLead.scheduleRender();\n            node.scheduleRender();\n            node.resumeFrom = prevLead;\n            if (preserveFollowOpacity) {\n                node.resumeFrom.preserveOpacity = true;\n            }\n            if (prevLead.snapshot) {\n                node.snapshot = prevLead.snapshot;\n                node.snapshot.latestValues =\n                    prevLead.animationValues || prevLead.latestValues;\n                node.snapshot.isShared = true;\n            }\n            if ((_a = node.root) === null || _a === void 0 ? void 0 : _a.isUpdating) {\n                node.isLayoutDirty = true;\n            }\n            const { crossfade } = node.options;\n            if (crossfade === false) {\n                prevLead.hide();\n            }\n            /**\n             * TODO:\n             *   - Test border radius when previous node was deleted\n             *   - boxShadow mixing\n             *   - Shared between element A in scrolled container and element B (scroll stays the same or changes)\n             *   - Shared between element A in transformed container and element B (transform stays the same or changes)\n             *   - Shared between element A in scrolled page and element B (scroll stays the same or changes)\n             * ---\n             *   - Crossfade opacity of root nodes\n             *   - layoutId changes after animation\n             *   - layoutId changes mid animation\n             */\n        }\n    }\n    exitAnimationComplete() {\n        this.members.forEach((node) => {\n            var _a, _b, _c, _d, _e;\n            (_b = (_a = node.options).onExitComplete) === null || _b === void 0 ? void 0 : _b.call(_a);\n            (_e = (_c = node.resumingFrom) === null || _c === void 0 ? void 0 : (_d = _c.options).onExitComplete) === null || _e === void 0 ? void 0 : _e.call(_d);\n        });\n    }\n    scheduleRender() {\n        this.members.forEach((node) => {\n            node.instance && node.scheduleRender(false);\n        });\n    }\n    /**\n     * Clear any leads that have been removed this render to prevent them from being\n     * used in future animations and to prevent memory leaks\n     */\n    removeLeadSnapshot() {\n        if (this.lead && this.lead.snapshot) {\n            this.lead.snapshot = undefined;\n        }\n    }\n}\n\nexport { NodeStack };\n","const identityProjection = \"translate3d(0px, 0px, 0) scale(1, 1) scale(1, 1)\";\nfunction buildProjectionTransform(delta, treeScale, latestTransform) {\n    /**\n     * The translations we use to calculate are always relative to the viewport coordinate space.\n     * But when we apply scales, we also scale the coordinate space of an element and its children.\n     * For instance if we have a treeScale (the culmination of all parent scales) of 0.5 and we need\n     * to move an element 100 pixels, we actually need to move it 200 in within that scaled space.\n     */\n    const xTranslate = delta.x.translate / treeScale.x;\n    const yTranslate = delta.y.translate / treeScale.y;\n    let transform = `translate3d(${xTranslate}px, ${yTranslate}px, 0) `;\n    /**\n     * Apply scale correction for the tree transform.\n     * This will apply scale to the screen-orientated axes.\n     */\n    transform += `scale(${1 / treeScale.x}, ${1 / treeScale.y}) `;\n    if (latestTransform) {\n        const { rotate, rotateX, rotateY } = latestTransform;\n        if (rotate)\n            transform += `rotate(${rotate}deg) `;\n        if (rotateX)\n            transform += `rotateX(${rotateX}deg) `;\n        if (rotateY)\n            transform += `rotateY(${rotateY}deg) `;\n    }\n    /**\n     * Apply scale to match the size of the element to the size we want it.\n     * This will apply scale to the element-orientated axes.\n     */\n    const elementScaleX = delta.x.scale * treeScale.x;\n    const elementScaleY = delta.y.scale * treeScale.y;\n    transform += `scale(${elementScaleX}, ${elementScaleY})`;\n    return transform === identityProjection ? \"none\" : transform;\n}\n\nexport { buildProjectionTransform, identityProjection };\n","const compareByDepth = (a, b) => a.depth - b.depth;\n\nexport { compareByDepth };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\nimport { compareByDepth } from './compare-by-depth.mjs';\n\nclass FlatTree {\n    constructor() {\n        this.children = [];\n        this.isDirty = false;\n    }\n    add(child) {\n        addUniqueItem(this.children, child);\n        this.isDirty = true;\n    }\n    remove(child) {\n        removeItem(this.children, child);\n        this.isDirty = true;\n    }\n    forEach(callback) {\n        this.isDirty && this.children.sort(compareByDepth);\n        this.isDirty = false;\n        this.children.forEach(callback);\n    }\n}\n\nexport { FlatTree };\n","import sync, { cancelSync, flushSync } from 'framesync';\nimport { mix } from 'popmotion';\nimport { animate } from '../../animation/animate.mjs';\nimport { SubscriptionManager } from '../../utils/subscription-manager.mjs';\nimport { mixValues } from '../animation/mix-values.mjs';\nimport { copyBoxInto } from '../geometry/copy.mjs';\nimport { translateAxis, transformBox, applyBoxDelta, applyTreeDeltas } from '../geometry/delta-apply.mjs';\nimport { calcRelativePosition, calcRelativeBox, calcBoxDelta, calcLength } from '../geometry/delta-calc.mjs';\nimport { removeBoxTransforms } from '../geometry/delta-remove.mjs';\nimport { createBox, createDelta } from '../geometry/models.mjs';\nimport { getValueTransition } from '../../animation/utils/transitions.mjs';\nimport { boxEquals, isDeltaZero, isCloseTo, aspectRatio } from '../geometry/utils.mjs';\nimport { NodeStack } from '../shared/stack.mjs';\nimport { scaleCorrectors } from '../styles/scale-correction.mjs';\nimport { buildProjectionTransform } from '../styles/transform.mjs';\nimport { eachAxis } from '../utils/each-axis.mjs';\nimport { hasTransform, hasScale } from '../utils/has-transform.mjs';\nimport { FlatTree } from '../../render/utils/flat-tree.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { globalProjectionState } from './state.mjs';\n\nconst transformAxes = [\"\", \"X\", \"Y\", \"Z\"];\n/**\n * We use 1000 as the animation target as 0-1000 maps better to pixels than 0-1\n * which has a noticeable difference in spring animations\n */\nconst animationTarget = 1000;\nfunction createProjectionNode({ attachResizeListener, defaultParent, measureScroll, checkIsScrollRoot, resetTransform, }) {\n    return class ProjectionNode {\n        constructor(id, latestValues = {}, parent = defaultParent === null || defaultParent === void 0 ? void 0 : defaultParent()) {\n            /**\n             * A Set containing all this component's children. This is used to iterate\n             * through the children.\n             *\n             * TODO: This could be faster to iterate as a flat array stored on the root node.\n             */\n            this.children = new Set();\n            /**\n             * Options for the node. We use this to configure what kind of layout animations\n             * we should perform (if any).\n             */\n            this.options = {};\n            /**\n             * We use this to detect when its safe to shut down part of a projection tree.\n             * We have to keep projecting children for scale correction and relative projection\n             * until all their parents stop performing layout animations.\n             */\n            this.isTreeAnimating = false;\n            this.isAnimationBlocked = false;\n            /**\n             * Flag to true if we think this layout has been changed. We can't always know this,\n             * currently we set it to true every time a component renders, or if it has a layoutDependency\n             * if that has changed between renders. Additionally, components can be grouped by LayoutGroup\n             * and if one node is dirtied, they all are.\n             */\n            this.isLayoutDirty = false;\n            /**\n             * Block layout updates for instant layout transitions throughout the tree.\n             */\n            this.updateManuallyBlocked = false;\n            this.updateBlockedByResize = false;\n            /**\n             * Set to true between the start of the first `willUpdate` call and the end of the `didUpdate`\n             * call.\n             */\n            this.isUpdating = false;\n            /**\n             * If this is an SVG element we currently disable projection transforms\n             */\n            this.isSVG = false;\n            /**\n             * Flag to true (during promotion) if a node doing an instant layout transition needs to reset\n             * its projection styles.\n             */\n            this.needsReset = false;\n            /**\n             * Flags whether this node should have its transform reset prior to measuring.\n             */\n            this.shouldResetTransform = false;\n            /**\n             * An object representing the calculated contextual/accumulated/tree scale.\n             * This will be used to scale calculcated projection transforms, as these are\n             * calculated in screen-space but need to be scaled for elements to actually\n             * make it to their calculated destinations.\n             *\n             * TODO: Lazy-init\n             */\n            this.treeScale = { x: 1, y: 1 };\n            /**\n             *\n             */\n            this.eventHandlers = new Map();\n            // Note: Currently only running on root node\n            this.potentialNodes = new Map();\n            this.checkUpdateFailed = () => {\n                if (this.isUpdating) {\n                    this.isUpdating = false;\n                    this.clearAllSnapshots();\n                }\n            };\n            this.updateProjection = () => {\n                this.nodes.forEach(resolveTargetDelta);\n                this.nodes.forEach(calcProjection);\n            };\n            this.hasProjected = false;\n            this.isVisible = true;\n            this.animationProgress = 0;\n            /**\n             * Shared layout\n             */\n            // TODO Only running on root node\n            this.sharedNodes = new Map();\n            this.id = id;\n            this.latestValues = latestValues;\n            this.root = parent ? parent.root || parent : this;\n            this.path = parent ? [...parent.path, parent] : [];\n            this.parent = parent;\n            this.depth = parent ? parent.depth + 1 : 0;\n            id && this.root.registerPotentialNode(id, this);\n            for (let i = 0; i < this.path.length; i++) {\n                this.path[i].shouldResetTransform = true;\n            }\n            if (this.root === this)\n                this.nodes = new FlatTree();\n        }\n        addEventListener(name, handler) {\n            if (!this.eventHandlers.has(name)) {\n                this.eventHandlers.set(name, new SubscriptionManager());\n            }\n            return this.eventHandlers.get(name).add(handler);\n        }\n        notifyListeners(name, ...args) {\n            const subscriptionManager = this.eventHandlers.get(name);\n            subscriptionManager === null || subscriptionManager === void 0 ? void 0 : subscriptionManager.notify(...args);\n        }\n        hasListeners(name) {\n            return this.eventHandlers.has(name);\n        }\n        registerPotentialNode(id, node) {\n            this.potentialNodes.set(id, node);\n        }\n        /**\n         * Lifecycles\n         */\n        mount(instance, isLayoutDirty = false) {\n            var _a;\n            if (this.instance)\n                return;\n            this.isSVG =\n                instance instanceof SVGElement && instance.tagName !== \"svg\";\n            this.instance = instance;\n            const { layoutId, layout, visualElement } = this.options;\n            if (visualElement && !visualElement.getInstance()) {\n                visualElement.mount(instance);\n            }\n            this.root.nodes.add(this);\n            (_a = this.parent) === null || _a === void 0 ? void 0 : _a.children.add(this);\n            this.id && this.root.potentialNodes.delete(this.id);\n            if (isLayoutDirty && (layout || layoutId)) {\n                this.isLayoutDirty = true;\n            }\n            if (attachResizeListener) {\n                let unblockTimeout;\n                const resizeUnblockUpdate = () => (this.root.updateBlockedByResize = false);\n                attachResizeListener(instance, () => {\n                    this.root.updateBlockedByResize = true;\n                    clearTimeout(unblockTimeout);\n                    unblockTimeout = window.setTimeout(resizeUnblockUpdate, 250);\n                    if (globalProjectionState.hasAnimatedSinceResize) {\n                        globalProjectionState.hasAnimatedSinceResize = false;\n                        this.nodes.forEach(finishAnimation);\n                    }\n                });\n            }\n            if (layoutId) {\n                this.root.registerSharedNode(layoutId, this);\n            }\n            // Only register the handler if it requires layout animation\n            if (this.options.animate !== false &&\n                visualElement &&\n                (layoutId || layout)) {\n                this.addEventListener(\"didUpdate\", ({ delta, hasLayoutChanged, hasRelativeTargetChanged, layout: newLayout, }) => {\n                    var _a, _b, _c, _d, _e;\n                    if (this.isTreeAnimationBlocked()) {\n                        this.target = undefined;\n                        this.relativeTarget = undefined;\n                        return;\n                    }\n                    // TODO: Check here if an animation exists\n                    const layoutTransition = (_b = (_a = this.options.transition) !== null && _a !== void 0 ? _a : visualElement.getDefaultTransition()) !== null && _b !== void 0 ? _b : defaultLayoutTransition;\n                    const { onLayoutAnimationStart, onLayoutAnimationComplete, } = visualElement.getProps();\n                    /**\n                     * The target layout of the element might stay the same,\n                     * but its position relative to its parent has changed.\n                     */\n                    const targetChanged = !this.targetLayout ||\n                        !boxEquals(this.targetLayout, newLayout) ||\n                        hasRelativeTargetChanged;\n                    /**\n                     * If the layout hasn't seemed to have changed, it might be that the\n                     * element is visually in the same place in the document but its position\n                     * relative to its parent has indeed changed. So here we check for that.\n                     */\n                    const hasOnlyRelativeTargetChanged = !hasLayoutChanged && hasRelativeTargetChanged;\n                    if (((_c = this.resumeFrom) === null || _c === void 0 ? void 0 : _c.instance) ||\n                        hasOnlyRelativeTargetChanged ||\n                        (hasLayoutChanged &&\n                            (targetChanged || !this.currentAnimation))) {\n                        if (this.resumeFrom) {\n                            this.resumingFrom = this.resumeFrom;\n                            this.resumingFrom.resumingFrom = undefined;\n                        }\n                        this.setAnimationOrigin(delta, hasOnlyRelativeTargetChanged);\n                        const animationOptions = {\n                            ...getValueTransition(layoutTransition, \"layout\"),\n                            onPlay: onLayoutAnimationStart,\n                            onComplete: onLayoutAnimationComplete,\n                        };\n                        if (visualElement.shouldReduceMotion) {\n                            animationOptions.delay = 0;\n                            animationOptions.type = false;\n                        }\n                        this.startAnimation(animationOptions);\n                    }\n                    else {\n                        /**\n                         * If the layout hasn't changed and we have an animation that hasn't started yet,\n                         * finish it immediately. Otherwise it will be animating from a location\n                         * that was probably never commited to screen and look like a jumpy box.\n                         */\n                        if (!hasLayoutChanged &&\n                            this.animationProgress === 0) {\n                            this.finishAnimation();\n                        }\n                        this.isLead() && ((_e = (_d = this.options).onExitComplete) === null || _e === void 0 ? void 0 : _e.call(_d));\n                    }\n                    this.targetLayout = newLayout;\n                });\n            }\n        }\n        unmount() {\n            var _a, _b;\n            this.options.layoutId && this.willUpdate();\n            this.root.nodes.remove(this);\n            (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.remove(this);\n            (_b = this.parent) === null || _b === void 0 ? void 0 : _b.children.delete(this);\n            this.instance = undefined;\n            cancelSync.preRender(this.updateProjection);\n        }\n        // only on the root\n        blockUpdate() {\n            this.updateManuallyBlocked = true;\n        }\n        unblockUpdate() {\n            this.updateManuallyBlocked = false;\n        }\n        isUpdateBlocked() {\n            return this.updateManuallyBlocked || this.updateBlockedByResize;\n        }\n        isTreeAnimationBlocked() {\n            var _a;\n            return (this.isAnimationBlocked ||\n                ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isTreeAnimationBlocked()) ||\n                false);\n        }\n        // Note: currently only running on root node\n        startUpdate() {\n            var _a;\n            if (this.isUpdateBlocked())\n                return;\n            this.isUpdating = true;\n            (_a = this.nodes) === null || _a === void 0 ? void 0 : _a.forEach(resetRotation);\n        }\n        willUpdate(shouldNotifyListeners = true) {\n            var _a, _b, _c;\n            if (this.root.isUpdateBlocked()) {\n                (_b = (_a = this.options).onExitComplete) === null || _b === void 0 ? void 0 : _b.call(_a);\n                return;\n            }\n            !this.root.isUpdating && this.root.startUpdate();\n            if (this.isLayoutDirty)\n                return;\n            this.isLayoutDirty = true;\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                node.shouldResetTransform = true;\n                /**\n                 * TODO: Check we haven't updated the scroll\n                 * since the last didUpdate\n                 */\n                node.updateScroll();\n            }\n            const { layoutId, layout } = this.options;\n            if (layoutId === undefined && !layout)\n                return;\n            const transformTemplate = (_c = this.options.visualElement) === null || _c === void 0 ? void 0 : _c.getProps().transformTemplate;\n            this.prevTransformTemplateValue = transformTemplate === null || transformTemplate === void 0 ? void 0 : transformTemplate(this.latestValues, \"\");\n            this.updateSnapshot();\n            shouldNotifyListeners && this.notifyListeners(\"willUpdate\");\n        }\n        // Note: Currently only running on root node\n        didUpdate() {\n            const updateWasBlocked = this.isUpdateBlocked();\n            // When doing an instant transition, we skip the layout update,\n            // but should still clean up the measurements so that the next\n            // snapshot could be taken correctly.\n            if (updateWasBlocked) {\n                this.unblockUpdate();\n                this.clearAllSnapshots();\n                this.nodes.forEach(clearMeasurements);\n                return;\n            }\n            if (!this.isUpdating)\n                return;\n            this.isUpdating = false;\n            /**\n             * Search for and mount newly-added projection elements.\n             *\n             * TODO: Every time a new component is rendered we could search up the tree for\n             * the closest mounted node and query from there rather than document.\n             */\n            if (this.potentialNodes.size) {\n                this.potentialNodes.forEach(mountNodeEarly);\n                this.potentialNodes.clear();\n            }\n            /**\n             * Write\n             */\n            this.nodes.forEach(resetTransformStyle);\n            /**\n             * Read ==================\n             */\n            // Update layout measurements of updated children\n            this.nodes.forEach(updateLayout);\n            /**\n             * Write\n             */\n            // Notify listeners that the layout is updated\n            this.nodes.forEach(notifyLayoutUpdate);\n            this.clearAllSnapshots();\n            // Flush any scheduled updates\n            flushSync.update();\n            flushSync.preRender();\n            flushSync.render();\n        }\n        clearAllSnapshots() {\n            this.nodes.forEach(clearSnapshot);\n            this.sharedNodes.forEach(removeLeadSnapshots);\n        }\n        scheduleUpdateProjection() {\n            sync.preRender(this.updateProjection, false, true);\n        }\n        scheduleCheckAfterUnmount() {\n            /**\n             * If the unmounting node is in a layoutGroup and did trigger a willUpdate,\n             * we manually call didUpdate to give a chance to the siblings to animate.\n             * Otherwise, cleanup all snapshots to prevents future nodes from reusing them.\n             */\n            sync.postRender(() => {\n                if (this.isLayoutDirty) {\n                    this.root.didUpdate();\n                }\n                else {\n                    this.root.checkUpdateFailed();\n                }\n            });\n        }\n        /**\n         * Update measurements\n         */\n        updateSnapshot() {\n            if (this.snapshot || !this.instance)\n                return;\n            const measured = this.measure();\n            const layout = this.removeTransform(this.removeElementScroll(measured));\n            roundBox(layout);\n            this.snapshot = {\n                measured,\n                layout,\n                latestValues: {},\n            };\n        }\n        updateLayout() {\n            var _a;\n            if (!this.instance)\n                return;\n            // TODO: Incorporate into a forwarded scroll offset\n            this.updateScroll();\n            if (!(this.options.alwaysMeasureLayout && this.isLead()) &&\n                !this.isLayoutDirty) {\n                return;\n            }\n            /**\n             * When a node is mounted, it simply resumes from the prevLead's\n             * snapshot instead of taking a new one, but the ancestors scroll\n             * might have updated while the prevLead is unmounted. We need to\n             * update the scroll again to make sure the layout we measure is\n             * up to date.\n             */\n            if (this.resumeFrom && !this.resumeFrom.instance) {\n                for (let i = 0; i < this.path.length; i++) {\n                    const node = this.path[i];\n                    node.updateScroll();\n                }\n            }\n            const measured = this.measure();\n            roundBox(measured);\n            const prevLayout = this.layout;\n            this.layout = {\n                measured,\n                actual: this.removeElementScroll(measured),\n            };\n            this.layoutCorrected = createBox();\n            this.isLayoutDirty = false;\n            this.projectionDelta = undefined;\n            this.notifyListeners(\"measure\", this.layout.actual);\n            (_a = this.options.visualElement) === null || _a === void 0 ? void 0 : _a.notifyLayoutMeasure(this.layout.actual, prevLayout === null || prevLayout === void 0 ? void 0 : prevLayout.actual);\n        }\n        updateScroll() {\n            if (this.options.layoutScroll && this.instance) {\n                this.isScrollRoot = checkIsScrollRoot(this.instance);\n                this.scroll = measureScroll(this.instance);\n            }\n        }\n        resetTransform() {\n            var _a;\n            if (!resetTransform)\n                return;\n            const isResetRequested = this.isLayoutDirty || this.shouldResetTransform;\n            const hasProjection = this.projectionDelta && !isDeltaZero(this.projectionDelta);\n            const transformTemplate = (_a = this.options.visualElement) === null || _a === void 0 ? void 0 : _a.getProps().transformTemplate;\n            const transformTemplateValue = transformTemplate === null || transformTemplate === void 0 ? void 0 : transformTemplate(this.latestValues, \"\");\n            const transformTemplateHasChanged = transformTemplateValue !== this.prevTransformTemplateValue;\n            if (isResetRequested &&\n                (hasProjection ||\n                    hasTransform(this.latestValues) ||\n                    transformTemplateHasChanged)) {\n                resetTransform(this.instance, transformTemplateValue);\n                this.shouldResetTransform = false;\n                this.scheduleRender();\n            }\n        }\n        measure() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return createBox();\n            const box = visualElement.measureViewportBox();\n            // Remove viewport scroll to give page-relative coordinates\n            const { scroll } = this.root;\n            if (scroll) {\n                translateAxis(box.x, scroll.x);\n                translateAxis(box.y, scroll.y);\n            }\n            return box;\n        }\n        removeElementScroll(box) {\n            const boxWithoutScroll = createBox();\n            copyBoxInto(boxWithoutScroll, box);\n            /**\n             * Performance TODO: Keep a cumulative scroll offset down the tree\n             * rather than loop back up the path.\n             */\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                const { scroll, options, isScrollRoot } = node;\n                if (node !== this.root && scroll && options.layoutScroll) {\n                    /**\n                     * If this is a new scroll root, we want to remove all previous scrolls\n                     * from the viewport box.\n                     */\n                    if (isScrollRoot) {\n                        copyBoxInto(boxWithoutScroll, box);\n                        const { scroll: rootScroll } = this.root;\n                        /**\n                         * Undo the application of page scroll that was originally added\n                         * to the measured bounding box.\n                         */\n                        if (rootScroll) {\n                            translateAxis(boxWithoutScroll.x, -rootScroll.x);\n                            translateAxis(boxWithoutScroll.y, -rootScroll.y);\n                        }\n                    }\n                    translateAxis(boxWithoutScroll.x, scroll.x);\n                    translateAxis(boxWithoutScroll.y, scroll.y);\n                }\n            }\n            return boxWithoutScroll;\n        }\n        applyTransform(box, transformOnly = false) {\n            const withTransforms = createBox();\n            copyBoxInto(withTransforms, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!transformOnly &&\n                    node.options.layoutScroll &&\n                    node.scroll &&\n                    node !== node.root) {\n                    transformBox(withTransforms, {\n                        x: -node.scroll.x,\n                        y: -node.scroll.y,\n                    });\n                }\n                if (!hasTransform(node.latestValues))\n                    continue;\n                transformBox(withTransforms, node.latestValues);\n            }\n            if (hasTransform(this.latestValues)) {\n                transformBox(withTransforms, this.latestValues);\n            }\n            return withTransforms;\n        }\n        removeTransform(box) {\n            var _a;\n            const boxWithoutTransform = createBox();\n            copyBoxInto(boxWithoutTransform, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!node.instance)\n                    continue;\n                if (!hasTransform(node.latestValues))\n                    continue;\n                hasScale(node.latestValues) && node.updateSnapshot();\n                const sourceBox = createBox();\n                const nodeBox = node.measure();\n                copyBoxInto(sourceBox, nodeBox);\n                removeBoxTransforms(boxWithoutTransform, node.latestValues, (_a = node.snapshot) === null || _a === void 0 ? void 0 : _a.layout, sourceBox);\n            }\n            if (hasTransform(this.latestValues)) {\n                removeBoxTransforms(boxWithoutTransform, this.latestValues);\n            }\n            return boxWithoutTransform;\n        }\n        /**\n         *\n         */\n        setTargetDelta(delta) {\n            this.targetDelta = delta;\n            this.root.scheduleUpdateProjection();\n        }\n        setOptions(options) {\n            this.options = {\n                ...this.options,\n                ...options,\n                crossfade: options.crossfade !== undefined ? options.crossfade : true,\n            };\n        }\n        clearMeasurements() {\n            this.scroll = undefined;\n            this.layout = undefined;\n            this.snapshot = undefined;\n            this.prevTransformTemplateValue = undefined;\n            this.targetDelta = undefined;\n            this.target = undefined;\n            this.isLayoutDirty = false;\n        }\n        /**\n         * Frame calculations\n         */\n        resolveTargetDelta() {\n            var _a;\n            const { layout, layoutId } = this.options;\n            /**\n             * If we have no layout, we can't perform projection, so early return\n             */\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * If we don't have a targetDelta but do have a layout, we can attempt to resolve\n             * a relativeParent. This will allow a component to perform scale correction\n             * even if no animation has started.\n             */\n            // TODO If this is unsuccessful this currently happens every frame\n            if (!this.targetDelta && !this.relativeTarget) {\n                // TODO: This is a semi-repetition of further down this function, make DRY\n                this.relativeParent = this.getClosestProjectingParent();\n                if (this.relativeParent && this.relativeParent.layout) {\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.layout.actual, this.relativeParent.layout.actual);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n            }\n            /**\n             * If we have no relative target or no target delta our target isn't valid\n             * for this frame.\n             */\n            if (!this.relativeTarget && !this.targetDelta)\n                return;\n            /**\n             * Lazy-init target data structure\n             */\n            if (!this.target) {\n                this.target = createBox();\n                this.targetWithTransforms = createBox();\n            }\n            /**\n             * If we've got a relative box for this component, resolve it into a target relative to the parent.\n             */\n            if (this.relativeTarget &&\n                this.relativeTargetOrigin &&\n                ((_a = this.relativeParent) === null || _a === void 0 ? void 0 : _a.target)) {\n                calcRelativeBox(this.target, this.relativeTarget, this.relativeParent.target);\n                /**\n                 * If we've only got a targetDelta, resolve it into a target\n                 */\n            }\n            else if (this.targetDelta) {\n                if (Boolean(this.resumingFrom)) {\n                    // TODO: This is creating a new object every frame\n                    this.target = this.applyTransform(this.layout.actual);\n                }\n                else {\n                    copyBoxInto(this.target, this.layout.actual);\n                }\n                applyBoxDelta(this.target, this.targetDelta);\n            }\n            else {\n                /**\n                 * If no target, use own layout as target\n                 */\n                copyBoxInto(this.target, this.layout.actual);\n            }\n            /**\n             * If we've been told to attempt to resolve a relative target, do so.\n             */\n            if (this.attemptToResolveRelativeTarget) {\n                this.attemptToResolveRelativeTarget = false;\n                this.relativeParent = this.getClosestProjectingParent();\n                if (this.relativeParent &&\n                    Boolean(this.relativeParent.resumingFrom) ===\n                        Boolean(this.resumingFrom) &&\n                    !this.relativeParent.options.layoutScroll &&\n                    this.relativeParent.target) {\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.target, this.relativeParent.target);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n            }\n        }\n        getClosestProjectingParent() {\n            if (!this.parent || hasTransform(this.parent.latestValues))\n                return undefined;\n            if ((this.parent.relativeTarget || this.parent.targetDelta) &&\n                this.parent.layout) {\n                return this.parent;\n            }\n            else {\n                return this.parent.getClosestProjectingParent();\n            }\n        }\n        calcProjection() {\n            var _a;\n            const { layout, layoutId } = this.options;\n            /**\n             * If this section of the tree isn't animating we can\n             * delete our target sources for the following frame.\n             */\n            this.isTreeAnimating = Boolean(((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isTreeAnimating) ||\n                this.currentAnimation ||\n                this.pendingAnimation);\n            if (!this.isTreeAnimating) {\n                this.targetDelta = this.relativeTarget = undefined;\n            }\n            if (!this.layout || !(layout || layoutId))\n                return;\n            const lead = this.getLead();\n            /**\n             * Reset the corrected box with the latest values from box, as we're then going\n             * to perform mutative operations on it.\n             */\n            copyBoxInto(this.layoutCorrected, this.layout.actual);\n            /**\n             * Apply all the parent deltas to this box to produce the corrected box. This\n             * is the layout box, as it will appear on screen as a result of the transforms of its parents.\n             */\n            applyTreeDeltas(this.layoutCorrected, this.treeScale, this.path, Boolean(this.resumingFrom) || this !== lead);\n            const { target } = lead;\n            if (!target)\n                return;\n            if (!this.projectionDelta) {\n                this.projectionDelta = createDelta();\n                this.projectionDeltaWithTransform = createDelta();\n            }\n            const prevTreeScaleX = this.treeScale.x;\n            const prevTreeScaleY = this.treeScale.y;\n            const prevProjectionTransform = this.projectionTransform;\n            /**\n             * Update the delta between the corrected box and the target box before user-set transforms were applied.\n             * This will allow us to calculate the corrected borderRadius and boxShadow to compensate\n             * for our layout reprojection, but still allow them to be scaled correctly by the user.\n             * It might be that to simplify this we may want to accept that user-set scale is also corrected\n             * and we wouldn't have to keep and calc both deltas, OR we could support a user setting\n             * to allow people to choose whether these styles are corrected based on just the\n             * layout reprojection or the final bounding box.\n             */\n            calcBoxDelta(this.projectionDelta, this.layoutCorrected, target, this.latestValues);\n            this.projectionTransform = buildProjectionTransform(this.projectionDelta, this.treeScale);\n            if (this.projectionTransform !== prevProjectionTransform ||\n                this.treeScale.x !== prevTreeScaleX ||\n                this.treeScale.y !== prevTreeScaleY) {\n                this.hasProjected = true;\n                this.scheduleRender();\n                this.notifyListeners(\"projectionUpdate\", target);\n            }\n        }\n        hide() {\n            this.isVisible = false;\n            // TODO: Schedule render\n        }\n        show() {\n            this.isVisible = true;\n            // TODO: Schedule render\n        }\n        scheduleRender(notifyAll = true) {\n            var _a, _b, _c;\n            (_b = (_a = this.options).scheduleRender) === null || _b === void 0 ? void 0 : _b.call(_a);\n            notifyAll && ((_c = this.getStack()) === null || _c === void 0 ? void 0 : _c.scheduleRender());\n            if (this.resumingFrom && !this.resumingFrom.instance) {\n                this.resumingFrom = undefined;\n            }\n        }\n        setAnimationOrigin(delta, hasOnlyRelativeTargetChanged = false) {\n            var _a;\n            const snapshot = this.snapshot;\n            const snapshotLatestValues = (snapshot === null || snapshot === void 0 ? void 0 : snapshot.latestValues) || {};\n            const mixedValues = { ...this.latestValues };\n            const targetDelta = createDelta();\n            this.relativeTarget = this.relativeTargetOrigin = undefined;\n            this.attemptToResolveRelativeTarget = !hasOnlyRelativeTargetChanged;\n            const relativeLayout = createBox();\n            const isSharedLayoutAnimation = snapshot === null || snapshot === void 0 ? void 0 : snapshot.isShared;\n            const isOnlyMember = (((_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.members.length) || 0) <= 1;\n            const shouldCrossfadeOpacity = Boolean(isSharedLayoutAnimation &&\n                !isOnlyMember &&\n                this.options.crossfade === true &&\n                !this.path.some(hasOpacityCrossfade));\n            this.animationProgress = 0;\n            this.mixTargetDelta = (latest) => {\n                var _a;\n                const progress = latest / 1000;\n                mixAxisDelta(targetDelta.x, delta.x, progress);\n                mixAxisDelta(targetDelta.y, delta.y, progress);\n                this.setTargetDelta(targetDelta);\n                if (this.relativeTarget &&\n                    this.relativeTargetOrigin &&\n                    this.layout &&\n                    ((_a = this.relativeParent) === null || _a === void 0 ? void 0 : _a.layout)) {\n                    calcRelativePosition(relativeLayout, this.layout.actual, this.relativeParent.layout.actual);\n                    mixBox(this.relativeTarget, this.relativeTargetOrigin, relativeLayout, progress);\n                }\n                if (isSharedLayoutAnimation) {\n                    this.animationValues = mixedValues;\n                    mixValues(mixedValues, snapshotLatestValues, this.latestValues, progress, shouldCrossfadeOpacity, isOnlyMember);\n                }\n                this.root.scheduleUpdateProjection();\n                this.scheduleRender();\n                this.animationProgress = progress;\n            };\n            this.mixTargetDelta(0);\n        }\n        startAnimation(options) {\n            var _a, _b;\n            this.notifyListeners(\"animationStart\");\n            (_a = this.currentAnimation) === null || _a === void 0 ? void 0 : _a.stop();\n            if (this.resumingFrom) {\n                (_b = this.resumingFrom.currentAnimation) === null || _b === void 0 ? void 0 : _b.stop();\n            }\n            if (this.pendingAnimation) {\n                cancelSync.update(this.pendingAnimation);\n                this.pendingAnimation = undefined;\n            }\n            /**\n             * Start the animation in the next frame to have a frame with progress 0,\n             * where the target is the same as when the animation started, so we can\n             * calculate the relative positions correctly for instant transitions.\n             */\n            this.pendingAnimation = sync.update(() => {\n                globalProjectionState.hasAnimatedSinceResize = true;\n                this.currentAnimation = animate(0, animationTarget, {\n                    ...options,\n                    onUpdate: (latest) => {\n                        var _a;\n                        this.mixTargetDelta(latest);\n                        (_a = options.onUpdate) === null || _a === void 0 ? void 0 : _a.call(options, latest);\n                    },\n                    onComplete: () => {\n                        var _a;\n                        (_a = options.onComplete) === null || _a === void 0 ? void 0 : _a.call(options);\n                        this.completeAnimation();\n                    },\n                });\n                if (this.resumingFrom) {\n                    this.resumingFrom.currentAnimation = this.currentAnimation;\n                }\n                this.pendingAnimation = undefined;\n            });\n        }\n        completeAnimation() {\n            var _a;\n            if (this.resumingFrom) {\n                this.resumingFrom.currentAnimation = undefined;\n                this.resumingFrom.preserveOpacity = undefined;\n            }\n            (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.exitAnimationComplete();\n            this.resumingFrom =\n                this.currentAnimation =\n                    this.animationValues =\n                        undefined;\n            this.notifyListeners(\"animationComplete\");\n        }\n        finishAnimation() {\n            var _a;\n            if (this.currentAnimation) {\n                (_a = this.mixTargetDelta) === null || _a === void 0 ? void 0 : _a.call(this, animationTarget);\n                this.currentAnimation.stop();\n            }\n            this.completeAnimation();\n        }\n        applyTransformsToTarget() {\n            const lead = this.getLead();\n            let { targetWithTransforms, target, layout, latestValues } = lead;\n            if (!targetWithTransforms || !target || !layout)\n                return;\n            /**\n             * If we're only animating position, and this element isn't the lead element,\n             * then instead of projecting into the lead box we instead want to calculate\n             * a new target that aligns the two boxes but maintains the layout shape.\n             */\n            if (this !== lead &&\n                this.layout &&\n                layout &&\n                shouldAnimatePositionOnly(this.options.animationType, this.layout.actual, layout.actual)) {\n                target = this.target || createBox();\n                const xLength = calcLength(this.layout.actual.x);\n                target.x.min = lead.target.x.min;\n                target.x.max = target.x.min + xLength;\n                const yLength = calcLength(this.layout.actual.y);\n                target.y.min = lead.target.y.min;\n                target.y.max = target.y.min + yLength;\n            }\n            copyBoxInto(targetWithTransforms, target);\n            /**\n             * Apply the latest user-set transforms to the targetBox to produce the targetBoxFinal.\n             * This is the final box that we will then project into by calculating a transform delta and\n             * applying it to the corrected box.\n             */\n            transformBox(targetWithTransforms, latestValues);\n            /**\n             * Update the delta between the corrected box and the final target box, after\n             * user-set transforms are applied to it. This will be used by the renderer to\n             * create a transform style that will reproject the element from its actual layout\n             * into the desired bounding box.\n             */\n            calcBoxDelta(this.projectionDeltaWithTransform, this.layoutCorrected, targetWithTransforms, latestValues);\n        }\n        registerSharedNode(layoutId, node) {\n            var _a, _b, _c;\n            if (!this.sharedNodes.has(layoutId)) {\n                this.sharedNodes.set(layoutId, new NodeStack());\n            }\n            const stack = this.sharedNodes.get(layoutId);\n            stack.add(node);\n            node.promote({\n                transition: (_a = node.options.initialPromotionConfig) === null || _a === void 0 ? void 0 : _a.transition,\n                preserveFollowOpacity: (_c = (_b = node.options.initialPromotionConfig) === null || _b === void 0 ? void 0 : _b.shouldPreserveFollowOpacity) === null || _c === void 0 ? void 0 : _c.call(_b, node),\n            });\n        }\n        isLead() {\n            const stack = this.getStack();\n            return stack ? stack.lead === this : true;\n        }\n        getLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? ((_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.lead) || this : this;\n        }\n        getPrevLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.prevLead : undefined;\n        }\n        getStack() {\n            const { layoutId } = this.options;\n            if (layoutId)\n                return this.root.sharedNodes.get(layoutId);\n        }\n        promote({ needsReset, transition, preserveFollowOpacity, } = {}) {\n            const stack = this.getStack();\n            if (stack)\n                stack.promote(this, preserveFollowOpacity);\n            if (needsReset) {\n                this.projectionDelta = undefined;\n                this.needsReset = true;\n            }\n            if (transition)\n                this.setOptions({ transition });\n        }\n        relegate() {\n            const stack = this.getStack();\n            if (stack) {\n                return stack.relegate(this);\n            }\n            else {\n                return false;\n            }\n        }\n        resetRotation() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return;\n            // If there's no detected rotation values, we can early return without a forced render.\n            let hasRotate = false;\n            // Keep a record of all the values we've reset\n            const resetValues = {};\n            // Check the rotate value of all axes and reset to 0\n            for (let i = 0; i < transformAxes.length; i++) {\n                const axis = transformAxes[i];\n                const key = \"rotate\" + axis;\n                // If this rotation doesn't exist as a motion value, then we don't\n                // need to reset it\n                if (!visualElement.getStaticValue(key)) {\n                    continue;\n                }\n                hasRotate = true;\n                // Record the rotation and then temporarily set it to 0\n                resetValues[key] = visualElement.getStaticValue(key);\n                visualElement.setStaticValue(key, 0);\n            }\n            // If there's no rotation values, we don't need to do any more.\n            if (!hasRotate)\n                return;\n            // Force a render of this element to apply the transform with all rotations\n            // set to 0.\n            visualElement === null || visualElement === void 0 ? void 0 : visualElement.syncRender();\n            // Put back all the values we reset\n            for (const key in resetValues) {\n                visualElement.setStaticValue(key, resetValues[key]);\n            }\n            // Schedule a render for the next frame. This ensures we won't visually\n            // see the element with the reset rotate value applied.\n            visualElement.scheduleRender();\n        }\n        getProjectionStyles(styleProp = {}) {\n            var _a, _b, _c;\n            // TODO: Return lifecycle-persistent object\n            const styles = {};\n            if (!this.instance || this.isSVG)\n                return styles;\n            if (!this.isVisible) {\n                return { visibility: \"hidden\" };\n            }\n            else {\n                styles.visibility = \"\";\n            }\n            const transformTemplate = (_a = this.options.visualElement) === null || _a === void 0 ? void 0 : _a.getProps().transformTemplate;\n            if (this.needsReset) {\n                this.needsReset = false;\n                styles.opacity = \"\";\n                styles.pointerEvents =\n                    resolveMotionValue(styleProp.pointerEvents) || \"\";\n                styles.transform = transformTemplate\n                    ? transformTemplate(this.latestValues, \"\")\n                    : \"none\";\n                return styles;\n            }\n            const lead = this.getLead();\n            if (!this.projectionDelta || !this.layout || !lead.target) {\n                const emptyStyles = {};\n                if (this.options.layoutId) {\n                    emptyStyles.opacity =\n                        this.latestValues.opacity !== undefined\n                            ? this.latestValues.opacity\n                            : 1;\n                    emptyStyles.pointerEvents =\n                        resolveMotionValue(styleProp.pointerEvents) || \"\";\n                }\n                if (this.hasProjected && !hasTransform(this.latestValues)) {\n                    emptyStyles.transform = transformTemplate\n                        ? transformTemplate({}, \"\")\n                        : \"none\";\n                    this.hasProjected = false;\n                }\n                return emptyStyles;\n            }\n            const valuesToRender = lead.animationValues || lead.latestValues;\n            this.applyTransformsToTarget();\n            styles.transform = buildProjectionTransform(this.projectionDeltaWithTransform, this.treeScale, valuesToRender);\n            if (transformTemplate) {\n                styles.transform = transformTemplate(valuesToRender, styles.transform);\n            }\n            const { x, y } = this.projectionDelta;\n            styles.transformOrigin = `${x.origin * 100}% ${y.origin * 100}% 0`;\n            if (lead.animationValues) {\n                /**\n                 * If the lead component is animating, assign this either the entering/leaving\n                 * opacity\n                 */\n                styles.opacity =\n                    lead === this\n                        ? (_c = (_b = valuesToRender.opacity) !== null && _b !== void 0 ? _b : this.latestValues.opacity) !== null && _c !== void 0 ? _c : 1\n                        : this.preserveOpacity\n                            ? this.latestValues.opacity\n                            : valuesToRender.opacityExit;\n            }\n            else {\n                /**\n                 * Or we're not animating at all, set the lead component to its actual\n                 * opacity and other components to hidden.\n                 */\n                styles.opacity =\n                    lead === this\n                        ? valuesToRender.opacity !== undefined\n                            ? valuesToRender.opacity\n                            : \"\"\n                        : valuesToRender.opacityExit !== undefined\n                            ? valuesToRender.opacityExit\n                            : 0;\n            }\n            /**\n             * Apply scale correction\n             */\n            for (const key in scaleCorrectors) {\n                if (valuesToRender[key] === undefined)\n                    continue;\n                const { correct, applyTo } = scaleCorrectors[key];\n                const corrected = correct(valuesToRender[key], lead);\n                if (applyTo) {\n                    const num = applyTo.length;\n                    for (let i = 0; i < num; i++) {\n                        styles[applyTo[i]] = corrected;\n                    }\n                }\n                else {\n                    styles[key] = corrected;\n                }\n            }\n            /**\n             * Disable pointer events on follow components. This is to ensure\n             * that if a follow component covers a lead component it doesn't block\n             * pointer events on the lead.\n             */\n            if (this.options.layoutId) {\n                styles.pointerEvents =\n                    lead === this\n                        ? resolveMotionValue(styleProp.pointerEvents) || \"\"\n                        : \"none\";\n            }\n            return styles;\n        }\n        clearSnapshot() {\n            this.resumeFrom = this.snapshot = undefined;\n        }\n        // Only run on root\n        resetTree() {\n            this.root.nodes.forEach((node) => { var _a; return (_a = node.currentAnimation) === null || _a === void 0 ? void 0 : _a.stop(); });\n            this.root.nodes.forEach(clearMeasurements);\n            this.root.sharedNodes.clear();\n        }\n    };\n}\nfunction updateLayout(node) {\n    node.updateLayout();\n}\nfunction notifyLayoutUpdate(node) {\n    var _a, _b, _c;\n    const snapshot = ((_a = node.resumeFrom) === null || _a === void 0 ? void 0 : _a.snapshot) || node.snapshot;\n    if (node.isLead() &&\n        node.layout &&\n        snapshot &&\n        node.hasListeners(\"didUpdate\")) {\n        const { actual: layout, measured: measuredLayout } = node.layout;\n        const { animationType } = node.options;\n        // TODO Maybe we want to also resize the layout snapshot so we don't trigger\n        // animations for instance if layout=\"size\" and an element has only changed position\n        if (animationType === \"size\") {\n            eachAxis((axis) => {\n                const axisSnapshot = snapshot.isShared\n                    ? snapshot.measured[axis]\n                    : snapshot.layout[axis];\n                const length = calcLength(axisSnapshot);\n                axisSnapshot.min = layout[axis].min;\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        else if (shouldAnimatePositionOnly(animationType, snapshot.layout, layout)) {\n            eachAxis((axis) => {\n                const axisSnapshot = snapshot.isShared\n                    ? snapshot.measured[axis]\n                    : snapshot.layout[axis];\n                const length = calcLength(layout[axis]);\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        const layoutDelta = createDelta();\n        calcBoxDelta(layoutDelta, layout, snapshot.layout);\n        const visualDelta = createDelta();\n        if (snapshot.isShared) {\n            calcBoxDelta(visualDelta, node.applyTransform(measuredLayout, true), snapshot.measured);\n        }\n        else {\n            calcBoxDelta(visualDelta, layout, snapshot.layout);\n        }\n        const hasLayoutChanged = !isDeltaZero(layoutDelta);\n        let hasRelativeTargetChanged = false;\n        if (!node.resumeFrom) {\n            node.relativeParent = node.getClosestProjectingParent();\n            /**\n             * If the relativeParent is itself resuming from a different element then\n             * the relative snapshot is not relavent\n             */\n            if (node.relativeParent && !node.relativeParent.resumeFrom) {\n                const { snapshot: parentSnapshot, layout: parentLayout } = node.relativeParent;\n                if (parentSnapshot && parentLayout) {\n                    const relativeSnapshot = createBox();\n                    calcRelativePosition(relativeSnapshot, snapshot.layout, parentSnapshot.layout);\n                    const relativeLayout = createBox();\n                    calcRelativePosition(relativeLayout, layout, parentLayout.actual);\n                    if (!boxEquals(relativeSnapshot, relativeLayout)) {\n                        hasRelativeTargetChanged = true;\n                    }\n                }\n            }\n        }\n        node.notifyListeners(\"didUpdate\", {\n            layout,\n            snapshot,\n            delta: visualDelta,\n            layoutDelta,\n            hasLayoutChanged,\n            hasRelativeTargetChanged,\n        });\n    }\n    else if (node.isLead()) {\n        (_c = (_b = node.options).onExitComplete) === null || _c === void 0 ? void 0 : _c.call(_b);\n    }\n    /**\n     * Clearing transition\n     * TODO: Investigate why this transition is being passed in as {type: false } from Framer\n     * and why we need it at all\n     */\n    node.options.transition = undefined;\n}\nfunction clearSnapshot(node) {\n    node.clearSnapshot();\n}\nfunction clearMeasurements(node) {\n    node.clearMeasurements();\n}\nfunction resetTransformStyle(node) {\n    const { visualElement } = node.options;\n    if (visualElement === null || visualElement === void 0 ? void 0 : visualElement.getProps().onBeforeLayoutMeasure) {\n        visualElement.notifyBeforeLayoutMeasure();\n    }\n    node.resetTransform();\n}\nfunction finishAnimation(node) {\n    node.finishAnimation();\n    node.targetDelta = node.relativeTarget = node.target = undefined;\n}\nfunction resolveTargetDelta(node) {\n    node.resolveTargetDelta();\n}\nfunction calcProjection(node) {\n    node.calcProjection();\n}\nfunction resetRotation(node) {\n    node.resetRotation();\n}\nfunction removeLeadSnapshots(stack) {\n    stack.removeLeadSnapshot();\n}\nfunction mixAxisDelta(output, delta, p) {\n    output.translate = mix(delta.translate, 0, p);\n    output.scale = mix(delta.scale, 1, p);\n    output.origin = delta.origin;\n    output.originPoint = delta.originPoint;\n}\nfunction mixAxis(output, from, to, p) {\n    output.min = mix(from.min, to.min, p);\n    output.max = mix(from.max, to.max, p);\n}\nfunction mixBox(output, from, to, p) {\n    mixAxis(output.x, from.x, to.x, p);\n    mixAxis(output.y, from.y, to.y, p);\n}\nfunction hasOpacityCrossfade(node) {\n    return (node.animationValues && node.animationValues.opacityExit !== undefined);\n}\nconst defaultLayoutTransition = {\n    duration: 0.45,\n    ease: [0.4, 0, 0.1, 1],\n};\nfunction mountNodeEarly(node, id) {\n    /**\n     * Rather than searching the DOM from document we can search the\n     * path for the deepest mounted ancestor and search from there\n     */\n    let searchNode = node.root;\n    for (let i = node.path.length - 1; i >= 0; i--) {\n        if (Boolean(node.path[i].instance)) {\n            searchNode = node.path[i];\n            break;\n        }\n    }\n    const searchElement = searchNode && searchNode !== node.root ? searchNode.instance : document;\n    const element = searchElement.querySelector(`[data-projection-id=\"${id}\"]`);\n    if (element)\n        node.mount(element, true);\n}\nfunction roundAxis(axis) {\n    axis.min = Math.round(axis.min);\n    axis.max = Math.round(axis.max);\n}\nfunction roundBox(box) {\n    roundAxis(box.x);\n    roundAxis(box.y);\n}\nfunction shouldAnimatePositionOnly(animationType, snapshot, layout) {\n    return (animationType === \"position\" ||\n        (animationType === \"preserve-aspect\" &&\n            !isCloseTo(aspectRatio(snapshot), aspectRatio(layout), 0.2)));\n}\n\nexport { createProjectionNode, mixAxis, mixAxisDelta, mixBox };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { addDomEvent } from '../../events/use-dom-event.mjs';\n\nconst DocumentProjectionNode = createProjectionNode({\n    attachResizeListener: (ref, notify) => addDomEvent(ref, \"resize\", notify),\n    measureScroll: () => ({\n        x: document.documentElement.scrollLeft || document.body.scrollLeft,\n        y: document.documentElement.scrollTop || document.body.scrollTop,\n    }),\n    checkIsScrollRoot: () => true,\n});\n\nexport { DocumentProjectionNode };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { DocumentProjectionNode } from './DocumentProjectionNode.mjs';\n\nconst rootProjectionNode = {\n    current: undefined,\n};\nconst HTMLProjectionNode = createProjectionNode({\n    measureScroll: (instance) => ({\n        x: instance.scrollLeft,\n        y: instance.scrollTop,\n    }),\n    defaultParent: () => {\n        if (!rootProjectionNode.current) {\n            const documentNode = new DocumentProjectionNode(0, {});\n            documentNode.mount(window);\n            documentNode.setOptions({ layoutScroll: true });\n            rootProjectionNode.current = documentNode;\n        }\n        return rootProjectionNode.current;\n    },\n    resetTransform: (instance, value) => {\n        instance.style.transform = value !== undefined ? value : \"none\";\n    },\n    checkIsScrollRoot: (instance) => Boolean(window.getComputedStyle(instance).position === \"fixed\"),\n});\n\nexport { HTMLProjectionNode, rootProjectionNode };\n","import { drag } from '../../motion/features/drag.mjs';\nimport { layoutFeatures } from '../../motion/features/layout/index.mjs';\nimport { domAnimation } from './features-animation.mjs';\nimport { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\n\n/**\n * @public\n */\nconst domMax = {\n    ...domAnimation,\n    ...drag,\n    ...layoutFeatures,\n    projectionNodeConstructor: HTMLProjectionNode,\n};\n\nexport { domMax };\n"],"names":["isMouseEvent","event","PointerEvent","pointerType","MouseEvent","isTouchEvent","touches","filterPrimaryPointer","eventHandler","button","defaultPagePoint","pageX","pageY","pointFromTouch","e","pointType","primaryTouch","changedTouches","point","x","y","pointFromMouse","extractEventInfo","wrapHandler","handler","shouldFilterPrimaryPointer","listener","secondsToMilliseconds","seconds","addDomEvent","target","eventName","options","passive","addEventListener","removeEventListener","useDomEvent","ref","useEffect","element","current","mouseEventNames","pointerdown","pointermove","pointerup","pointercancel","pointerover","pointerout","pointerenter","pointerleave","touchEventNames","getPointerEventName","name","isBrowser","window","onpointerdown","ontouchstart","onmousedown","addPointerEvent","usePointerEvent","isPoint","hasOwnProperty","isPoint3D","isNum","v","distance1D","a","b","Math","abs","distance","xDelta","yDelta","zDelta","z","sqrt","pow","combineFunctions","pipe","transformers","reduce","PanSession","handlers","transformPagePoint","this","startEvent","lastMoveEvent","lastMoveEventInfo","updatePoint","info","getPanInfo","history","isPanStarted","isDistancePastThreshold","offset","timestamp","getFrameData","push","onStart","onMove","handlePointerMove","transformPoint","buttons","handlePointerUp","sync","end","onEnd","onSessionEnd","panInfo","length","initialInfo","onSessionStart","removeListeners","cancelSync","subtractPoint","delta","lastDevicePoint","startDevicePoint","velocity","getVelocity","timeDelta","i","timestampedPoint","lastPoint","time","currentVelocity","Infinity","createLock","lock","globalHorizontalLock","globalVerticalLock","getGlobalLock","drag","openHorizontal","openVertical","isDragActive","openGestureLock","mix","from","to","progress","value","toFromDifference","clamp","min","max","calcLength","axis","isNear","maxDistance","calcAxisDelta","source","origin","originPoint","scale","isNaN","translate","calcBoxDelta","originX","originY","calcRelativeAxis","relative","parent","calcRelativeAxisPosition","layout","calcRelativePosition","calcRelativeAxisConstraints","undefined","calcViewportAxisConstraints","layoutAxis","constraintsAxis","AnimationType","defaultElastic","resolveAxisElastic","dragElastic","minLabel","maxLabel","resolvePointElastic","label","_a","eachAxis","callback","convertBoundingBoxToBox","top","left","right","bottom","isIdentityScale","hasScale","scaleX","scaleY","hasTransform","values","hasTranslate","rotate","rotateX","rotateY","scalePoint","applyPointDelta","boxScale","applyAxisDelta","applyBoxDelta","box","translateAxis","transformAxis","transforms","key","scaleKey","originKey","axisOrigin","xKeys","yKeys","transformBox","transform","measureViewportBox","instance","topLeft","bottomRight","transformBoxPoints","getBoundingClientRect","safeMin","findSpring","envelope","derivative","duration","bounce","mass","dampingRatio","undampedFreq","exponentialDecay","calcAngularFreq","c","exp","d","f","g","initialGuess","result","approximateRoot","stiffness","damping","durationKeys","physicsKeys","isSpringType","keys","some","spring","restSpeed","restDelta","__rest","state","done","springOptions","Object","assign","isResolvedFromDuration","derived","getSpringOptions","resolveSpring","zero","resolveVelocity","createSpring","initialVelocity","initialDelta","undampedAngularFreq","angularFreq","t","sin","cos","dampedAngularFreq","freqForT","sinh","cosh","next","isBelowVelocityThreshold","isBelowDisplacementThreshold","flipTarget","needsInterpolation","_t","isColorString","type","testProp","Boolean","isString","singleColorRegex","startsWith","prototype","call","splitColor","aName","bName","cName","match","floatRegex","alpha","parseFloat","clampRgbUnit","rgbUnit","number","round","rgba","test","parse","red","green","blue","alpha$1","sanitize","hex","r","substr","parseInt","hsla","hue","saturation","lightness","percent","hueToRgb","p","q","hslaToRgba","mixLinearColor","fromExpo","toExpo","colorTypes","getColorType","find","notAnimatable","color","mixColor","fromColorType","toColorType","fromColor","toColor","blended","colorToken","numberToken","analyse","numColors","colors","colorRegex","replace","map","numbers","tokenised","createTransformer","numValues","output","convertNumbersToZero","complex","_b","_c","_d","getAnimatableNone","parsed","transformer","getMixer","mixComplex","mixArray","blendValue","fromThis","mixObject","numNumbers","numRGB","numHSL","template","originStats","targetStats","mixNumber","createMixers","ease","customMixer","mixers","mixerFactory","Array","isArray","numMixers","mixer","easingFunction","fastInterpolate","slowInterpolate","input","inputLength","lastInputIndex","mixerIndex","foundMixerIndex","progressInRange","interpolate","isClamp","concat","reverse","interpolator","power","reverseEasing","easing","mirrorEasing","createBackIn","linear","easeIn","easeOut","easeInOut","circIn","acos","circOut","circInOut","backIn","backOut","backInOut","anticipate","backEasing","createAnticipate","bounceOut","p2","bounceIn","defaultEasing","splice","keyframes","times","o","convertOffsetToTimes","_value","defaultOffset","createInterpolator","types","decay","timeConstant","modifyTarget","amplitude","ideal","loopElapsed","elapsed","delay","framesync","update","passTimestamp","start","stop","animate","driverControls","latest","interpolateFromNumber","autoplay","driver","repeat","repeatMax","repeatType","repeatDelay","onPlay","onStop","onComplete","onRepeat","onUpdate","repeatCount","computedDuration","isComplete","isForwardPlayback","animator","config","Set","has","detectAnimationFromOptions","animation","reverseElapsed","hasRepeatDelayElapsed","a1","a2","calcBezier","getSlope","kSampleStepSize","cubicBezier","mX1","mY1","mX2","mY2","sampleValues","Float32Array","getTForX","aX","intervalStart","currentSample","kSplineTableSize","guessForT","initialSlope","aGuessT","currentSlope","newtonRaphsonIterate","aA","aB","currentX","currentT","binarySubdivide","easingLookup","bounceInOut","easingDefinitionToFunction","definition","isAnimatable","underDampedSpring","criticallyDampedSpring","linearTween","defaultTransitions","rotateZ","opacity","backgroundColor","default","maxDefaults","applyDefaultFilter","slice","split","unit","defaultValue","functionRegex","filter","functions","join","defaultValueTypes","numberValueTypes","outlineColor","fill","stroke","borderColor","borderTopColor","borderRightColor","borderBottomColor","borderLeftColor","WebkitFilter","getDefaultValueType","defaultValueType","instantAnimationState","convertTransitionToAnimationOptions","yoyo","flip","loop","transition","isEasingArray","getDelayFromTransition","getValueTransition","getPopmotionAnimationOptions","hydrateKeyframes","when","delayChildren","staggerChildren","staggerDirection","isTransitionDefined","valueKey","transitionFactory","isKeyframesTarget","getDefaultTransition","getAnimation","valueTransition","get","isTargetAnimatable","isZero","getZeroUnit","isOriginAnimatable","set","currentAnimation","bounceStiffness","bounceDamping","isOutOfBounds","boundaryNearest","startAnimation","startSpring","prev","boundary","heading","velocityPerSecond","inertia","finalTarget","resolveFinalValueInKeyframes","indexOf","potentialUnitType","delayTimer","controls","setTimeout","clearTimeout","elementDragControls","WeakMap","VisualElementDragControls","visualElement","openGlobalLock","isDragging","currentDirection","constraints","hasMutatedConstraints","elastic","originEvent","snapToCursor","isPresent","stopAnimation","getProps","dragPropagation","onDragStart","resolveConstraints","projection","isAnimationBlocked","getAxisMotionValue","measuredAxis","actual","animationState","setActive","Drag","dragDirectionLock","onDirectionLock","onDrag","getCurrentDirection","updateAxis","syncRender","panSession","getTransformPagePoint","cancel","onDragEnd","_point","shouldDrag","axisValue","applyConstraints","dragConstraints","prevConstraints","isRefObject","resolveRefConstraints","layoutBox","calcRelativeConstraints","resolveDragElastic","relativeConstraints","rebaseAxisConstraints","onMeasureDragConstraints","constraintsElement","constraintsBox","rootProjectionNode","viewportBox","scroll","measurePageBox","root","measuredConstraints","calcViewportConstraints","userConstraints","convertBoxToBoundingBox","dragMomentum","dragTransition","dragSnapToOrigin","onDragTransitionEnd","momentumAnimations","startAxisValueAnimation","Promise","all","then","dragKey","toUpperCase","externalMotionValue","getValue","initial","boxProgress","sourceLength","targetLength","calcOrigin","transformTemplate","getInstance","style","updateScroll","updateLayout","stopPointerListener","dragListener","measureDragConstraints","stopMeasureLayoutListener","stopResizeListener","scalePositionWithinConstraints","stopLayoutUpdateListener","hasLayoutChanged","motionValue","props","direction","lockThreshold","useUnmountEffect","makeRenderlessComponent","hook","pan","onPan","onPanStart","onPanEnd","onPanSessionStart","hasPanEvents","useRef","useContext","MotionConfigContext","updateHandlers","groupDragControls","dragControls","useConstant","subscribe","addListeners","usePresence","context","PresenceContext","onExitComplete","register","id","useId","pixelsToPercent","pixels","correctBorderRadius","correct","node","px","isCSSVariable","cssVariableRegex","parseCSSVariable","exec","getVariableValue","depth","token","fallback","resolved","getComputedStyle","getPropertyValue","trim","varToken","correctBoxShadow","treeScale","projectionDelta","original","containsCSSVariables","includes","cssVariables","shadow","xScale","yScale","averageScale","cssVariable","MeasureLayoutWithContext","layoutGroup","switchLayoutGroup","layoutId","addScaleCorrector","defaultScaleCorrectors","group","add","didUpdate","safeToRemove","setOptions","globalProjectionState","prevProps","layoutDependency","willUpdate","promote","relegate","getStack","members","isLead","promoteContext","scheduleCheckAfterUnmount","remove","deregister","React__default","borderRadius","applyTo","borderTopLeftRadius","borderTopRightRadius","borderBottomLeftRadius","borderBottomRightRadius","boxShadow","layoutFeatures","measureLayout","LayoutGroupContext","SwitchLayoutGroupContext","shallowCompare","prevLength","isZeroValueString","testValueType","dimensionValueTypes","degrees","vw","vh","findDimensionValueType","valueTypes","findValueType","resolveVariant","custom","resolveVariantFromProps","forEachValue","getCurrent","setMotionValue","hasValue","addValue","setTarget","makeTargetAnimatable","transitionEnd","checkTargetForNewValues","newValueKeys","numNewValues","targetValue","readValue","setBaseTarget","getOriginFromTransition","getOrigin","transitionOrigin","isWillChangeMotionValue","isMotionValue","animateVariant","variant","transitionOverride","animateTarget","resolve","getChildAnimations","variantChildren","size","forwardDelay","animateChildren","first","last","willChange","animations","animationTypeState","getState","valueTarget","shouldBlockAnimation","shouldReduceMotion","transformProps","maxStaggerDuration","generateStaggerDuration","sort","sortByTreeOrder","forEach","child","notifyAnimationComplete","sortNodePosition","protectedKeys","needsAnimating","shouldBlock","variantPriorityOrder","Animate","InView","Focus","Hover","Tap","Exit","reversePriorityOrder","numAnimationTypes","animateList","notifyAnimationStart","resolvedDefinition","animateVisualElement","createAnimationState","createTypeState","createState","isInitialRender","buildResolvedTypeValues","acc","animateChanges","changedActiveType","getVariantContext","removedKeys","encounteredKeys","removedVariantIndex","typeState","prop","propIsVariant","isVariantLabel","activeDelta","isActive","isInherited","manuallyAnimateOnMount","prevProp","isAnimationControls","variantDidChange","checkVariantsDidChange","shouldAnimateType","definitionList","resolvedValues","prevResolvedValues","allKeys","markToAnimate","delete","blockInitialAnimation","fallbackAnimation","fallbackTarget","getBaseTarget","shouldAnimate","setAnimateFunction","makeAnimator","exit","presenceContext","createHoverEvent","isNodeOrChild","parentElement","observerCallbacks","observers","fireObserverCallback","entry","fireAllObserverCallbacks","entries","observeIntersection","rootInteresectionObserver","lookupRoot","document","rootObservers","JSON","stringify","IntersectionObserver","initIntersectionObserver","observe","unobserve","thresholdNames","useIntersectionObserver","shouldObserve","rootMargin","margin","amount","once","threshold","isIntersecting","isInView","hasEnteredView","onViewportEnter","onViewportLeave","useMissingIntersectionObserver","requestAnimationFrame","gestureAnimations","inView","whileInView","viewport","tap","onTap","onTapStart","onTapCancel","whileTap","hasPressListeners","isPressing","cancelPointerEndListeners","eventOptions","onPointerDown","removePointerEndListener","checkPointerEnd","onPointerUp","onPointerCancel","focus","whileFocus","hover","onHoverStart","onHoverEnd","whileHover","prefersReducedMotion","hasReducedMotionListener","initPrefersReducedMotion","matchMedia","motionMediaQuery","setReducedMotionPreferences","matches","addListener","names","createLifecycles","managers","SubscriptionManager","propSubscriptions","lifecycles","clearAllListeners","manager","clear","updatePropListeners","on","propListener","notify","updateMotionValuesFromProps","nextValue","prevValue","existingValue","hasAnimated","latestValue","getStaticValue","removeValue","BoundingBoxDimension","featureNames","featureDefinitions","numFeatures","treeType","build","renderInstance","render","readValueFromInstance","removeValueFromRenderState","scrapeMotionValuesFromProps","removeFromVariantTree","presenceId","visualState","reducedMotionConfig","isMounted","latestValues","renderState","Map","valueSubscriptions","prevMotionValues","baseTarget","initialValues","triggerBuild","notifyUpdate","bindToMotionValue","removeOnChange","onChange","removeOnRenderRequest","onRenderRequest","scheduleRender","initialMotionValues","isControllingVariants$1","isControllingVariants","isVariantNode$1","isVariantNode","children","isVisible","mount","newInstance","addVariantChild","setProps","unmount","loadFeatures","renderedProps","isStrict","preloadedFeatures","projectionId","ProjectionNodeConstructor","initialLayoutGroupConfig","features","isEnabled","Component","createElement","getLatestValues","layoutScroll","alwaysMeasureLayout","animationType","initialPromotionConfig","closestVariantNode","getClosestVariantNode","other","getLayoutId","setStaticValue","setVisibility","visibility","canMutate","valueFromInitial","newProps","getVariant","variants","startAtParent","numVariantProps","variantProps","positionalKeys","isPositionalKey","setAndResetVelocity","isNumOrPxType","getPosFromMatrix","matrix","pos","getTranslateFromMatrix","pos2","pos3","_bbox","matrix3d","transformKeys","nonTranslationalTransformKeys","transformPropOrder","removeNonTranslationalTransform","removedTransforms","positionalValues","width","paddingLeft","paddingRight","height","paddingTop","paddingBottom","convertChangedValueTypes","changedKeys","originBbox","elementComputedStyle","display","targetBbox","unitConversion","hasPositionalKey","targetPositionalKeys","removedTransformValues","hasAttemptedToRemoveTransformValues","changedValueTypeKeys","toType","fromType","numKeyframes","fromIndex","scrollY","pageYOffset","convertedTarget","scrollTo","checkAndConvertChangedValueTypes","parseDomVariant","Element","resolveCSSVariables","htmlConfig","domElement","defaultType","computedStyle","compareDocumentPosition","resetTransform","restoreTransform","mutableState","vars","transformValues","buildHTMLStyles","renderHTML","htmlVisualElement","svgVisualElement","camelCaseAttributes","camelToDash","getAttribute","_element","buildSVGAttrs","renderSVG","domAnimation","renderer","isSVGComponent","enableHardwareAcceleration","isAnimating","borders","numBorders","asNumber","isPx","mixValues","follow","lead","shouldCrossfadeOpacity","isOnlyMember","easeCrossfadeIn","opacityExit","easeCrossfadeOut","borderLabel","followRadius","getRadius","leadRadius","radiusName","compress","copyAxisInto","originAxis","copyBoxInto","originBox","removePointDelta","removeAxisTransforms","sourceAxis","removeAxisDelta","removeBoxTransforms","sourceBox","isAxisDeltaZero","isDeltaZero","boxEquals","aspectRatio","NodeStack","addUniqueItem","removeItem","prevLead","indexOfNode","findIndex","member","preserveFollowOpacity","show","resumeFrom","preserveOpacity","snapshot","animationValues","isShared","isUpdating","isLayoutDirty","crossfade","hide","_e","resumingFrom","buildProjectionTransform","latestTransform","xTranslate","yTranslate","elementScaleX","elementScaleY","compareByDepth","FlatTree","isDirty","transformAxes","createProjectionNode","attachResizeListener","defaultParent","measureScroll","checkIsScrollRoot","isTreeAnimating","updateManuallyBlocked","updateBlockedByResize","isSVG","needsReset","shouldResetTransform","eventHandlers","potentialNodes","checkUpdateFailed","clearAllSnapshots","updateProjection","nodes","resolveTargetDelta","calcProjection","hasProjected","animationProgress","sharedNodes","path","registerPotentialNode","subscriptionManager","args","SVGElement","tagName","unblockTimeout","resizeUnblockUpdate","finishAnimation","registerSharedNode","hasRelativeTargetChanged","newLayout","isTreeAnimationBlocked","relativeTarget","layoutTransition","defaultLayoutTransition","onLayoutAnimationStart","onLayoutAnimationComplete","targetChanged","targetLayout","hasOnlyRelativeTargetChanged","setAnimationOrigin","animationOptions","isUpdateBlocked","resetRotation","shouldNotifyListeners","startUpdate","prevTransformTemplateValue","updateSnapshot","notifyListeners","unblockUpdate","clearMeasurements","mountNodeEarly","resetTransformStyle","notifyLayoutUpdate","flushSync","clearSnapshot","removeLeadSnapshots","measured","measure","removeTransform","removeElementScroll","roundBox","prevLayout","layoutCorrected","notifyLayoutMeasure","isScrollRoot","isResetRequested","hasProjection","transformTemplateValue","transformTemplateHasChanged","boxWithoutScroll","rootScroll","transformOnly","withTransforms","boxWithoutTransform","targetDelta","scheduleUpdateProjection","relativeParent","getClosestProjectingParent","relativeTargetOrigin","targetWithTransforms","applyTransform","attemptToResolveRelativeTarget","pendingAnimation","getLead","treePath","isSharedTransition","treeLength","applyTreeDeltas","projectionDeltaWithTransform","prevTreeScaleX","prevTreeScaleY","prevProjectionTransform","projectionTransform","notifyAll","snapshotLatestValues","mixedValues","relativeLayout","isSharedLayoutAnimation","hasOpacityCrossfade","mixTargetDelta","mixAxisDelta","setTargetDelta","mixBox","completeAnimation","exitAnimationComplete","shouldAnimatePositionOnly","xLength","yLength","shouldPreserveFollowOpacity","stack","hasRotate","resetValues","styleProp","styles","pointerEvents","resolveMotionValue","emptyStyles","valuesToRender","applyTransformsToTarget","transformOrigin","scaleCorrectors","corrected","num","hasListeners","measuredLayout","axisSnapshot","layoutDelta","visualDelta","parentSnapshot","parentLayout","relativeSnapshot","onBeforeLayoutMeasure","notifyBeforeLayoutMeasure","removeLeadSnapshot","mixAxis","searchNode","querySelector","roundAxis","isCloseTo","DocumentProjectionNode","documentElement","scrollLeft","body","scrollTop","HTMLProjectionNode","documentNode","position","domMax","projectionNodeConstructor"],"sourceRoot":""}