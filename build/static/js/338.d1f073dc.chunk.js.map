{"version":3,"file":"static/js/338.d1f073dc.chunk.js","mappings":"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","sources":["components/tables/useTable.js","pages/Building/NewBuilding.js","pages/Building/Buildings.js","pages/Departments/NewDepartment.js","pages/Departments/Department.js","pages/Titles/NewTitle.js","pages/Titles/Titles.js","pages/Positions/NewPossition.js","pages/Positions/EditForm.js","pages/Positions/Possitions.js","pages/Setup.js"],"sourcesContent":["import React from 'react'\r\n\r\nimport { Helmet } from 'react-helmet-async';\r\n// @mui\r\nimport { Container, Typography, Table, TableHead, TableRow, TableCell} from '@mui/material';\r\n\r\nimport { makeStyles  } from '@mui/styles'\r\n// components\r\n\r\n\r\nconst useStyles = makeStyles(theme=>({\r\n  table:{\r\n    marginTop: theme.spacing(3),\r\n    '& thead th': {\r\n      fontweight: '800',\r\n      color: theme.white,\r\n      backgroundColor: theme.palette.primary.black,\r\n    },\r\n\r\n    '& tbody td': {\r\n      fontweight: '300',\r\n\r\n    },\r\n\r\n    '& tbody tr:hover':{\r\n      backgroundColor:'#fffbf2',\r\n      cursor: 'pointer',\r\n    },\r\n  },\r\n}))\r\n\r\n\r\nexport default function useTable(records,headCells) {\r\n  const classes = useStyles();\r\n    const TblContainer = props=>\r\n    (\r\n        <Table className={classes.Table}>\r\n{props.children}\r\n        </Table>\r\n    )\r\n\r\n   const Tblhead = props => \r\n    (\r\n      <TableHead>\r\n         <TableRow>\r\n          {\r\n            headCells.map(headCell => (\r\n              <TableCell key={headCell.id}>\r\n                {headCell.label}\r\n              </TableCell>\r\n            ))\r\n          }\r\n         </TableRow>\r\n      </TableHead>\r\n    )\r\n   \r\n\r\n  return {\r\nTblContainer,\r\nTblhead\r\n  }\r\n}\r\n","import {React,useState  }from 'react'\r\nimport { Helmet } from 'react-helmet-async';\r\n// @mui\r\nimport { Container, Typography,Grid, Paper, Button, TextField } from '@mui/material';\r\nimport axios from 'axios';\r\nimport { Formik, Form, Field, ErrorMessage } from 'formik'\r\nimport * as Yup from 'yup'\r\nimport Notification from '../../components/Notifications';\r\n// components\r\nimport { useSettingsContext } from '../../components/settings';\r\n\r\n\r\n\r\n\r\nexport default function NewBuilding(props) {\r\n\r\n    const {inserdata,setOpenPopup}= props\r\n    \r\n    const paperStyle = { padding: '0 15px 40px 15px', width: 500, }\r\n    const btnStyle = { marginTop: 10 }\r\n    const [notify, setNotify]=useState({isOpen:false, message:'', type:''})\r\n    const initialValues = {\r\n        buildingName: '',\r\n        address: '',\r\n    \r\n    }\r\n    const validationSchema = Yup.object().shape({\r\n        buildingName: Yup.string().min(3, \"It's too short\").required(\"Required\"),\r\n        \r\n        address : Yup.string().min(3, \"It's too short Address\").required(\"Required\"),\r\n        \r\n    })\r\n    const onSubmit = (values, props) => {\r\n    \r\n        inserdata(values)\r\n\r\n    }\r\n\r\n  const CancelHandle=()=>\r\n  {\r\n    setOpenPopup(false)\r\n  }\r\n\r\n    \r\n\r\n  return (\r\n    <>\r\n     <Grid>\r\n            <Paper elevation={0} style={paperStyle}>\r\n                <Grid align='center'>\r\n                    <Typography variant='caption'>Fill the form to an new building</Typography>\r\n                </Grid>\r\n                <Formik initialValues={initialValues} validationSchema={validationSchema} onSubmit={onSubmit}>\r\n                    {(props) => (\r\n                        <Form noValidate>\r\n                         \r\n\r\n                            <Field as={TextField} name='buildingName' label='Building' fullWidth\r\n                                error={props.errors.buildingName && props.touched.buildingName}\r\n                                helperText={<ErrorMessage name='buildingName' />}  />\r\n\r\n<Field as={TextField} name='address' label='Address' fullWidth\r\n                                error={props.errors.address && props.touched.address}\r\n                                helperText={<ErrorMessage name='address' />} />\r\n\r\n\r\n                       \r\n                         \r\n\r\n                            \r\n\r\n\r\n                            <Button type='submit' style={btnStyle} variant='contained'\r\n                                color='primary' >Create</Button>\r\n                                <Button onClick={CancelHandle} color=\"error\">Cancel</Button>\r\n                        </Form>\r\n                    )}\r\n                </Formik>\r\n            </Paper>\r\n        </Grid>\r\n\r\n        <Notification\r\n        notify={notify}\r\n        setNotify={setNotify}\r\n        />\r\n    </>\r\n  );\r\n}\r\n","import { Helmet } from 'react-helmet-async';\r\n// @mui\r\n\r\nimport * as React from 'react';\r\n\r\nimport AddBox from '@mui/icons-material/AddBox';\r\n\r\n\r\n\r\n\r\nimport { Component,forwardRef, useState, useEffect, useRef } from \"react\";\r\n\r\nimport MaterialTable from \"material-table\";\r\n\r\n// Import Material Icons\r\n\r\nimport ArrowDownward from '@mui/icons-material/ArrowDownward';\r\nimport Check from '@mui/icons-material/Check';\r\nimport ChevronLeft from '@mui/icons-material/ChevronLeft';\r\nimport ChevronRight from '@mui/icons-material/ChevronRight';\r\nimport Clear from '@mui/icons-material/Clear';\r\nimport DeleteOutline from '@mui/icons-material/DeleteOutline';\r\nimport Edit from '@mui/icons-material/Edit';\r\nimport FilterList from '@mui/icons-material/FilterList';\r\nimport FirstPage from '@mui/icons-material/FirstPage';\r\nimport LastPage from '@mui/icons-material/LastPage';\r\nimport Remove from '@mui/icons-material/Remove';\r\nimport SaveAlt from '@mui/icons-material/SaveAlt';\r\n\r\nimport Search from '@mui/icons-material/Search';\r\nimport ViewColumn from '@mui/icons-material/ViewColumn';\r\n\r\nimport Refresh from '@mui/icons-material/Refresh';\r\nimport Delete from '@mui/icons-material/Delete';\r\nimport {Snackbar,Alert , Container,Button, TableContainer, Table, TableHead,TableBody,TableRow,TableCell,Paper, DialogTitle, DialogContent, makeStyles, colors } from '@mui/material';\r\nimport { margin, padding } from '@mui/system';\r\nimport { Label } from '@mui/icons-material';\r\nimport { blueGrey, red } from '@mui/material/colors';\r\nimport axios from 'axios';\r\nimport { ErrorMessage } from 'formik';\r\nimport Popup from '../../components/Popup';\r\nimport Notification from '../../components/Notifications';\r\n\r\n\r\nimport Newbuilding from './NewBuilding';\r\n\r\nimport { useSettingsContext } from '../../components/settings';\r\n\r\nimport CustomizedDialogs  from '../../components/Dialog/CustomizedDialogs'\r\n\r\nimport useTable from '../../components/tables/useTable'\r\n\r\nimport { variables } from \"../../variables\";\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst tableIcons = {\r\n  Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\n  Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\n  Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n  Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\n  DetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n  Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\n  Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\n  Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\n  FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\n  LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\n  NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n  PreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\r\n  ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n  Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\n  SortArrow: forwardRef((props, ref) => <ArrowDownward {...props} ref={ref} />),\r\n  ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\n  ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\r\n};\r\n\r\n\r\n\r\n// Style\r\nconst columns = [\r\n  {title: \"id\", field: \"id\", hidden: true,},\r\n  {title: \"Building\", field: \"buildingName\",\r\n},\r\n  {title: \"Address\", field: \"address\"},\r\n \r\n]\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function Buildings() {\r\n  const { themeStretch } = useSettingsContext();\r\n\r\n  const [Building, setBuilding] = useState([]);\r\n  const [iserror, setIserror] = useState(false)\r\n  const [errorMessages, setErrorMessages] = useState([])\r\n  const [notify, setNotify]=useState({isOpen:false, message:'', type:''})\r\n  const [openPopup, setOpenPopup]=React.useState(false);\r\n\r\n  \r\n  \r\nconst getBuildings = async()=>\r\n{\r\n  try \r\n  {\r\n    const Endpoint = `Building`\r\n    const data = await axios.get(variables.API_URL+Endpoint);\r\n   setBuilding(data.data)\r\n    \r\n  }\r\n  catch (e){\r\n    console.log(e);\r\n  }\r\n}\r\n\r\n\r\n\r\nuseEffect(()=>{\r\n\r\n\r\n\r\n  \r\n  getBuildings();\r\n\r\n\r\n\r\n},[]);\r\n\r\n\r\n// Update Row\r\n\r\nconst handleRowUpdate = (newData, oldData, resolve) => {\r\n  // validation\r\n  const errorList = []\r\n  if(newData.buildingName === \"\"){\r\n    errorList.push(\"Please enter build name\")\r\n  }\r\n  if(newData.address === \"\"){\r\n    errorList.push(\"Please enter Address name\")\r\n  }\r\n\r\n  if(errorList.length < 1){\r\n //   api.patch(\"/users/\"+newData.id, newData)\r\n\r\n const Endpoint = `Building`\r\n\r\n    axios.put(variables.API_URL+Endpoint,newData)\r\n    .then(res => {\r\n      const dataUpdate = [...Building];\r\n      const index = oldData.tableData.id;\r\n      dataUpdate[index] = newData;\r\n      setBuilding([...dataUpdate]);\r\n      resolve()\r\n      setIserror(false)\r\n      setErrorMessages([])\r\n      setNotify({\r\n        isOpen:true,\r\n        message: 'Sucessfully Updated',\r\n        type: 'success'\r\n    },\r\n   \r\n        )\r\n    })\r\n    .catch(error => {\r\n      setErrorMessages([\"Dhib dhan serverka ah! Server error\"])\r\n      setIserror(true)\r\n      resolve()\r\n       \r\n    })\r\n  }else{\r\n    setErrorMessages(errorList)\r\n    setIserror(true)\r\n    resolve()\r\n\r\n  }\r\n   \r\n}\r\n\r\n\r\n// Delete Row\r\n\r\nconst handleRowDelete = (oldData, resolve) => {\r\n\r\n  const Endpoint = `Building/${oldData.id}`\r\n \r\n  axios.delete(variables.API_URL+Endpoint)\r\n      .then(res => {\r\n        const dataDelete = [...Building];\r\n        const index = oldData.tableData.id;\r\n        dataDelete.splice(index, 1);\r\n        setBuilding([...dataDelete]);\r\n        resolve();\r\n        setOpenPopup(false);\r\n        setNotify({\r\n          isOpen:true,\r\n          message: 'Sucessfully Deleted',\r\n          type: 'error'\r\n      } \r\n          )\r\n      })\r\n      .catch(error => {\r\n        setErrorMessages([\"Delete failed! Server error\"])\r\n        setIserror(true)\r\n        console.log(ErrorMessage)\r\n        resolve()\r\n      })\r\n  }\r\n\r\n  \r\n// Insert \r\n\r\nconst inserdata = (values)=>{\r\n  const data = {\r\n    records:[\r\n        {\r\n            fields:{\r\n                buildingName: values.buildingName,\r\n                address: values.address\r\n            },\r\n        },\r\n    ],\r\n};\r\n\r\nconst axiosConfig = {\r\n    headers:{\r\n        'Content-Type':'application/json',\r\n    },\r\n   \r\n};\r\nconst Endpoint = `Building`\r\naxios.post(variables.API_URL+Endpoint,{buildingName: values.buildingName,address:values.address})\r\n.then((response)=>{\r\n\r\n    setNotify({\r\n        isOpen:true,\r\n        message: 'Submitted Successfully',\r\n        type: 'success'\r\n    } \r\n        )\r\n        setOpenPopup(false);\r\n   \r\n})\r\n.catch((e)=>{\r\n    console.log(\"Hello\")\r\n})\r\n}\r\n\r\n\r\nconst handleClose = () => {\r\n  setOpenPopup(false)\r\n};\r\n\r\n\r\n// Table Data\r\n\r\n\r\n  return (\r\n\r\n    <>\r\n    <Helmet>\r\n      <title> HR- Buildings</title>\r\n    </Helmet>\r\n\r\n    <Container maxWidth={themeStretch ? false : 'x3'} sx={{margin:0}}>\r\n\r\n    <Button variant=\"outlined\" onClick={()=>setOpenPopup(true)}>\r\n        New Building\r\n      </Button>\r\n        <div>\r\n        {errorMessages.map((msg, i) => {\r\n                      return <div key={i}>{msg}</div>\r\n                  })}\r\n        </div>\r\n        <MaterialTable mt={90}\r\n              title=\"Building Details\"\r\n              columns={columns}\r\n              data={Building}\r\n              icons={tableIcons}\r\n              options={{\r\n                \r\n    headerStyle: {\r\n      backgroundColor: \"#F4F6F8\",\r\n          color: \"#637381\",\r\n        \r\n    },\r\n    rowStyle: {\r\n      \r\n      border: '2px solid #eee'\r\n    },\r\n  \r\n              }}\r\n\r\n            \r\n\r\n              editable={{\r\n                onRowUpdate: (newData, oldData) =>\r\n                  new Promise((resolve) => {\r\n                      handleRowUpdate(newData, oldData, resolve);\r\n                       \r\n                  }),\r\n\r\n                  onRowDelete: (oldData) =>\r\n                  new Promise((resolve) => {\r\n                    handleRowDelete(oldData, resolve)\r\n                  }),\r\n                  \r\n                }}\r\n\r\n              \r\n\r\n\r\n              \r\n            />\r\n    </Container>\r\n\r\n<Popup\r\nopenPopup={openPopup}\r\nsetOpenPopup={setOpenPopup}\r\ntitle=\"New Building\"\r\n>\r\n<Newbuilding inserdata={inserdata}  setOpenPopup={setOpenPopup} />\r\n\r\n</Popup>\r\n\r\n\r\n\r\n\r\n    <Notification\r\n        notify={notify}\r\n        setNotify={setNotify}\r\n        />\r\n  </>\r\n\r\n\r\n  );\r\n}\r\n\r\n","import {React,useState  }from 'react'\r\nimport { Helmet } from 'react-helmet-async';\r\n// @mui\r\nimport { Container, Typography,Grid, Paper, Button, TextField } from '@mui/material';\r\nimport axios from 'axios';\r\nimport { Formik, Form, Field, ErrorMessage } from 'formik'\r\nimport * as Yup from 'yup'\r\nimport Notification from '../../components/Notifications';\r\n// components\r\nimport { useSettingsContext } from '../../components/settings';\r\n\r\n\r\n\r\n\r\nexport default function NewDepartment(props) {\r\n    const paperStyle = { padding: '0 15px 40px 15px', width: 500, }\r\n    const btnStyle = { marginTop: 10 }\r\n    const [notify, setNotify]=useState({isOpen:false, message:'', type:''})\r\n    const {inserdata,setOpenPopup}= props\r\n  \r\n    const initialValues = {\r\n        depName: '',\r\n    }\r\n    const validationSchema = Yup.object().shape({\r\n        depName: Yup.string().min(3, \"It's too short\").required(\"Required\"),\r\n        \r\n        \r\n    })\r\n    const onSubmit = (values, props) => {\r\n        inserdata(values)\r\n    }\r\n\r\n    const CancelHandel = ()=>\r\n    {\r\n        setOpenPopup(false)\r\n    }\r\n\r\n  return (\r\n    <>\r\n     <Grid>\r\n            <Paper elevation={0} style={paperStyle}>\r\n                <Grid align='center'>\r\n                    <Typography variant='caption'>Fill the form to an new Department</Typography>\r\n                </Grid>\r\n                <Formik initialValues={initialValues} validationSchema={validationSchema} onSubmit={onSubmit}>\r\n                    {(props) => (\r\n                        <Form noValidate>\r\n                         \r\n\r\n                            <Field as={TextField} name='depName' label='Department Name' fullWidth\r\n                                error={props.errors.depName && props.touched.depName}\r\n                                helperText={<ErrorMessage name='depName' />}  />\r\n\r\n\r\n\r\n                       \r\n                         \r\n\r\n                            \r\n\r\n\r\n                            <Button type='submit' style={btnStyle} variant='contained'\r\n                                color='primary' >Create</Button>\r\n                                <Button onClick={CancelHandel} color=\"error\">Cancel</Button>\r\n                        </Form>\r\n                    )}\r\n                </Formik>\r\n            </Paper>\r\n        </Grid>\r\n\r\n        <Notification\r\n        notify={notify}\r\n        setNotify={setNotify}\r\n        />\r\n    </>\r\n  );\r\n}\r\n","import { Helmet } from 'react-helmet-async';\r\n// @mui\r\n\r\n\r\n\r\nimport AddBox from '@mui/icons-material/AddBox';\r\n\r\n\r\n\r\n\r\nimport { Component,forwardRef, useState, useEffect } from \"react\";\r\n\r\nimport MaterialTable from \"material-table\";\r\n\r\n// Import Material Icons\r\n\r\nimport ArrowDownward from '@mui/icons-material/ArrowDownward';\r\nimport Check from '@mui/icons-material/Check';\r\nimport ChevronLeft from '@mui/icons-material/ChevronLeft';\r\nimport ChevronRight from '@mui/icons-material/ChevronRight';\r\nimport Clear from '@mui/icons-material/Clear';\r\nimport DeleteOutline from '@mui/icons-material/DeleteOutline';\r\nimport Edit from '@mui/icons-material/Edit';\r\nimport FilterList from '@mui/icons-material/FilterList';\r\nimport FirstPage from '@mui/icons-material/FirstPage';\r\nimport LastPage from '@mui/icons-material/LastPage';\r\nimport Remove from '@mui/icons-material/Remove';\r\nimport SaveAlt from '@mui/icons-material/SaveAlt';\r\n\r\nimport Search from '@mui/icons-material/Search';\r\nimport ViewColumn from '@mui/icons-material/ViewColumn';\r\n\r\nimport Refresh from '@mui/icons-material/Refresh';\r\nimport Delete from '@mui/icons-material/Delete';\r\nimport {Snackbar,Alert , Container,Button, TableContainer, Table, TableHead,TableBody,TableRow,TableCell,Paper, DialogTitle, DialogContent, makeStyles, colors } from '@mui/material';\r\nimport { margin, padding } from '@mui/system';\r\nimport { Label } from '@mui/icons-material';\r\nimport { blueGrey, red } from '@mui/material/colors';\r\nimport axios from 'axios';\r\nimport { ErrorMessage } from 'formik';\r\nimport Notification from '../../components/Notifications';\r\n\r\n\r\nimport Newdepartment from './NewDepartment';\r\n\r\nimport { useSettingsContext } from '../../components/settings';\r\n\r\nimport CustomizedDialogs  from '../../components/Dialog/CustomizedDialogs'\r\n\r\nimport useTable from '../../components/tables/useTable'\r\nimport Popup from '../../components/Popup';\r\nimport { variables } from \"../../variables\";\r\n\r\n\r\n\r\n\r\n\r\nconst tableIcons = {\r\n  Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\n  Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\n  Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n  Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\n  DetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n  Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\n  Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\n  Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\n  FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\n  LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\n  NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n  PreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\r\n  ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n  Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\n  SortArrow: forwardRef((props, ref) => <ArrowDownward {...props} ref={ref} />),\r\n  ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\n  ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\r\n};\r\n\r\n\r\n\r\n// Style\r\nconst columns = [\r\n  {title: \"id\", field: \"id\", hidden: true,},\r\n  {title: \"Name\", field: \"depName\",},\r\n]\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function Department() {\r\n  const { themeStretch } = useSettingsContext();\r\n \r\n  const [Departments, setDepartments] = useState([]);\r\n  const [iserror, setIserror] = useState(false)\r\n  const [errorMessages, setErrorMessages] = useState([])\r\n  const [notify, setNotify]=useState({isOpen:false, message:'', type:''})\r\n  const [openPopup, setOpenPopup]=useState(false)\r\nconst getBuildings = async()=>\r\n{\r\n  try \r\n  {\r\n    const Endpoint = `Department`\r\n    const data = await axios.get(variables.API_URL+Endpoint);\r\n  \r\n \r\n   setDepartments(data.data)\r\n    \r\n  }\r\n  catch (e){\r\n    console.log(e);\r\n  }\r\n}\r\n\r\nuseEffect(()=>{\r\n  getBuildings();\r\n},[]);\r\n\r\n\r\n// Update Row\r\n\r\nconst handleRowUpdate = (newData, oldData, resolve) => {\r\n  // validation\r\n  const errorList = []\r\n  if(newData.buildingName === \"\"){\r\n    errorList.push(\"Please enter department name\")\r\n  }\r\n\r\n  if(errorList.length < 1){\r\n //   api.patch(\"/users/\"+newData.id, newData)\r\n\r\n \r\n const Endpoint = `Department`\r\n\r\n axios.put(variables.API_URL+Endpoint,newData)\r\n    .then(res => {\r\n      const dataUpdate = [...Departments];\r\n      const index = oldData.tableData.id;\r\n      dataUpdate[index] = newData;\r\n      setDepartments([...dataUpdate]);\r\n      resolve()\r\n      setIserror(false)\r\n      setErrorMessages([])\r\n      setNotify({\r\n        isOpen:true,\r\n        message: 'Sucessfully Updated',\r\n        type: 'success'\r\n    },\r\n   \r\n        )\r\n    })\r\n    .catch(error => {\r\n      setErrorMessages([\"Dhib dhan serverka ah! Server error\"])\r\n      setIserror(true)\r\n      resolve()\r\n       \r\n    })\r\n  }else{\r\n    setErrorMessages(errorList)\r\n    setIserror(true)\r\n    resolve()\r\n\r\n  }\r\n   \r\n}\r\n\r\n\r\n// Delete Row\r\n\r\nconst handleRowDelete = (oldData, resolve) => {\r\n  const Endpoint = `Department/${oldData.id}`\r\n \r\n  axios.delete(variables.API_URL+Endpoint)\r\n      .then(res => {\r\n        const dataDelete = [...Departments];\r\n        const index = oldData.tableData.id;\r\n        dataDelete.splice(index, 1);\r\n        setDepartments([...dataDelete]);\r\n        resolve();\r\n        console.log(\"Hi\");\r\n        setNotify({\r\n          isOpen:true,\r\n          message: 'Sucessfully Deleted',\r\n          type: 'error'\r\n      } \r\n          )\r\n      })\r\n      .catch(error => {\r\n        setErrorMessages([\"Delete failed! Server error\"])\r\n        setIserror(true)\r\n        console.log(ErrorMessage)\r\n        resolve()\r\n      })\r\n  }\r\n\r\n\r\n  // Insert Data\r\n\r\n  const inserdata = (values)=>{\r\n  const data = {\r\n    records:[\r\n        {\r\n            fields:{\r\n                depName: values.depName,\r\n                \r\n            },\r\n        },\r\n    ],\r\n};\r\n\r\nconst axiosConfig = {\r\n    headers:{\r\n        'Content-Type':'application/json',\r\n    },\r\n   \r\n};\r\nconst Endpoint = `Department`\r\naxios.post(variables.API_URL+Endpoint,{depName: values.depName})\r\n.then((response)=>{\r\n    setNotify({\r\n        isOpen:true,\r\n        message: 'Submitted Successfully',\r\n        type: 'success'\r\n    } \r\n        );\r\n        setOpenPopup(false);\r\n})\r\n.catch((e)=>{\r\n    console.log(\"Hello\")\r\n})\r\n\r\n}\r\n\r\n\r\n\r\n\r\n \r\n\r\n// Table Data\r\n\r\n\r\n  return (\r\n\r\n    <>\r\n    <Helmet>\r\n      <title> HR- Buildings</title>\r\n    </Helmet>\r\n\r\n    <Container maxWidth={themeStretch ? false : 'x3'} sx={{margin:0}}>\r\n\r\n    \r\n    <Button variant=\"outlined\" onClick={()=>setOpenPopup(true)}>\r\n        New Department\r\n      </Button>\r\n        <div>\r\n        {errorMessages.map((msg, i) => {\r\n                      return <div key={i}>{msg}</div>\r\n                  })}\r\n        </div>\r\n        <MaterialTable mt={90}\r\n              title=\"Departments\"\r\n              columns={columns}\r\n              data={Departments}\r\n              icons={tableIcons}\r\n              options={{\r\n                \r\n    headerStyle: {\r\n      backgroundColor: \"#F4F6F8\",\r\n          color: \"#637381\",\r\n        \r\n    },\r\n    rowStyle: {\r\n      \r\n      border: '2px solid #eee'\r\n    },\r\n  \r\n              }}\r\n\r\n            \r\n\r\n              editable={{\r\n                onRowUpdate: (newData, oldData) =>\r\n                  new Promise((resolve) => {\r\n                      handleRowUpdate(newData, oldData, resolve);\r\n                       \r\n                  }),\r\n\r\n                  onRowDelete: (oldData) =>\r\n                  new Promise((resolve) => {\r\n                    handleRowDelete(oldData, resolve)\r\n                  }),\r\n                  \r\n                }}\r\n\r\n              \r\n\r\n\r\n              \r\n            />\r\n    </Container>\r\n\r\n    <Popup\r\nopenPopup={openPopup}\r\nsetOpenPopup={setOpenPopup}\r\ntitle=\"New Department\"\r\n>\r\n<Newdepartment inserdata={inserdata} setOpenPopup={setOpenPopup} />\r\n</Popup>\r\n\r\n    <Notification\r\n        notify={notify}\r\n        setNotify={setNotify}\r\n        />\r\n  </>\r\n\r\n\r\n  );\r\n}\r\n\r\n","import {React,useState  }from 'react'\r\nimport { Helmet } from 'react-helmet-async';\r\n// @mui\r\nimport { Container, Typography,Grid, Paper, Button, TextField } from '@mui/material';\r\nimport axios from 'axios';\r\nimport { Formik, Form, Field, ErrorMessage } from 'formik'\r\nimport * as Yup from 'yup'\r\nimport Notification from '../../components/Notifications';\r\n// components\r\nimport { useSettingsContext } from '../../components/settings';\r\n\r\n\r\n\r\n\r\nexport default function NewTitle(props) {\r\n    const paperStyle = { padding: '0 15px 40px 15px', width: 500, }\r\n    const btnStyle = { marginTop: 10 }\r\n    const [notify, setNotify]=useState({isOpen:false, message:'', type:''})\r\n    const {insertdata,setOpenPopup}=props\r\n  \r\n    const initialValues = {\r\n        title: '',\r\n    }\r\n    const validationSchema = Yup.object().shape({\r\n        title: Yup.string().min(3, \"It's too short\").required(\"Required\"),\r\n        \r\n        \r\n    })\r\n    const onSubmit = (values, props) => {\r\n    \r\n        insertdata(values)\r\n\r\n    }\r\n\r\n    const Cancelhandle = ()=>{\r\n        setOpenPopup(false)\r\n    }\r\n\r\n  return (\r\n    <>\r\n     <Grid>\r\n            <Paper elevation={0} style={paperStyle}>\r\n                <Grid align='center'>\r\n                    <Typography variant='caption'>Fill the form to an new Title</Typography>\r\n                </Grid>\r\n                <Formik initialValues={initialValues} validationSchema={validationSchema} onSubmit={onSubmit}>\r\n                    {(props) => (\r\n                        <Form noValidate>\r\n                         \r\n\r\n                            <Field as={TextField} name='title' label='Title' fullWidth\r\n                                error={props.errors.title && props.touched.title}\r\n                                helperText={<ErrorMessage name='title' />}  />\r\n\r\n\r\n\r\n                       \r\n                         \r\n\r\n                            \r\n\r\n\r\n                            <Button type='submit' style={btnStyle} variant='contained'\r\n                                color='primary' >Create</Button>\r\n                                <Button onClick={Cancelhandle} color=\"error\">Cancel</Button>\r\n                        </Form>\r\n                    )}\r\n                </Formik>\r\n            </Paper>\r\n        </Grid>\r\n\r\n        <Notification\r\n        notify={notify}\r\n        setNotify={setNotify}\r\n        />\r\n    </>\r\n  );\r\n}\r\n","import { Helmet } from 'react-helmet-async';\r\n// @mui\r\n\r\n\r\n\r\nimport AddBox from '@mui/icons-material/AddBox';\r\n\r\n\r\n\r\n\r\nimport { Component,forwardRef, useState, useEffect } from \"react\";\r\n\r\nimport MaterialTable from \"material-table\";\r\n\r\n// Import Material Icons\r\n\r\nimport ArrowDownward from '@mui/icons-material/ArrowDownward';\r\nimport Check from '@mui/icons-material/Check';\r\nimport ChevronLeft from '@mui/icons-material/ChevronLeft';\r\nimport ChevronRight from '@mui/icons-material/ChevronRight';\r\nimport Clear from '@mui/icons-material/Clear';\r\nimport DeleteOutline from '@mui/icons-material/DeleteOutline';\r\nimport Edit from '@mui/icons-material/Edit';\r\nimport FilterList from '@mui/icons-material/FilterList';\r\nimport FirstPage from '@mui/icons-material/FirstPage';\r\nimport LastPage from '@mui/icons-material/LastPage';\r\nimport Remove from '@mui/icons-material/Remove';\r\nimport SaveAlt from '@mui/icons-material/SaveAlt';\r\n\r\nimport Search from '@mui/icons-material/Search';\r\nimport ViewColumn from '@mui/icons-material/ViewColumn';\r\n\r\nimport Refresh from '@mui/icons-material/Refresh';\r\nimport Delete from '@mui/icons-material/Delete';\r\nimport {Snackbar,Alert , Container,Button, TableContainer, Table, TableHead,TableBody,TableRow,TableCell,Paper, DialogTitle, DialogContent, makeStyles, colors } from '@mui/material';\r\nimport { margin, padding } from '@mui/system';\r\nimport { Label } from '@mui/icons-material';\r\nimport { blueGrey, red } from '@mui/material/colors';\r\nimport axios from 'axios';\r\nimport { ErrorMessage } from 'formik';\r\nimport Notification from '../../components/Notifications';\r\nimport Popup from '../../components/Popup';\r\n\r\nimport NewTitle from './NewTitle';\r\n\r\nimport { useSettingsContext } from '../../components/settings';\r\n\r\nimport CustomizedDialogs  from '../../components/Dialog/CustomizedDialogs'\r\n\r\nimport useTable from '../../components/tables/useTable'\r\n\r\nimport { variables } from \"../../variables\";\r\n\r\n\r\n\r\n\r\n\r\nconst tableIcons = {\r\n  Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\n  Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\n  Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n  Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\n  DetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n  Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\n  Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\n  Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\n  FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\n  LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\n  NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n  PreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\r\n  ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n  Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\n  SortArrow: forwardRef((props, ref) => <ArrowDownward {...props} ref={ref} />),\r\n  ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\n  ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\r\n};\r\n\r\n\r\n\r\n// Style\r\nconst columns = [\r\n  {title: \"id\", field: \"id\", hidden: true,},\r\n  {title: \"Title\", field: \"title\",},\r\n\r\n]\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function Titles() {\r\n  const { themeStretch } = useSettingsContext();\r\n  const [openPopup, setOpenPopup] = useState(false)\r\n  const [Titles, setTitles] = useState([]);\r\n  const [iserror, setIserror] = useState(false)\r\n  const [errorMessages, setErrorMessages] = useState([])\r\n  const [notify, setNotify]=useState({isOpen:false, message:'', type:''})\r\n  \r\nconst getTitles = async()=>\r\n{\r\n  try \r\n  {\r\n    const Endpoint = `Titles`\r\n    const data = await axios.get(variables.API_URL+Endpoint);\r\n \r\n   setTitles(data.data)\r\n    \r\n  }\r\n  catch (e){\r\n    console.log(e);\r\n  }\r\n}\r\n\r\nuseEffect(()=>{\r\n  getTitles();\r\n},[]);\r\n\r\n\r\n// Update Row\r\n\r\nconst handleRowUpdate = (newData, oldData, resolve) => {\r\n  // validation\r\n  const errorList = []\r\n  if(newData.buildingName === \"\"){\r\n    errorList.push(\"Please enter department name\")\r\n  }\r\n\r\n  if(errorList.length < 1){\r\n //   api.patch(\"/users/\"+newData.id, newData)\r\n const Endpoint = `Titles`\r\n\r\n axios.put(variables.API_URL+Endpoint,newData)\r\n    .then(res => {\r\n      const dataUpdate = [...Titles];\r\n      const index = oldData.tableData.id;\r\n      dataUpdate[index] = newData;\r\n      setTitles([...dataUpdate]);\r\n      resolve()\r\n      setIserror(false)\r\n      setErrorMessages([])\r\n      setNotify({\r\n        isOpen:true,\r\n        message: 'Sucessfully Updated',\r\n        type: 'success'\r\n    },\r\n   \r\n        )\r\n    })\r\n    .catch(error => {\r\n      setErrorMessages([\"Dhib dhan serverka ah! Server error\"])\r\n      setIserror(true)\r\n      resolve()\r\n       \r\n    })\r\n  }else{\r\n    setErrorMessages(errorList)\r\n    setIserror(true)\r\n    resolve()\r\n\r\n  }\r\n   \r\n}\r\n\r\n\r\n// Delete Row\r\n\r\nconst handleRowDelete = (oldData, resolve) => {\r\n\r\n  const Endpoint = `Titles/${oldData.id}`\r\n \r\n  axios.delete(variables.API_URL+Endpoint)\r\n      .then(res => {\r\n        const dataDelete = [...Titles];\r\n        const index = oldData.tableData.id;\r\n        dataDelete.splice(index, 1);\r\n        setTitles([...dataDelete]);\r\n        resolve();\r\n        console.log(\"Hi\");\r\n        setNotify({\r\n          isOpen:true,\r\n          message: 'Sucessfully Deleted',\r\n          type: 'error'\r\n      } \r\n          )\r\n      })\r\n      .catch(error => {\r\n        setErrorMessages([\"Delete failed! Server error\"])\r\n        setIserror(true)\r\n        console.log(ErrorMessage)\r\n        resolve()\r\n      })\r\n  }\r\n\r\n\r\nconst insertdata =(values)=>\r\n{\r\n  const data = {\r\n    records:[\r\n        {\r\n            fields:{\r\n                title: values.title,\r\n            },\r\n        },\r\n    ],\r\n};\r\n\r\nconst axiosConfig = {\r\n    headers:{\r\n        'Content-Type':'application/json',\r\n    },\r\n   \r\n};\r\nconst Endpoint = `Titles`\r\naxios.post(variables.API_URL+Endpoint,{title: values.title})\r\n\r\n\r\n.then((response)=>{\r\n    setNotify({\r\n        isOpen:true,\r\n        message: 'Submitted Successfully',\r\n        type: 'success'\r\n    } \r\n        )\r\n        setOpenPopup(false)\r\n})\r\n.catch((e)=>{\r\n    console.log(\"Hello\")\r\n})\r\n}\r\n\r\n \r\n\r\n// Table Data\r\n\r\n\r\n  return (\r\n\r\n    <>\r\n    <Helmet>\r\n      <title> HR- Buildings</title>\r\n    </Helmet>\r\n\r\n    <Container maxWidth={themeStretch ? false : 'x3'} sx={{margin:0}}>\r\n\r\n    \r\n    <Button variant=\"outlined\" onClick={()=>setOpenPopup(true)}>\r\n        New Title\r\n      </Button>\r\n        <div>\r\n        {errorMessages.map((msg, i) => {\r\n                      return <div key={i}>{msg}</div>\r\n                  })}\r\n        </div>\r\n        <MaterialTable mt={90}\r\n              title=\"Jobs\"\r\n              columns={columns}\r\n              data={Titles}\r\n              icons={tableIcons}\r\n              options={{\r\n                \r\n    headerStyle: {\r\n      backgroundColor: \"#F4F6F8\",\r\n          color: \"#637381\",\r\n        \r\n    },\r\n    rowStyle: {\r\n      \r\n      border: '2px solid #eee'\r\n    },\r\n  \r\n              }}\r\n\r\n            \r\n\r\n              editable={{\r\n                onRowUpdate: (newData, oldData) =>\r\n                  new Promise((resolve) => {\r\n                      handleRowUpdate(newData, oldData, resolve);\r\n                       \r\n                  }),\r\n\r\n                  onRowDelete: (oldData) =>\r\n                  new Promise((resolve) => {\r\n                    handleRowDelete(oldData, resolve)\r\n                  }),\r\n                  \r\n                }}\r\n\r\n              \r\n\r\n\r\n              \r\n            />\r\n    </Container>\r\n    <Popup\r\nopenPopup={openPopup}\r\nsetOpenPopup={setOpenPopup}\r\ntitle=\"New Title\"\r\n>\r\n<NewTitle insertdata={insertdata}  setOpenPopup={setOpenPopup}/>\r\n</Popup>\r\n    <Notification\r\n        notify={notify}\r\n        setNotify={setNotify}\r\n        />\r\n  </>\r\n\r\n\r\n  );\r\n}\r\n\r\n","import { Helmet } from 'react-helmet-async';\r\n// @mui\r\nimport { \r\n    Button, \r\n    Switch,\r\n    InputLabel, \r\n    MenuItem, \r\n    FormControl, \r\n    Select, \r\n    TextField, \r\n    autocompleteClasses, \r\n    Box, \r\n    Container, \r\n    Stack, \r\n    Typography\r\n} from \"@mui/material\"\r\n// components\r\nimport { useForm } from \"react-hook-form\";\r\nimport axios from 'axios';\r\nimport { useState,useEffect } from 'react';\r\nimport { useSettingsContext } from '../../components/settings';\r\n\r\n\r\n\r\n// @mui\r\n\r\n\r\n\r\n\r\n\r\n\r\nimport { variables } from \"../../variables\";\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function NewJOb(props) {\r\n\r\n    const {insernewdata,setOpenPopupForm} = props\r\n    const { register, handleSubmit, formState: { errors } } = useForm({\r\n        mode: \"onBlur\"\r\n    });\r\n  const { themeStretch } = useSettingsContext();\r\n\r\n  \r\n  const [job, setJobs] = useState([]);\r\n  const [dep, setDeps] = useState([]);\r\n   \r\nconst getJobs = async()=>\r\n{\r\n  try \r\n  {\r\n    const Endpoint = `Jobs`\r\n    const data = await axios.get(variables.API_URL+Endpoint);\r\n \r\n   setJobs(data.data)\r\n    \r\n  }\r\n  catch (e){\r\n    console.log(e);\r\n  }\r\n}\r\n\r\nconst getDepartment = async()=>\r\n{\r\n  try \r\n  {\r\n    const Endpoint = `Department`\r\n    const data = await axios.get(variables.API_URL+Endpoint);\r\n \r\n   setDeps(data.data)\r\n    \r\n  }\r\n  catch (e){\r\n    console.log(e);\r\n  }\r\n}\r\n\r\nconst [Titles, setTitles] = useState([]);\r\n   \r\nconst getTitles = async()=>\r\n{\r\n  try \r\n  {\r\n    const Endpoint = `Titles`\r\n    const data = await axios.get(variables.API_URL+Endpoint);\r\n \r\n   setTitles(data.data)\r\n    \r\n  }\r\n  catch (e){\r\n    console.log(e);\r\n  }\r\n}\r\n\r\nuseEffect(()=>{\r\n getTitles();\r\n  getJobs();\r\n  getDepartment();\r\n},[]);\r\n\r\n    const registerOptions = {\r\n      \r\n        jobid: { required: \"Name is required\" },\r\n        departmentId: { required: \"Email is required\" },\r\n        activationDate: { required: \"Email is required\" },\r\n        retirement: { required: \"Email is required\" },\r\n        isInternship: { required: \"Email is required\" },\r\n        reportsToPossion: {required: \"Possition is required\"}\r\n    };\r\n  \r\n    function handleRegistration(values) {\r\n        insernewdata(values)\r\n    }\r\n\r\n    \r\n    function handleError(event) { }\r\n    const label = { inputProps: { 'aria-label': 'Switch demo' } };\r\n\r\n    const handleCancel = () => {\r\n       \r\n        setOpenPopupForm(false)\r\n    }\r\n\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <title> HR- Buildings</title>\r\n      </Helmet>\r\n\r\n      <Container maxWidth={themeStretch ? false : 'xl'}>\r\n        \r\n      <Box\r\n                sx={{ padding: '10px', borderRadius: '10px' }}\r\n            >\r\n                <form onSubmit={handleSubmit(handleRegistration, handleError)}>\r\n                    \r\n                             \r\n                    <Stack direction=\"row\" spacing={2}>\r\n                    <Box flex={2}>\r\n                        <FormControl sx={{ width: '238px' }}>\r\n                        <InputLabel id=\"demo-simple-select-label\">Select Job</InputLabel>\r\n                        <Select\r\n                  \r\n                            labelId=\"demo-simple-select-label\"\r\n                            id=\"jobid\"\r\n                            label=\"Select Job\"\r\n                        \r\n                           {...register('jobid', {required: true})}\r\n                        >\r\n\r\n                            {\r\n                                \r\n                                job.map(rec=>\r\n                                  \r\n                              <MenuItem value={rec.id}>{rec.job}</MenuItem>\r\n                                    )\r\n                            }\r\n                            \r\n                            \r\n                        </Select>\r\n                        <Typography sx={{color:'red'}}>{errors.jobid?.type === \"required\" && \"Select job\"}</Typography>\r\n                    </FormControl>\r\n                    </Box>\r\n                    <Box flex={2}>\r\n                        <FormControl sx={{ width: '238px' }}>\r\n                        <InputLabel id=\"demo-simple-select-label\">Select Department</InputLabel>\r\n                        <Select\r\n                       \r\n                            labelId=\"demo-simple-select-label\"\r\n                            id=\"departmentId\"\r\n                            label=\"Select Job\"\r\n                        \r\n                           {...register('departmentId', {required: true})}\r\n                        >\r\n\r\n                            {\r\n                                \r\n                                dep.map(rec=>\r\n                                  \r\n                              <MenuItem value={rec.id}>{rec.depName}</MenuItem>\r\n                                    )\r\n                            }\r\n                            \r\n                            \r\n                        </Select>\r\n                        <Typography sx={{color:'red'}}>{errors.departmentId?.type === \"required\" && \"Select department\"}</Typography>\r\n                    </FormControl>\r\n                    </Box>\r\n                    </Stack>\r\n\r\n                    <br />\r\n                   <Stack direction=\"row\" spacing={2}>\r\n                   <Box flex={2}>\r\n                   <TextField\r\n                             \r\n                                id=\"activationDate\"\r\n                                label=\"Activation Date\"\r\n                                type=\"date\"\r\n                                defaultValue={Date.now()}\r\n                                sx={{ width: '238px' }}\r\n                                InputLabelProps={{\r\n                                    shrink: true,\r\n                                }}\r\n                                {...register('activationDate', {required: true})}\r\n                            />\r\n                            <Typography sx={{color:'red'}}>{errors.activationDate?.type === \"required\" && \"Activation date is required\"}</Typography>\r\n                    </Box>\r\n                    <Box flex={2}>\r\n                        <FormControl sx={{ width: '238px' }}>\r\n                        <InputLabel id=\"demo-simple-select-label\">Report To</InputLabel>\r\n                        <Select\r\n                     \r\n                            labelId=\"demo-simple-select-label\"\r\n                            id=\"reportsToPossion\"\r\n                            label=\"Select Report To\"\r\n                        \r\n                           {...register('reportsToPossion', {required: true})}\r\n                        >\r\n\r\n                            {\r\n                                \r\n                                Titles.map(rec=>\r\n                                  \r\n                              <MenuItem value={rec.title}>{rec.title}</MenuItem>\r\n                                    )\r\n                            }\r\n                            \r\n                            \r\n                        </Select>\r\n                        <Typography sx={{color:'red'}}>{errors.reportsToPossion?.type === \"required\" && \"Select Supervisor\"}</Typography>\r\n                    </FormControl>\r\n                    </Box>\r\n\r\n                    \r\n                     \r\n                    </Stack>\r\n                    <br/>\r\n                    <Stack direction=\"row\" spacing={2}>\r\n                    <Box flex={2}>\r\n                        <FormControl sx={{ width: '238px' }}>\r\n                        <InputLabel id=\"demo-simple-select-label\">Retirement</InputLabel>\r\n                        <Select\r\n                     \r\n                            labelId=\"demo-simple-select-label\"\r\n                            id=\"retirement\"\r\n                            label=\"Select retirement\"\r\n                        \r\n                           {...register('retirement', {required: true})}\r\n                        >\r\n\r\n                        \r\n                                \r\n                               \r\n                                  \r\n                              <MenuItem value=\"Yes\">Yes</MenuItem>\r\n                              <MenuItem value=\"No\">No</MenuItem>\r\n                        \r\n                            \r\n                            \r\n                        </Select>\r\n                        <Typography sx={{color:'red'}}>{errors.retirement?.type === \"required\" && \"Select duration\"}</Typography>\r\n                    </FormControl>\r\n                    </Box>\r\n                    <Box flex={2}>\r\n                        Is Internship\r\n                            <Switch {...label}\r\n                                {...register('isInternship')}\r\n                            />\r\n                        </Box>\r\n                      </Stack>\r\n                  <br/>\r\n                    <Stack direction=\"row\" spacing={2}>\r\n                    <Button variant=\"contained\"\r\n                   onClick={handleSubmit(handleRegistration, handleError)}\r\n                    >Save</Button>\r\n                    <Button onClick={handleCancel} color=\"error\">Cancel</Button>\r\n\r\n                    </Stack>\r\n                   \r\n                </form>\r\n            </Box>\r\n\r\n      </Container>\r\n    </>\r\n  );\r\n}\r\n","import { Helmet } from 'react-helmet-async';\r\n// @mui\r\nimport { \r\n    Button, \r\n    Switch,\r\n    InputLabel, \r\n    MenuItem, \r\n    FormControl, \r\n    Select, \r\n    TextField, \r\n    autocompleteClasses, \r\n    Box, \r\n    Container, \r\n    Stack \r\n} from \"@mui/material\"\r\n// components\r\nimport { useForm } from \"react-hook-form\";\r\nimport axios from 'axios';\r\nimport { useState,useEffect } from 'react';\r\nimport { useSettingsContext } from '../../components/settings';\r\n\r\n\r\n\r\n// @mui\r\n\r\n\r\n\r\n\r\n\r\n\r\nimport { variables } from \"../../variables\";\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function EditForm(props) {\r\n\r\n    const {insertdata,setOpenPopup,recordForEdit} = props\r\n    const { register, handleSubmit, formState: { errors } } = useForm({\r\n        mode: \"onBlur\"\r\n    });\r\n  const { themeStretch } = useSettingsContext();\r\n\r\n  \r\n  const [job, setJobs] = useState([]);\r\n  const [dep, setDeps] = useState([]);\r\n   \r\nconst getJobs = async()=>\r\n{\r\n  try \r\n  {\r\n    const Endpoint = `Jobs`\r\n    const data = await axios.get(variables.API_URL+Endpoint);\r\n \r\n   setJobs(data.data)\r\n    \r\n  }\r\n  catch (e){\r\n    console.log(e);\r\n  }\r\n}\r\n\r\nconst getDepartment = async()=>\r\n{\r\n  try \r\n  {\r\n    const Endpoint = `Department`\r\n    const data = await axios.get(variables.API_URL+Endpoint);\r\n \r\n   setDeps(data.data)\r\n    \r\n  }\r\n  catch (e){\r\n    console.log(e);\r\n  }\r\n}\r\n\r\nconst [Titles, setTitles] = useState([]);\r\n   \r\nconst getTitles = async()=>\r\n{\r\n  try \r\n  {\r\n    const Endpoint = `Titles`\r\n    const data = await axios.get(variables.API_URL+Endpoint);\r\n \r\n   setTitles(data.data)\r\n    \r\n  }\r\n  catch (e){\r\n    console.log(e);\r\n  }\r\n}\r\n\r\nuseEffect(()=>{\r\n getTitles();\r\n  getJobs();\r\n  getDepartment();\r\n},[]);\r\n\r\n    const registerOptions = {\r\n      id:0,\r\n        jobid: { required: \"Name is required\" },\r\n        departmentId: { required: \"Email is required\" },\r\n        activationDate: { required: \"Email is required\" },\r\n        retirement: { required: \"Email is required\" },\r\n        isInternship: { required: \"Email is required\" },\r\n        reportsToPossion: {required: \"Possition is required\"}\r\n    };\r\n  \r\n    function handleRegistration(values) {\r\n        insertdata(values)\r\n    }\r\n\r\n    \r\n    function handleError(event) { }\r\n    const label = { inputProps: { 'aria-label': 'Switch demo' } };\r\n\r\n    const handleCancel = () => {\r\n       \r\n        setOpenPopup(false)\r\n    }\r\n\r\n \r\n\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <title> HR- Buildings</title>\r\n      </Helmet>\r\n\r\n      <Container maxWidth={themeStretch ? false : 'xl'}>\r\n        \r\n      <Box\r\n                sx={{ padding: '10px', borderRadius: '10px' }}\r\n            >\r\n                <form onSubmit={handleSubmit(handleRegistration, handleError)}>\r\n                    \r\n                             \r\n                    <Stack direction=\"row\" spacing={2}>\r\n                    <Box flex={2}>\r\n                    <TextField\r\n                                required\r\n                                type=\"number\"\r\n                                id=\"id\"\r\n                                name=\"id\"\r\n                                sx={{ width: '238px' }}\r\n                                InputLabelProps={{\r\n                                    shrink: true,\r\n                                }}\r\n                                defaultValue={recordForEdit.id}\r\n                                {...register('id', registerOptions.id)}\r\n                            />\r\n                            </Box>\r\n                    <Box flex={2}>\r\n                        <FormControl sx={{ width: '238px' }}>\r\n                        <InputLabel id=\"demo-simple-select-label\">Select Job</InputLabel>\r\n                        <Select\r\n                  \r\n                            labelId=\"demo-simple-select-label\"\r\n                            id=\"jobid\"\r\n                            label=\"Select Job\"\r\n                            defaultValue={recordForEdit.jobid}\r\n                           {...register('jobid', registerOptions.jobid)}\r\n                        >\r\n\r\n                            {\r\n                                \r\n                                job.map(rec=>\r\n                                  \r\n                              <MenuItem value={rec.id}>{rec.job}</MenuItem>\r\n                                    )\r\n                            }\r\n                            \r\n                            \r\n                        </Select>\r\n                    </FormControl>\r\n                    </Box>\r\n                    \r\n                    </Stack>\r\n\r\n                    <br />\r\n                   <Stack direction=\"row\" spacing={2}>\r\n                   <Box flex={2}>\r\n                        <FormControl sx={{ width: '238px' }}>\r\n                        <InputLabel id=\"demo-simple-select-label\">Select Department</InputLabel>\r\n                        <Select\r\n                       \r\n                            labelId=\"demo-simple-select-label\"\r\n                            id=\"departmentId\"\r\n                            label=\"Select Job\"\r\n                            defaultValue={recordForEdit.departmentId}\r\n                           {...register('departmentId', registerOptions.departmentId)}\r\n                        >\r\n\r\n                            {\r\n                                \r\n                                dep.map(rec=>\r\n                                  \r\n                              <MenuItem value={rec.id}>{rec.depName}</MenuItem>\r\n                                    )\r\n                            }\r\n                            \r\n                            \r\n                        </Select>\r\n                    </FormControl>\r\n                    </Box>\r\n                   <Box flex={2}>\r\n                   <TextField\r\n                             \r\n                                id=\"activationDate\"\r\n                                label=\"Activation Date\"\r\n                                type=\"date\"\r\n                                defaultValue={new Date(recordForEdit.activationDate).toISOString().slice(0, 10)}\r\n                                sx={{ width: '238px' }}\r\n                                InputLabelProps={{\r\n                                    shrink: true,\r\n                                }}\r\n                                {...register('activationDate',registerOptions.activationDate)}\r\n                            />\r\n                    </Box>\r\n\r\n                    </Stack>\r\n                    <br/>\r\n                    <Stack direction=\"row\" spacing={2}>\r\n                    <Box flex={2}>\r\n                        <FormControl sx={{ width: '238px' }}>\r\n                        <InputLabel id=\"demo-simple-select-label\">Report To</InputLabel>\r\n                        <Select\r\n                     \r\n                            labelId=\"demo-simple-select-label\"\r\n                            id=\"reportsToPossion\"\r\n                            label=\"Select Report To\"\r\n                            defaultValue={recordForEdit.reportsToPossion}\r\n                           {...register('reportsToPossion', registerOptions.reportsToPossion)}\r\n                        >\r\n\r\n                            {\r\n                                \r\n                                Titles.map(rec=>\r\n                                  \r\n                              <MenuItem value={rec.title}>{rec.title}</MenuItem>\r\n                                    )\r\n                            }\r\n                            \r\n                            \r\n                        </Select>\r\n                    </FormControl>\r\n                    </Box>\r\n                    <Box flex={2}>\r\n                        <FormControl sx={{ width: '238px' }}>\r\n                        <InputLabel id=\"demo-simple-select-label\">Retirement</InputLabel>\r\n                        <Select\r\n                     \r\n                            labelId=\"demo-simple-select-label\"\r\n                            id=\"retirement\"\r\n                            label=\"Select retirement\"\r\n                            defaultValue={recordForEdit.retirement}\r\n                           {...register('retirement', registerOptions.retirement)}\r\n                        >\r\n\r\n                        \r\n                                \r\n                               \r\n                                  \r\n                              <MenuItem value=\"Yes\">Yes</MenuItem>\r\n                              <MenuItem value=\"No\">No</MenuItem>\r\n                        \r\n                            \r\n                            \r\n                        </Select>\r\n                    </FormControl>\r\n                    </Box>\r\n                    </Stack>\r\n                    <Stack direction=\"row\" spacing={2}>\r\n                        <Box flex={2}>\r\n                        Is Internship\r\n                            <Switch {...label}\r\n                             checked={recordForEdit.isInternship}\r\n                                {...register('isInternship')}\r\n                            />\r\n                        </Box>\r\n\r\n                    </Stack>\r\n                    <Button variant=\"contained\"\r\n                   onClick={handleSubmit(handleRegistration, handleError)}\r\n                    >Save</Button>\r\n                    <Button onClick={handleCancel} color=\"error\">Cancel</Button>\r\n                </form>\r\n            </Box>\r\n\r\n      </Container>\r\n    </>\r\n  );\r\n}\r\n","import * as React from 'react';\r\nimport { useTheme } from '@mui/material/styles';\r\nimport { Component,forwardRef, useState, useEffect,useReducer } from \"react\";\r\nimport Box from '@mui/material/Box';\r\nimport Table from '@mui/material/Table';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport TableContainer from '@mui/material/TableContainer';\r\nimport TableFooter from '@mui/material/TableFooter';\r\nimport TablePagination from '@mui/material/TablePagination';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport TableHead from '@mui/material/TableHead';\r\nimport DeleteIcon from '@mui/icons-material/Delete';\r\nimport EditIcon from '@mui/icons-material/ModeEditOutlineOutlined';\r\nimport Paper from '@mui/material/Paper';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport FirstPageIcon from '@mui/icons-material/FirstPage';\r\nimport KeyboardArrowLeft from '@mui/icons-material/KeyboardArrowLeft';\r\nimport KeyboardArrowRight from '@mui/icons-material/KeyboardArrowRight';\r\nimport LastPageIcon from '@mui/icons-material/LastPage';\r\nimport Button from '@mui/material/Button'\r\nimport axios from 'axios';\r\n\r\nimport AddIcon from '@mui/icons-material/AddBox';\r\n\r\nimport NewPossition from './NewPossition';\r\n\r\nimport PopupAdd from '../../components/PopupAdd';\r\n\r\nimport EditForm from './EditForm'\r\n\r\nimport { variables } from \"../../variables\";\r\nimport Popup from '../../components/Popup';\r\nimport CustomizedDialogs  from '../../components/Dialog/CustomizedDialogs'\r\n\r\n\r\n\r\n\r\n\r\nimport Notification from '../../components/Notifications';\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\ninterface TablePaginationActionsProps {\r\n  count: number;\r\n  page: number;\r\n  rowsPerPage: number;\r\n  onPageChange: (\r\n    event: React.MouseEvent<HTMLButtonElement>,\r\n    newPage: number,\r\n  ) => void;\r\n}\r\n\r\nfunction TablePaginationActions(props: TablePaginationActionsProps) {\r\n  const theme = useTheme();\r\n  const { count, page, rowsPerPage, onPageChange } = props;\r\n\r\n  const handleFirstPageButtonClick = (\r\n    event: React.MouseEvent<HTMLButtonElement>,\r\n  ) => {\r\n    onPageChange(event, 0);\r\n  };\r\n\r\n  const handleBackButtonClick = (event: React.MouseEvent<HTMLButtonElement>) => {\r\n    onPageChange(event, page - 1);\r\n  };\r\n\r\n  const handleNextButtonClick = (event: React.MouseEvent<HTMLButtonElement>) => {\r\n    onPageChange(event, page + 1);\r\n  };\r\n\r\n  const handleLastPageButtonClick = (event: React.MouseEvent<HTMLButtonElement>) => {\r\n    onPageChange(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\r\n  };\r\n\r\n  return (\r\n    <Box sx={{ flexShrink: 0, ml: 2.5 }}>\r\n      <IconButton\r\n        onClick={handleFirstPageButtonClick}\r\n        disabled={page === 0}\r\n        aria-label=\"first page\"\r\n      >\r\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={handleBackButtonClick}\r\n        disabled={page === 0}\r\n        aria-label=\"previous page\"\r\n      >\r\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={handleNextButtonClick}\r\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n        aria-label=\"next page\"\r\n      >\r\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={handleLastPageButtonClick}\r\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n        aria-label=\"last page\"\r\n      >\r\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\r\n      </IconButton>\r\n    </Box>\r\n  );\r\n}\r\n\r\nfunction createData(name: string, calories: number, fat: number) {\r\n  return { name, calories, fat };\r\n}\r\n\r\n\r\nexport default function Possitions() {\r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\r\n  const [rows, setRows]=useState([]);\r\n  const [recordForEdit, SetRecordForEdit]= useState(null)\r\n  const [notify, setNotify]=useState({isOpen:false, message:'', type:''})\r\n  const [openPopup, setOpenPopup]=useState(false)\r\n  const [openPopupForm, setOpenPopupForm]=React.useState(false);\r\n  const [reducerValue,forceUpdate]=useReducer(x=>x+1,0)\r\n\r\n  // Reading data\r\n\r\n  const getJobs = async()=>\r\n  {\r\n    try \r\n    {\r\n      const Endpoint = `Position`\r\n      const data = await axios.get(variables.API_URL+Endpoint);\r\n  \r\n   \r\n     setRows(data.data)\r\n      \r\n    }\r\n    catch (e){\r\n      console.log(e);\r\n    }\r\n  }\r\n  \r\n  // Displaying Data\r\n  \r\n  useEffect(()=>{\r\n    getJobs();\r\n  },[reducerValue]);\r\n\r\n\r\n\r\n // Paginations\r\n  const emptyRows =\r\n    page > 0 ? Math.max(0, (1 + page) * rowsPerPage - rows.length) : 0;\r\n\r\n  const handleChangePage = (\r\n    event: React.MouseEvent<HTMLButtonElement> | null,\r\n    newPage: number,\r\n  ) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (\r\n    event: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>,\r\n  ) => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  };\r\n\r\n  // Open in Popup Modal\r\n\r\n  const openInPopup = row =>{\r\n      SetRecordForEdit(row)\r\n      setOpenPopup(true)\r\n  }\r\n\r\n  function handleOnClick() {\r\n    // Similar to this.setState({ fruit: 'orange' })\r\n    setOpenPopup(true)\r\n  }\r\n\r\n  // Updating Database\r\n  const insertdata = (values)=>{\r\n\r\n    const Endpoint = `Position`\r\n    axios.put(variables.API_URL+Endpoint,{id:values.id,jobid: values.jobid,departmentId:values.departmentId,activationDate:values.activationDate,retirement:values.retirement,isInternship:values.isInternship,reportsToPossion:values.reportsToPossion})\r\n    .then((response)=>{\r\n      setNotify({\r\n        isOpen:true,\r\n        message: 'Submitted Successfully',\r\n        type: 'success'\r\n    } \r\n        )\r\n        setOpenPopup(false);\r\n      \r\n    })\r\n    .catch((e)=>{\r\n        console.log(\"Hello\")\r\n    })\r\n  }\r\n\r\n  // Insert New Job\r\n\r\n  const insernewdata = (values)=>{\r\n    \r\n  const Endpoint = `Position`\r\n\r\n  axios.post(variables.API_URL+Endpoint,{jobid: values.jobid,departmentId:values.departmentId,activationDate:values.activationDate,retirement:values.retirement,isInternship:values.isInternship,reportsToPossion:values.reportsToPossion})\r\n  .then((response)=>{\r\n  \r\n      setNotify({\r\n          isOpen:true,\r\n          message: 'Submitted Successfully',\r\n          type: 'success'\r\n      } \r\n          )\r\n          setOpenPopupForm(false);\r\n     \r\n  })\r\n  .catch((e)=>{\r\n      console.log(e)\r\n  })\r\n  }\r\n  \r\n\r\n  // Deleting Data\r\n\r\n  const DeleteRow = (row) => {\r\n\r\n    const Endpoint = `Position/${row.id}`\r\n \r\n    axios.delete(variables.API_URL+Endpoint)\r\n        .then(res => {\r\n          const dataDelete = [...rows];\r\n          const index = row.tableData.id;\r\n          dataDelete.splice(index, 1);\r\n          setRows([...dataDelete]);\r\n          setNotify({\r\n            isOpen:true,\r\n            message: 'Sucessfully Deleted',\r\n            type: 'error'\r\n        } \r\n            )\r\n        })\r\n        .catch(error => {\r\n          \r\n          console.log(\"Error\")\r\n        \r\n        })\r\n  }\r\n\r\n  return (\r\n    <>\r\n    <Button variant=\"outlined\" onClick={()=>setOpenPopupForm(true)}>\r\n        Add Posstion\r\n      </Button>\r\n    <TableContainer component={Paper}>\r\n    \r\n      <Table sx={{ minWidth: 500 }} aria-label=\"custom pagination table\">\r\n      <TableHead>\r\n                    <TableRow >\r\n                        <TableCell>ID</TableCell>\r\n                        <TableCell >Job</TableCell>\r\n                        <TableCell >Department</TableCell>\r\n                        <TableCell>Activation Date</TableCell>\r\n                        <TableCell>Retirement</TableCell>\r\n                        <TableCell>Is Internship</TableCell>\r\n                        <TableCell>Reports To</TableCell>\r\n                        <TableCell>Edit</TableCell>\r\n                        <TableCell>Delete</TableCell>\r\n                    </TableRow>\r\n                </TableHead>\r\n        <TableBody>\r\n          {(rowsPerPage > 0\r\n            ? rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n            : rows\r\n          ).map((row) => (\r\n            <TableRow key={row.id}>\r\n              <TableCell component=\"th\" scope=\"row\">\r\n                {row.id}\r\n              </TableCell>\r\n              <TableCell>\r\n                {row.job}\r\n              </TableCell>\r\n              <TableCell >\r\n                {row.department}\r\n              </TableCell>\r\n              <TableCell >\r\n                {row.activationDate}\r\n              </TableCell>\r\n              <TableCell >\r\n                {row.retirement}\r\n              </TableCell>\r\n              <TableCell >\r\n                {row.isInternship}\r\n              </TableCell>\r\n              <TableCell >\r\n                {row.reportsToPossion}\r\n              </TableCell>\r\n              <TableCell>\r\n                           \r\n<Button variant='outlined'onClick={()=>openInPopup(row)} startIcon={<EditIcon />} />\r\n\r\n\r\n              </TableCell>\r\n              <TableCell >\r\n              <Button variant=\"outlined\" onClick={()=>DeleteRow(row)} startIcon={<DeleteIcon />} color=\"error\"/>\r\n      \r\n    \r\n              </TableCell>\r\n              \r\n            </TableRow>\r\n          ))}\r\n          {emptyRows > 0 && (\r\n            <TableRow style={{ height: 53 * emptyRows }}>\r\n              <TableCell colSpan={6} />\r\n            </TableRow>\r\n          )}\r\n        </TableBody>\r\n        <TableFooter>\r\n          <TableRow>\r\n            <TablePagination\r\n              rowsPerPageOptions={[5, 10, 25, { label: 'All', value: -1 }]}\r\n              colSpan={3}\r\n              count={rows.length}\r\n              rowsPerPage={rowsPerPage}\r\n              page={page}\r\n              SelectProps={{\r\n                inputProps: {\r\n                  'aria-label': 'rows per page',\r\n                },\r\n                native: true,\r\n              }}\r\n              onPageChange={handleChangePage}\r\n              onRowsPerPageChange={handleChangeRowsPerPage}\r\n              ActionsComponent={TablePaginationActions}\r\n            />\r\n          </TableRow>\r\n        </TableFooter>\r\n      </Table>\r\n    </TableContainer>\r\n\r\n\r\n<Popup\r\nopenPopup={openPopup}\r\nsetOpenPopup={setOpenPopup}\r\ntitle=\"Edit Possition\"\r\n>\r\n<EditForm recordForEdit={recordForEdit} insertdata={insertdata} setOpenPopup={setOpenPopup}/>\r\n\r\n</Popup>\r\n\r\n<PopupAdd\r\nopenPopupForm={openPopupForm}\r\nsetOpenPopupForm={setOpenPopupForm}\r\ntitle=\"Add Possition\"\r\n>\r\n<NewPossition insernewdata={insernewdata} setOpenPopupForm={setOpenPopupForm}/>\r\n</PopupAdd>\r\n\r\n\r\n\r\n\r\n\r\n<Notification\r\n        notify={notify}\r\n        setNotify={setNotify}\r\n        />\r\n</>\r\n  );\r\n}","import * as React from 'react';\r\nimport Tabs from '@mui/material/Tabs';\r\nimport Tab from '@mui/material/Tab';\r\nimport Typography from '@mui/material/Typography';\r\nimport Box from '@mui/material/Box';\r\nimport Buildings from './Building/Buildings';\r\nimport Department  from './Departments/Department';\r\nimport Jobs from './Jobs/Jobs';\r\nimport Titles from './Titles/Titles'\r\nimport Positions from './Positions/Possitions';\r\n\r\ninterface TabPanelProps {\r\n  children?: React.ReactNode;\r\n  index: number;\r\n  value: number;\r\n}\r\n\r\nfunction TabPanel(props: TabPanelProps) {\r\n  const { children, value, index, ...other } = props;\r\n\r\n  return (\r\n    <div\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`simple-tabpanel-${index}`}\r\n      aria-labelledby={`simple-tab-${index}`}\r\n      {...other}\r\n    >\r\n      {value === index && (\r\n        <Box sx={{ p: 3 }}>\r\n          <Typography>{children}</Typography>\r\n        </Box>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction a11yProps(index: number) {\r\n  return {\r\n    id: `simple-tab-${index}`,\r\n    'aria-controls': `simple-tabpanel-${index}`,\r\n  };\r\n}\r\n\r\nexport default function SetUp() {\r\n  const [value, setValue] = React.useState(0);\r\n \r\n  const handleChange = (event: React.SyntheticEvent, newValue: number) => {\r\n    setValue(newValue);\r\n  };\r\n\r\n  return (\r\n    <Box sx={{ width: '100%' }}>\r\n       <Typography variant=\"h4\" component=\"h1\" paragraph>\r\n        Configurations\r\n        </Typography>\r\n      <Box sx={{ borderBottom: 1, borderColor: 'divider' }}>\r\n        <Tabs value={value} onChange={handleChange} aria-label=\"basic tabs example\">\r\n          <Tab label=\"Buildings\" {...a11yProps(0)} />\r\n          <Tab label=\"Departments\" {...a11yProps(1)} />\r\n          <Tab label=\"Titles\" {...a11yProps(3)} />\r\n          <Tab label=\"Jobs\" {...a11yProps(4)} />\r\n          <Tab label=\"Possitions\" {...a11yProps(5)} />\r\n        </Tabs>\r\n      </Box>\r\n      <TabPanel value={value} index={0}>\r\n       <Buildings />\r\n      </TabPanel>\r\n      <TabPanel value={value} index={1}>\r\n      <Department/>\r\n      </TabPanel>\r\n      <TabPanel value={value} index={2}>\r\n     <Titles/>\r\n      </TabPanel>\r\n\r\n      <TabPanel value={value} index={3}>\r\n      <Jobs/>\r\n      </TabPanel>\r\n\r\n      <TabPanel value={value} index={4}>\r\n      <Positions/>\r\n      </TabPanel>\r\n\r\n      <TabPanel value={value} index={5}>\r\n      <Buildings />\r\n      </TabPanel>\r\n    </Box>\r\n\r\n   \r\n  );\r\n}"],"names":["makeStyles","theme","table","marginTop","spacing","fontweight","color","white","backgroundColor","palette","primary","black","cursor","NewBuilding","props","inserdata","setOpenPopup","btnStyle","useState","isOpen","message","type","notify","setNotify","validationSchema","Yup","shape","buildingName","min","required","address","CancelHandle","Grid","Paper","elevation","style","padding","width","align","Typography","variant","initialValues","onSubmit","values","noValidate","as","TextField","name","label","fullWidth","error","errors","touched","helperText","Button","onClick","tableIcons","Add","forwardRef","ref","AddBox","Check","Clear","Delete","DeleteOutline","DetailPanel","ChevronRight","Edit","Export","SaveAlt","Filter","FilterList","FirstPage","LastPage","NextPage","PreviousPage","ChevronLeft","ResetSearch","Search","SortArrow","ArrowDownward","ThirdStateCheck","Remove","ViewColumn","columns","title","field","hidden","Buildings","themeStretch","useSettingsContext","Building","setBuilding","setIserror","errorMessages","setErrorMessages","React","openPopup","getBuildings","axios","variables","data","console","log","useEffect","Container","maxWidth","sx","margin","map","msg","i","mt","icons","options","headerStyle","rowStyle","border","editable","onRowUpdate","newData","oldData","Promise","resolve","errorList","push","length","then","res","dataUpdate","tableData","id","catch","handleRowUpdate","onRowDelete","Endpoint","dataDelete","index","splice","ErrorMessage","handleRowDelete","Popup","response","e","NewDepartment","depName","CancelHandel","Department","Departments","setDepartments","NewTitle","insertdata","Cancelhandle","Titles","setTitles","getTitles","NewJOb","insernewdata","setOpenPopupForm","useForm","mode","register","handleSubmit","formState","job","setJobs","dep","setDeps","getJobs","getDepartment","handleRegistration","handleError","event","Box","borderRadius","Stack","direction","flex","FormControl","InputLabel","Select","labelId","rec","MenuItem","value","jobid","departmentId","defaultValue","Date","now","InputLabelProps","shrink","activationDate","reportsToPossion","retirement","Switch","inputProps","EditForm","recordForEdit","registerOptions","toISOString","slice","checked","isInternship","TablePaginationActions","useTheme","count","page","rowsPerPage","onPageChange","flexShrink","ml","IconButton","disabled","KeyboardArrowRight","KeyboardArrowLeft","Math","ceil","max","Possitions","setPage","setRowsPerPage","rows","setRows","SetRecordForEdit","openPopupForm","useReducer","x","reducerValue","emptyRows","TableContainer","component","Table","minWidth","TableHead","TableRow","TableCell","TableBody","row","scope","department","openInPopup","startIcon","DeleteRow","height","colSpan","TableFooter","TablePagination","rowsPerPageOptions","SelectProps","native","newPage","onRowsPerPageChange","parseInt","target","ActionsComponent","PopupAdd","TabPanel","children","other","role","p","a11yProps","SetUp","setValue","paragraph","borderBottom","borderColor","Tabs","onChange","newValue","Tab","Jobs"],"sourceRoot":""}