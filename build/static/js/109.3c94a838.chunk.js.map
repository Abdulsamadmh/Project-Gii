{"version":3,"file":"static/js/109.3c94a838.chunk.js","mappings":"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","sources":["components/Dialog/CustomizedDialogs.js","components/Notifications.js","components/Popup.js","components/PopupAdd.js","pages/Jobs/EditForm.js","pages/Jobs/Newjob.js","pages/Jobs/Jobs.js","variables.js"],"sourcesContent":["import * as React from 'react';\r\nimport Button from '@mui/material/Button';\r\nimport { styled } from '@mui/material/styles';\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport DialogActions from '@mui/material/DialogActions';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport CloseIcon from '@mui/icons-material/Close';\r\nimport Typography from '@mui/material/Typography';\r\n\r\nconst BootstrapDialog = styled(Dialog)(({ theme }) => ({\r\n  '& .MuiDialogContent-root': {\r\n    padding: theme.spacing(2),\r\n  },\r\n  '& .MuiDialogActions-root': {\r\n    padding: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nexport interface DialogTitleProps {\r\n  id: string;\r\n  children?: React.ReactNode;\r\n  onClose: () => void;\r\n}\r\n\r\nfunction BootstrapDialogTitle(props: DialogTitleProps) {\r\n  const { children, onClose, ...other } = props;\r\n\r\n  return (\r\n    <DialogTitle sx={{ m: 0, p: 2 }} {...other}>\r\n      {children}\r\n      {onClose ? (\r\n        <IconButton\r\n          aria-label=\"close\"\r\n          onClick={onClose}\r\n          sx={{\r\n            position: 'absolute',\r\n            right: 8,\r\n            top: 8,\r\n            color: (theme) => theme.palette.grey[500],\r\n          }}\r\n        >\r\n          <CloseIcon />\r\n        </IconButton>\r\n      ) : null}\r\n    </DialogTitle>\r\n  );\r\n}\r\n\r\nexport default function CustomizedDialogs({children,title}) {\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Button variant=\"outlined\" onClick={handleClickOpen}>\r\n        New Building\r\n      </Button>\r\n      <BootstrapDialog\r\n        onClose={handleClose}\r\n        aria-labelledby=\"customized-dialog-title\"\r\n        open={open}\r\n      >\r\n        <BootstrapDialogTitle id=\"customized-dialog-title\" onClose={handleClose}>\r\n         {title}\r\n        </BootstrapDialogTitle>\r\n        <DialogContent dividers>\r\n         {children}\r\n        </DialogContent>\r\n        \r\n      </BootstrapDialog>\r\n    </div>\r\n  );\r\n}\r\n","import * as React from 'react';\r\n\r\nimport { Snackbar,Alert } from '@mui/material';\r\nimport vertical from './nav-section/vertical';\r\nimport horizontal from './nav-section/horizontal';\r\n\r\n\r\nexport default function Notifications(props) {\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n    const { notify, setNotify} = props\r\n\r\n    \r\n  const handleClose = (event?: React.SyntheticEvent | Event, reason?: string) => {\r\n    if (reason === 'clickaway') {\r\n      return;\r\n    }\r\n\r\n    setOpen(false);\r\n  };\r\n\r\n\r\n  return (\r\n   <Snackbar\r\n   open={notify.isOpen}\r\n   autoHideDuration={6000}\r\n   anchorOrigin={{vertical:'top', horizontal:'right'}}\r\n   >\r\n    <Alert severity={notify.type}>\r\n{notify.message}\r\n    </Alert>\r\n   </Snackbar>\r\n  \r\n\r\n  );\r\n}\r\n","import React from 'react'\r\nimport { Dialog,DialogTitle,DialogContent } from '@mui/material';\r\n\r\nexport default function Popup(props) {\r\n\r\n    const {title,children,openPopup,setOpenPopup} = props;\r\n  return (\r\n    <Dialog open={openPopup} \r\n    aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\"\r\n        maxWidth=\"lg\"\r\n        \r\n    >\r\n        <DialogTitle>\r\n            {title}\r\n        </DialogTitle>\r\n        <DialogContent>\r\n            {children}\r\n        </DialogContent>\r\n    </Dialog>\r\n  );\r\n}\r\n","import React from 'react'\r\nimport { Dialog,DialogTitle,DialogContent } from '@mui/material';\r\n\r\nexport default function PopupAdd(props) {\r\n\r\n    const {title,children,openPopupForm,setOpenPopupForm} = props;\r\n  return (\r\n    <Dialog open={openPopupForm} \r\n    aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\"\r\n    >\r\n        <DialogTitle>\r\n            {title}\r\n        </DialogTitle>\r\n        <DialogContent>\r\n            {children}\r\n        </DialogContent>\r\n    </Dialog>\r\n  );\r\n}\r\n","import { useState,useEffect } from 'react';\r\nimport { Helmet } from 'react-helmet-async';\r\n// @mui\r\nimport axios from 'axios';\r\n\r\nimport { useForm } from \"react-hook-form\";\r\nimport { \r\n    Button, \r\n    Switch,\r\n    InputLabel, \r\n    MenuItem, \r\n    FormControl, \r\n    Select, \r\n    TextField, \r\n    autocompleteClasses, \r\n    Box, \r\n    Container, \r\n    Stack \r\n} from \"@mui/material\"\r\nimport { useSettingsContext } from '../../components/settings/SettingsContext';\r\n\r\nimport { variables } from \"../../variables\";\r\n\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function EditForm(props) {\r\n\r\n    const {recordForEdit,inserdata,setOpenPopup} = props\r\n    const { register, handleSubmit, formState: { errors } } = useForm({\r\n        mode: \"onBlur\"\r\n    });\r\n\r\n    const { themeStretch } = useSettingsContext();\r\n\r\n  const [Titles, setTitles] = useState([]);\r\n   \r\nconst getTitles = async()=>\r\n{\r\n  try \r\n  {\r\n    const Endpoint = `Titles`\r\n    const data = await axios.get(variables.API_URL+Endpoint);\r\n \r\n   setTitles(data.data)\r\n    \r\n  }\r\n  catch (e){\r\n    console.log(e);\r\n  }\r\n}\r\n\r\nuseEffect(()=>{\r\n  getTitles();\r\n},[]);\r\n\r\n    const registerOptions = {\r\n        id:0,\r\n        job: { required: \"Name is required\" },\r\n        description: { required: \"Email is required\" },\r\n        fte: { required: \"Email is required\" },\r\n        titleid: { required: \"Email is required\" },\r\n        maximumposition: { required: \"Email is required\" },\r\n      \r\n    };\r\n  \r\n    function handleRegistration(values) {\r\n       inserdata(values)\r\n    }\r\n\r\n    const handleCancel = () => {\r\n       \r\n      setOpenPopup(false)\r\n  }\r\n\r\n    function handleError(event) { }\r\n    const label = { inputProps: { 'aria-label': 'Switch demo' } };\r\n\r\n    \r\n\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <title> Dahabshiil | Hire</title>\r\n      </Helmet>\r\n\r\n      <Container maxWidth={themeStretch ? false : 'xl'}>\r\n      \r\n       \r\n      <Box\r\n                sx={{ padding: '10px', borderRadius: '10px' }}\r\n            >\r\n                <form onSubmit={handleSubmit(handleRegistration, handleError)}>\r\n                    <Stack direction=\"row\" spacing={2}>\r\n                    <TextField\r\n                                required\r\n                                type=\"number\"\r\n                                id=\"id\"\r\n                                name=\"id\"\r\n                                sx={{ width: '238px' }}\r\n                                InputLabelProps={{\r\n                                    shrink: true,\r\n                                }}\r\n                                defaultValue={recordForEdit.id}\r\n                                {...register('id', registerOptions.id)}\r\n                            />\r\n                            <TextField\r\n                                required\r\n                                id=\"job\"\r\n                                label=\"Job\"\r\n                                name=\"job\"\r\n                                sx={{ width: '238'}}\r\n                                InputLabelProps={{\r\n                                    shrink: true,\r\n                                }}\r\n                                defaultValue={recordForEdit.job}\r\n                                {...register('job', registerOptions.job)}\r\n                            />\r\n                     \r\n                        \r\n                     \r\n                    </Stack>\r\n                    <br/>\r\n                    <Stack direction=\"row\" spacing={2}>\r\n                      \r\n                    <TextField\r\n                                required\r\n                                id=\"description\"\r\n                                label=\"Description\"\r\n                                name=\"job\"\r\n                                sx={{ width: 300 }}\r\n                                InputLabelProps={{\r\n                                    shrink: true,\r\n                                }}\r\n                                defaultValue={recordForEdit.description}\r\n                                {...register('description', registerOptions.description)}\r\n                            />\r\n\r\n                            \r\n                      <TextField\r\n                          required\r\n                          id=\"fte\"\r\n                          label=\"FTE\"\r\n                          name=\"fte\"\r\n                          sx={{ width: 300 }}\r\n                          InputLabelProps={{\r\n                              shrink: true,\r\n                          }}\r\n                          defaultValue={recordForEdit.fte}\r\n                          {...register('fte', registerOptions.fte)}\r\n                      />\r\n               \r\n                  \r\n                      \r\n               \r\n              </Stack>\r\n                                <br/>\r\n                    <Stack direction=\"row\" spacing={2}>\r\n                      \r\n                    <TextField\r\n                          required\r\n                          id=\"maximumposition\"\r\n                          label=\"Max Possitions\"\r\n                          name=\"maximumposition\"\r\n                          sx={{ width: '238px' }}\r\n                          InputLabelProps={{\r\n                              shrink: true,\r\n                          }}\r\n\r\n                          defaultValue={recordForEdit.maximumposition}\r\n                          {...register('maximumposition', registerOptions.maximumposition)}\r\n                      />\r\n\r\n                    <Box flex={2}>\r\n                        <FormControl sx={{ width: '238px' }}>\r\n                        <InputLabel id=\"demo-simple-select-label\">Select Titels</InputLabel>\r\n                        <Select\r\n                            labelId=\"demo-simple-select-label\"\r\n                            id=\"titleid\"\r\n                            label=\"Select Titels\"\r\n                           defaultValue={recordForEdit.titleid}\r\n                           {...register('titleid', registerOptions.titleid)}\r\n                        >\r\n\r\n                            {\r\n                                \r\n                                Titles.map(rec=>\r\n                                  \r\n                              <MenuItem value={rec.id}>{rec.title}</MenuItem>\r\n                                    )\r\n                            }\r\n                            \r\n                            \r\n                        </Select>\r\n                    </FormControl>\r\n                    </Box>\r\n                    \r\n                    </Stack>\r\n                    <br />\r\n                   \r\n                    \r\n                    <br />\r\n                    \r\n                    <Button variant=\"contained\"\r\n                   onClick={handleSubmit(handleRegistration, handleError)}\r\n                    >Save</Button>\r\n                    <Button onClick={handleCancel} color=\"error\">Cancel</Button>\r\n                </form>\r\n            </Box>\r\n\r\n\r\n      </Container>\r\n    </>\r\n  );\r\n}\r\n","import { Helmet } from 'react-helmet-async';\r\n// @mui\r\nimport { \r\n    Button, \r\n    Switch,\r\n    InputLabel, \r\n    MenuItem, \r\n    FormControl, \r\n    Select, \r\n    TextField, \r\n    autocompleteClasses, \r\n    Box, \r\n    Container, \r\n    Stack \r\n} from \"@mui/material\"\r\n// components\r\nimport { useForm } from \"react-hook-form\";\r\nimport axios from 'axios';\r\nimport { useState,useEffect } from 'react';\r\nimport { useSettingsContext } from '../../components/settings';\r\n\r\n\r\n\r\n// @mui\r\n\r\n\r\n\r\n\r\n\r\n\r\nimport { variables } from \"../../variables\";\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function NewJOb(props) {\r\n\r\n    const {insernewdata,setOpenPopupForm} = props\r\n    const { register, handleSubmit, formState: { errors } } = useForm({\r\n        mode: \"onBlur\"\r\n    });\r\n  const { themeStretch } = useSettingsContext();\r\n\r\n  \r\n  const [Titles, setTitles] = useState([]);\r\n   \r\nconst getTitles = async()=>\r\n{\r\n  try \r\n  {\r\n    const Endpoint = `Titles`\r\n    const data = await axios.get(variables.API_URL+Endpoint);\r\n \r\n   setTitles(data.data)\r\n    \r\n  }\r\n  catch (e){\r\n    console.log(e);\r\n  }\r\n}\r\n\r\nuseEffect(()=>{\r\n  getTitles();\r\n},[]);\r\n\r\n    const registerOptions = {\r\n        id:0,\r\n        job: { required: \"Name is required\" },\r\n        description: { required: \"Email is required\" },\r\n        fte: { required: \"Email is required\" },\r\n        titleid: { required: \"Email is required\" },\r\n        maximumposition: { required: \"Email is required\" },\r\n      \r\n    };\r\n  \r\n    function handleRegistration(values) {\r\n        insernewdata(values)\r\n    }\r\n    const handleCancel = () => {\r\n       \r\n      setOpenPopupForm(false)\r\n  }\r\n    \r\n    function handleError(event) {\r\n      \r\n     }\r\n    const label = { inputProps: { 'aria-label': 'Switch demo' } };\r\n\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <title> HR- Buildings</title>\r\n      </Helmet>\r\n\r\n      <Container maxWidth={themeStretch ? false : 'xl'}>\r\n        \r\n      <Box\r\n                sx={{ padding: '10px', borderRadius: '10px' }}\r\n            >\r\n                <form onSubmit={handleSubmit(handleRegistration, handleError)}>\r\n                    <Stack direction=\"row\" spacing={2}>\r\n                   \r\n                            <TextField\r\n                                required\r\n                                id=\"job\"\r\n                                label=\"Job\"\r\n                                name=\"job\"\r\n                                sx={{ width: 300 }}\r\n                                InputLabelProps={{\r\n                                    shrink: true,\r\n                                }}\r\n                          \r\n                                {...register('job', registerOptions.job)}\r\n                            />\r\n                     \r\n                        \r\n                            <TextField\r\n                                required\r\n                                id=\"description\"\r\n                                label=\"Description\"\r\n                                name=\"job\"\r\n                                sx={{ width: 300 }}\r\n                                InputLabelProps={{\r\n                                    shrink: true,\r\n                                }}\r\n                            \r\n                                {...register('description', registerOptions.description)}\r\n                            />\r\n\r\n                            \r\n                     \r\n                    </Stack>\r\n                    <br/>\r\n                    <Stack direction=\"row\" spacing={2}>\r\n                      \r\n                      <TextField\r\n                          required\r\n                          id=\"fte\"\r\n                          label=\"FTE\"\r\n                          name=\"fte\"\r\n                          sx={{ width: 300 }}\r\n                          InputLabelProps={{\r\n                              shrink: true,\r\n                          }}\r\n                     \r\n                          {...register('fte', registerOptions.fte)}\r\n                      />\r\n               \r\n                  \r\n                      <TextField\r\n                          required\r\n                          id=\"maximumposition\"\r\n                          label=\"Max Possitions\"\r\n                          name=\"maximumposition\"\r\n                          sx={{ width: 300 }}\r\n                          InputLabelProps={{\r\n                              shrink: true,\r\n                          }}\r\n\r\n                   \r\n                          {...register('maximumposition', registerOptions.maximumposition)}\r\n                      />\r\n\r\n                      \r\n               \r\n              </Stack>\r\n                                <br/>\r\n                    <Stack direction=\"row\" spacing={2}>\r\n                    <Box flex={2}>\r\n                        <FormControl sx={{ width: '238px' }}>\r\n                        <InputLabel id=\"demo-simple-select-label\">Select Titels</InputLabel>\r\n                        <Select\r\n                            labelId=\"demo-simple-select-label\"\r\n                            id=\"titleid\"\r\n                            label=\"Select Titels\"\r\n                        \r\n                           {...register('titleid', registerOptions.titleid)}\r\n                        >\r\n\r\n                            {\r\n                                \r\n                                Titles.map(rec=>\r\n                                  \r\n                              <MenuItem value={rec.id}>{rec.title}</MenuItem>\r\n                                    )\r\n                            }\r\n                            \r\n                            \r\n                        </Select>\r\n                    </FormControl>\r\n                    </Box>\r\n                    \r\n                    </Stack>\r\n                    <br />\r\n                   \r\n                    \r\n                    <br />\r\n                    \r\n                    <Button variant=\"contained\"\r\n                   onClick={handleSubmit(handleRegistration, handleError)}\r\n                    >Save</Button>\r\n                    <Button onClick={handleCancel} color=\"error\">Cancel</Button>\r\n                </form>\r\n            </Box>\r\n\r\n      </Container>\r\n    </>\r\n  );\r\n}\r\n","import * as React from 'react';\r\nimport { useTheme } from '@mui/material/styles';\r\nimport { Component,forwardRef, useState, useEffect,useReducer } from \"react\";\r\nimport Box from '@mui/material/Box';\r\nimport Table from '@mui/material/Table';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport TableContainer from '@mui/material/TableContainer';\r\nimport TableFooter from '@mui/material/TableFooter';\r\nimport TablePagination from '@mui/material/TablePagination';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport TableHead from '@mui/material/TableHead';\r\nimport DeleteIcon from '@mui/icons-material/Delete';\r\nimport EditIcon from '@mui/icons-material/ModeEditOutlineOutlined';\r\nimport Paper from '@mui/material/Paper';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport FirstPageIcon from '@mui/icons-material/FirstPage';\r\nimport KeyboardArrowLeft from '@mui/icons-material/KeyboardArrowLeft';\r\nimport KeyboardArrowRight from '@mui/icons-material/KeyboardArrowRight';\r\nimport LastPageIcon from '@mui/icons-material/LastPage';\r\nimport Button from '@mui/material/Button'\r\nimport axios from 'axios';\r\n\r\nimport AddIcon from '@mui/icons-material/AddBox';\r\n\r\n\r\n\r\nimport PopupAdd from '../../components/PopupAdd';\r\nimport { variables } from \"../../variables\";\r\nimport Popup from '../../components/Popup';\r\nimport CustomizedDialogs  from '../../components/Dialog/CustomizedDialogs'\r\n\r\nimport EditForm from './EditForm';\r\n\r\n\r\n\r\nimport Notification from '../../components/Notifications';\r\n\r\n\r\n\r\nimport NewJob from './Newjob';\r\n\r\n\r\n\r\ninterface TablePaginationActionsProps {\r\n  count: number;\r\n  page: number;\r\n  rowsPerPage: number;\r\n  onPageChange: (\r\n    event: React.MouseEvent<HTMLButtonElement>,\r\n    newPage: number,\r\n  ) => void;\r\n}\r\n\r\nfunction TablePaginationActions(props: TablePaginationActionsProps) {\r\n  const theme = useTheme();\r\n  const { count, page, rowsPerPage, onPageChange } = props;\r\n\r\n  const handleFirstPageButtonClick = (\r\n    event: React.MouseEvent<HTMLButtonElement>,\r\n  ) => {\r\n    onPageChange(event, 0);\r\n  };\r\n\r\n  const handleBackButtonClick = (event: React.MouseEvent<HTMLButtonElement>) => {\r\n    onPageChange(event, page - 1);\r\n  };\r\n\r\n  const handleNextButtonClick = (event: React.MouseEvent<HTMLButtonElement>) => {\r\n    onPageChange(event, page + 1);\r\n  };\r\n\r\n  const handleLastPageButtonClick = (event: React.MouseEvent<HTMLButtonElement>) => {\r\n    onPageChange(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\r\n  };\r\n\r\n  return (\r\n    <Box sx={{ flexShrink: 0, ml: 2.5 }}>\r\n      <IconButton\r\n        onClick={handleFirstPageButtonClick}\r\n        disabled={page === 0}\r\n        aria-label=\"first page\"\r\n      >\r\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={handleBackButtonClick}\r\n        disabled={page === 0}\r\n        aria-label=\"previous page\"\r\n      >\r\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={handleNextButtonClick}\r\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n        aria-label=\"next page\"\r\n      >\r\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={handleLastPageButtonClick}\r\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n        aria-label=\"last page\"\r\n      >\r\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\r\n      </IconButton>\r\n    </Box>\r\n  );\r\n}\r\n\r\nfunction createData(name: string, calories: number, fat: number) {\r\n  return { name, calories, fat };\r\n}\r\n\r\n\r\nexport default function CustomPaginationActionsTable() {\r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\r\n  const [rows, setRows]=useState([]);\r\n  const [recordForEdit, SetRecordForEdit]= useState(null)\r\n  const [notify, setNotify]=useState({isOpen:false, message:'', type:''})\r\n  const [openPopup, setOpenPopup]=useState(false)\r\n  const [openPopupForm, setOpenPopupForm]=React.useState(false);\r\n  const [reducerValue,forceUpdate]=useReducer(x=>x+1,0)\r\n\r\n  // Reading data\r\n\r\n  const getJobs = async()=>\r\n  {\r\n    try \r\n    {\r\n      const Endpoint = `Jobs`\r\n      const data = await axios.get(variables.API_URL+Endpoint);\r\n  \r\n   \r\n     setRows(data.data)\r\n      \r\n    }\r\n    catch (e){\r\n      console.log(e);\r\n    }\r\n  }\r\n  \r\n  // Displaying Data\r\n  \r\n  useEffect(()=>{\r\n    getJobs();\r\n  },[reducerValue]);\r\n\r\n\r\n\r\n // Paginations\r\n  const emptyRows =\r\n    page > 0 ? Math.max(0, (1 + page) * rowsPerPage - rows.length) : 0;\r\n\r\n  const handleChangePage = (\r\n    event: React.MouseEvent<HTMLButtonElement> | null,\r\n    newPage: number,\r\n  ) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (\r\n    event: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>,\r\n  ) => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  };\r\n\r\n  // Open in Popup Modal\r\n\r\n  const openInPopup = row =>{\r\n      SetRecordForEdit(row)\r\n      setOpenPopup(true)\r\n  }\r\n\r\n  function handleOnClick() {\r\n    // Similar to this.setState({ fruit: 'orange' })\r\n    setOpenPopup(true)\r\n  }\r\n\r\n  // Updating Database\r\n  const inserdata = (values)=>{\r\nconsole.log(values)\r\n    const Endpoint = `Jobs`\r\n    axios.put(variables.API_URL+Endpoint,{id:values.id,job:values.job,description:values.description,fte:values.fte,titleid:values.titleid,maximumposition:values.maximumposition})\r\n    .then((response)=>{\r\n      setNotify({\r\n        isOpen:true,\r\n        message: 'Submitted Successfully',\r\n        type: 'success'\r\n    } \r\n        )\r\n        setOpenPopup(false);\r\n      \r\n    })\r\n    .catch((e)=>{\r\n        console.log(\"Hello\")\r\n    })\r\n  }\r\n\r\n  // Insert New Job\r\n\r\n  const insernewdata = (values)=>{\r\n    \r\n  const Endpoint = `Jobs`\r\n\r\n  axios.post(variables.API_URL+Endpoint,{job: values.job,description:values.description,fte:values.fte,titleid:values.titleid,maximumposition:values.maximumposition})\r\n  .then((response)=>{\r\n  \r\n      setNotify({\r\n          isOpen:true,\r\n          message: 'Submitted Successfully',\r\n          type: 'success'\r\n      } \r\n          )\r\n          setOpenPopupForm(false);\r\n     \r\n  })\r\n  .catch((e)=>{\r\n      console.log(\"Hello\")\r\n  })\r\n  }\r\n  \r\n\r\n  // Deleting Data\r\n\r\n  const DeleteRow = (row) => {\r\n\r\n    const Endpoint = `Jobs/${row.id}`\r\n \r\n    axios.delete(variables.API_URL+Endpoint)\r\n        .then(res => {\r\n          const dataDelete = [...rows];\r\n          const index = row.tableData.id;\r\n          dataDelete.splice(index, 1);\r\n          setRows([...dataDelete]);\r\n          setNotify({\r\n            isOpen:true,\r\n            message: 'Sucessfully Deleted',\r\n            type: 'error'\r\n        } \r\n            )\r\n        })\r\n        .catch(error => {\r\n          \r\n          console.log(\"Error\")\r\n        \r\n        })\r\n  }\r\n\r\n  return (\r\n    <>\r\n    <Button variant=\"outlined\" onClick={()=>setOpenPopupForm(true)}>\r\n        Add Job\r\n      </Button>\r\n    <TableContainer component={Paper}>\r\n    \r\n      <Table sx={{ minWidth: 500 }} aria-label=\"custom pagination table\">\r\n      <TableHead>\r\n                    <TableRow >\r\n                        <TableCell>ID</TableCell>\r\n                        <TableCell >Job</TableCell>\r\n                        <TableCell >Description</TableCell>\r\n                        <TableCell>Title</TableCell>\r\n                        <TableCell>FTE</TableCell>\r\n                        <TableCell>Max Possitions</TableCell>\r\n                        <TableCell>Edit</TableCell>\r\n                        <TableCell>Delete</TableCell>\r\n                    </TableRow>\r\n                </TableHead>\r\n        <TableBody>\r\n          {(rowsPerPage > 0\r\n            ? rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n            : rows\r\n          ).map((row) => (\r\n            <TableRow key={row.id}>\r\n              <TableCell component=\"th\" scope=\"row\">\r\n                {row.id}\r\n              </TableCell>\r\n              <TableCell>\r\n                {row.job}\r\n              </TableCell>\r\n              <TableCell >\r\n                {row.description}\r\n              </TableCell>\r\n              <TableCell >\r\n                {row.title}\r\n              </TableCell>\r\n              <TableCell >\r\n                {row.fte}\r\n              </TableCell>\r\n              <TableCell >\r\n                {row.maximumposition}\r\n              </TableCell>\r\n              <TableCell>\r\n                           \r\n<Button variant='outlined'onClick={()=>openInPopup(row)} startIcon={<EditIcon />} />\r\n\r\n\r\n              </TableCell>\r\n              <TableCell >\r\n              <Button variant=\"outlined\" onClick={()=>DeleteRow(row)} startIcon={<DeleteIcon />} color=\"error\"/>\r\n      \r\n    \r\n              </TableCell>\r\n              \r\n            </TableRow>\r\n          ))}\r\n          {emptyRows > 0 && (\r\n            <TableRow style={{ height: 53 * emptyRows }}>\r\n              <TableCell colSpan={6} />\r\n            </TableRow>\r\n          )}\r\n        </TableBody>\r\n        <TableFooter>\r\n          <TableRow>\r\n            <TablePagination\r\n              rowsPerPageOptions={[5, 10, 25, { label: 'All', value: -1 }]}\r\n              colSpan={3}\r\n              count={rows.length}\r\n              rowsPerPage={rowsPerPage}\r\n              page={page}\r\n              SelectProps={{\r\n                inputProps: {\r\n                  'aria-label': 'rows per page',\r\n                },\r\n                native: true,\r\n              }}\r\n              onPageChange={handleChangePage}\r\n              onRowsPerPageChange={handleChangeRowsPerPage}\r\n              ActionsComponent={TablePaginationActions}\r\n            />\r\n          </TableRow>\r\n        </TableFooter>\r\n      </Table>\r\n    </TableContainer>\r\n\r\n\r\n<Popup\r\nopenPopup={openPopup}\r\nsetOpenPopup={setOpenPopup}\r\ntitle=\"Edit or Add Data\"\r\n>\r\n<EditForm\r\nrecordForEdit={recordForEdit}\r\ninserdata={inserdata}\r\nsetOpenPopup={setOpenPopup}\r\n/>\r\n\r\n</Popup>\r\n\r\n<PopupAdd\r\nopenPopupForm={openPopupForm}\r\nsetOpenPopupForm={setOpenPopupForm}\r\ntitle=\"Add Job\"\r\n>\r\n<NewJob insernewdata={insernewdata} setOpenPopupForm={setOpenPopupForm}/>\r\n</PopupAdd>\r\n\r\n\r\n\r\n\r\n\r\n<Notification\r\n        notify={notify}\r\n        setNotify={setNotify}\r\n        />\r\n</>\r\n  );\r\n}","export const variables ={\r\n    API_URL: \"https://192.168.200.16:7015/api/\",\r\n    \r\n}"],"names":["styled","Dialog","theme","padding","spacing","Notifications","props","React","notify","setNotify","open","isOpen","autoHideDuration","anchorOrigin","vertical","horizontal","severity","type","message","Popup","title","children","openPopup","setOpenPopup","maxWidth","PopupAdd","openPopupForm","setOpenPopupForm","EditForm","recordForEdit","inserdata","useForm","mode","register","handleSubmit","themeStretch","formState","errors","useSettingsContext","useState","Titles","setTitles","getTitles","axios","variables","data","console","log","useEffect","registerOptions","required","handleRegistration","values","handleError","event","Container","Box","sx","borderRadius","onSubmit","Stack","direction","TextField","id","name","width","InputLabelProps","shrink","defaultValue","label","job","description","fte","maximumposition","flex","FormControl","InputLabel","Select","labelId","titleid","map","rec","MenuItem","value","Button","variant","onClick","color","NewJOb","insernewdata","TablePaginationActions","useTheme","count","page","rowsPerPage","onPageChange","flexShrink","ml","IconButton","disabled","LastPage","FirstPage","KeyboardArrowRight","KeyboardArrowLeft","Math","ceil","max","CustomPaginationActionsTable","setPage","setRowsPerPage","rows","setRows","SetRecordForEdit","useReducer","x","reducerValue","getJobs","emptyRows","length","TableContainer","component","Paper","Table","minWidth","TableHead","TableRow","TableCell","TableBody","slice","row","scope","openInPopup","startIcon","Endpoint","then","res","dataDelete","index","tableData","splice","catch","error","DeleteRow","Delete","style","height","colSpan","TableFooter","TablePagination","rowsPerPageOptions","SelectProps","inputProps","native","newPage","onRowsPerPageChange","parseInt","target","ActionsComponent","response","e","API_URL"],"sourceRoot":""}