{"version":3,"file":"static/js/440.e3ef6998.chunk.js","mappings":"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","sources":["../node_modules/@mui/material/SnackbarContent/snackbarContentClasses.js","../node_modules/@mui/material/SnackbarContent/SnackbarContent.js","../node_modules/@mui/material/Snackbar/snackbarClasses.js","../node_modules/@mui/material/Snackbar/Snackbar.js"],"sourcesContent":["import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getSnackbarContentUtilityClass(slot) {\n  return generateUtilityClass('MuiSnackbarContent', slot);\n}\nconst snackbarContentClasses = generateUtilityClasses('MuiSnackbarContent', ['root', 'message', 'action']);\nexport default snackbarContentClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"action\", \"className\", \"message\", \"role\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport { emphasize } from '@mui/system';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport Paper from '../Paper';\nimport { getSnackbarContentUtilityClass } from './snackbarContentClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root'],\n    action: ['action'],\n    message: ['message']\n  };\n  return composeClasses(slots, getSnackbarContentUtilityClass, classes);\n};\nconst SnackbarContentRoot = styled(Paper, {\n  name: 'MuiSnackbarContent',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})(({\n  theme\n}) => {\n  const emphasis = theme.palette.mode === 'light' ? 0.8 : 0.98;\n  const backgroundColor = emphasize(theme.palette.background.default, emphasis);\n  return _extends({}, theme.typography.body2, {\n    color: theme.vars ? theme.vars.palette.SnackbarContent.color : theme.palette.getContrastText(backgroundColor),\n    backgroundColor: theme.vars ? theme.vars.palette.SnackbarContent.bg : backgroundColor,\n    display: 'flex',\n    alignItems: 'center',\n    flexWrap: 'wrap',\n    padding: '6px 16px',\n    borderRadius: (theme.vars || theme).shape.borderRadius,\n    flexGrow: 1,\n    [theme.breakpoints.up('sm')]: {\n      flexGrow: 'initial',\n      minWidth: 288\n    }\n  });\n});\nconst SnackbarContentMessage = styled('div', {\n  name: 'MuiSnackbarContent',\n  slot: 'Message',\n  overridesResolver: (props, styles) => styles.message\n})({\n  padding: '8px 0'\n});\nconst SnackbarContentAction = styled('div', {\n  name: 'MuiSnackbarContent',\n  slot: 'Action',\n  overridesResolver: (props, styles) => styles.action\n})({\n  display: 'flex',\n  alignItems: 'center',\n  marginLeft: 'auto',\n  paddingLeft: 16,\n  marginRight: -8\n});\nconst SnackbarContent = /*#__PURE__*/React.forwardRef(function SnackbarContent(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiSnackbarContent'\n  });\n  const {\n      action,\n      className,\n      message,\n      role = 'alert'\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = props;\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsxs(SnackbarContentRoot, _extends({\n    role: role,\n    square: true,\n    elevation: 6,\n    className: clsx(classes.root, className),\n    ownerState: ownerState,\n    ref: ref\n  }, other, {\n    children: [/*#__PURE__*/_jsx(SnackbarContentMessage, {\n      className: classes.message,\n      ownerState: ownerState,\n      children: message\n    }), action ? /*#__PURE__*/_jsx(SnackbarContentAction, {\n      className: classes.action,\n      ownerState: ownerState,\n      children: action\n    }) : null]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? SnackbarContent.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * The action to display. It renders after the message, at the end of the snackbar.\n   */\n  action: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The message to display.\n   */\n  message: PropTypes.node,\n  /**\n   * The ARIA role attribute of the element.\n   * @default 'alert'\n   */\n  role: PropTypes /* @typescript-to-proptypes-ignore */.string,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default SnackbarContent;","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getSnackbarUtilityClass(slot) {\n  return generateUtilityClass('MuiSnackbar', slot);\n}\nconst snackbarClasses = generateUtilityClasses('MuiSnackbar', ['root', 'anchorOriginTopCenter', 'anchorOriginBottomCenter', 'anchorOriginTopRight', 'anchorOriginBottomRight', 'anchorOriginTopLeft', 'anchorOriginBottomLeft']);\nexport default snackbarClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"onEnter\", \"onExited\"],\n  _excluded2 = [\"action\", \"anchorOrigin\", \"autoHideDuration\", \"children\", \"className\", \"ClickAwayListenerProps\", \"ContentProps\", \"disableWindowBlurListener\", \"message\", \"onBlur\", \"onClose\", \"onFocus\", \"onMouseEnter\", \"onMouseLeave\", \"open\", \"resumeHideDuration\", \"TransitionComponent\", \"transitionDuration\", \"TransitionProps\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport ClickAwayListener from '@mui/base/ClickAwayListener';\nimport styled from '../styles/styled';\nimport useTheme from '../styles/useTheme';\nimport useThemeProps from '../styles/useThemeProps';\nimport useEventCallback from '../utils/useEventCallback';\nimport capitalize from '../utils/capitalize';\nimport Grow from '../Grow';\nimport SnackbarContent from '../SnackbarContent';\nimport { getSnackbarUtilityClass } from './snackbarClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    anchorOrigin\n  } = ownerState;\n  const slots = {\n    root: ['root', `anchorOrigin${capitalize(anchorOrigin.vertical)}${capitalize(anchorOrigin.horizontal)}`]\n  };\n  return composeClasses(slots, getSnackbarUtilityClass, classes);\n};\nconst SnackbarRoot = styled('div', {\n  name: 'MuiSnackbar',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, styles[`anchorOrigin${capitalize(ownerState.anchorOrigin.vertical)}${capitalize(ownerState.anchorOrigin.horizontal)}`]];\n  }\n})(({\n  theme,\n  ownerState\n}) => {\n  const center = {\n    left: '50%',\n    right: 'auto',\n    transform: 'translateX(-50%)'\n  };\n  return _extends({\n    zIndex: (theme.vars || theme).zIndex.snackbar,\n    position: 'fixed',\n    display: 'flex',\n    left: 8,\n    right: 8,\n    justifyContent: 'center',\n    alignItems: 'center'\n  }, ownerState.anchorOrigin.vertical === 'top' ? {\n    top: 8\n  } : {\n    bottom: 8\n  }, ownerState.anchorOrigin.horizontal === 'left' && {\n    justifyContent: 'flex-start'\n  }, ownerState.anchorOrigin.horizontal === 'right' && {\n    justifyContent: 'flex-end'\n  }, {\n    [theme.breakpoints.up('sm')]: _extends({}, ownerState.anchorOrigin.vertical === 'top' ? {\n      top: 24\n    } : {\n      bottom: 24\n    }, ownerState.anchorOrigin.horizontal === 'center' && center, ownerState.anchorOrigin.horizontal === 'left' && {\n      left: 24,\n      right: 'auto'\n    }, ownerState.anchorOrigin.horizontal === 'right' && {\n      right: 24,\n      left: 'auto'\n    })\n  });\n});\nconst Snackbar = /*#__PURE__*/React.forwardRef(function Snackbar(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiSnackbar'\n  });\n  const theme = useTheme();\n  const defaultTransitionDuration = {\n    enter: theme.transitions.duration.enteringScreen,\n    exit: theme.transitions.duration.leavingScreen\n  };\n  const {\n      action,\n      anchorOrigin: {\n        vertical,\n        horizontal\n      } = {\n        vertical: 'bottom',\n        horizontal: 'left'\n      },\n      autoHideDuration = null,\n      children,\n      className,\n      ClickAwayListenerProps,\n      ContentProps,\n      disableWindowBlurListener = false,\n      message,\n      onBlur,\n      onClose,\n      onFocus,\n      onMouseEnter,\n      onMouseLeave,\n      open,\n      resumeHideDuration,\n      TransitionComponent = Grow,\n      transitionDuration = defaultTransitionDuration,\n      TransitionProps: {\n        onEnter,\n        onExited\n      } = {}\n    } = props,\n    TransitionProps = _objectWithoutPropertiesLoose(props.TransitionProps, _excluded),\n    other = _objectWithoutPropertiesLoose(props, _excluded2);\n  const ownerState = _extends({}, props, {\n    anchorOrigin: {\n      vertical,\n      horizontal\n    }\n  });\n  const classes = useUtilityClasses(ownerState);\n  const timerAutoHide = React.useRef();\n  const [exited, setExited] = React.useState(true);\n  const handleClose = useEventCallback((...args) => {\n    if (onClose) {\n      onClose(...args);\n    }\n  });\n  const setAutoHideTimer = useEventCallback(autoHideDurationParam => {\n    if (!onClose || autoHideDurationParam == null) {\n      return;\n    }\n    clearTimeout(timerAutoHide.current);\n    timerAutoHide.current = setTimeout(() => {\n      handleClose(null, 'timeout');\n    }, autoHideDurationParam);\n  });\n  React.useEffect(() => {\n    if (open) {\n      setAutoHideTimer(autoHideDuration);\n    }\n    return () => {\n      clearTimeout(timerAutoHide.current);\n    };\n  }, [open, autoHideDuration, setAutoHideTimer]);\n\n  // Pause the timer when the user is interacting with the Snackbar\n  // or when the user hide the window.\n  const handlePause = () => {\n    clearTimeout(timerAutoHide.current);\n  };\n\n  // Restart the timer when the user is no longer interacting with the Snackbar\n  // or when the window is shown back.\n  const handleResume = React.useCallback(() => {\n    if (autoHideDuration != null) {\n      setAutoHideTimer(resumeHideDuration != null ? resumeHideDuration : autoHideDuration * 0.5);\n    }\n  }, [autoHideDuration, resumeHideDuration, setAutoHideTimer]);\n  const handleFocus = event => {\n    if (onFocus) {\n      onFocus(event);\n    }\n    handlePause();\n  };\n  const handleMouseEnter = event => {\n    if (onMouseEnter) {\n      onMouseEnter(event);\n    }\n    handlePause();\n  };\n  const handleBlur = event => {\n    if (onBlur) {\n      onBlur(event);\n    }\n    handleResume();\n  };\n  const handleMouseLeave = event => {\n    if (onMouseLeave) {\n      onMouseLeave(event);\n    }\n    handleResume();\n  };\n  const handleClickAway = event => {\n    if (onClose) {\n      onClose(event, 'clickaway');\n    }\n  };\n  const handleExited = node => {\n    setExited(true);\n    if (onExited) {\n      onExited(node);\n    }\n  };\n  const handleEnter = (node, isAppearing) => {\n    setExited(false);\n    if (onEnter) {\n      onEnter(node, isAppearing);\n    }\n  };\n  React.useEffect(() => {\n    // TODO: window global should be refactored here\n    if (!disableWindowBlurListener && open) {\n      window.addEventListener('focus', handleResume);\n      window.addEventListener('blur', handlePause);\n      return () => {\n        window.removeEventListener('focus', handleResume);\n        window.removeEventListener('blur', handlePause);\n      };\n    }\n    return undefined;\n  }, [disableWindowBlurListener, handleResume, open]);\n  React.useEffect(() => {\n    if (!open) {\n      return undefined;\n    }\n\n    /**\n     * @param {KeyboardEvent} nativeEvent\n     */\n    function handleKeyDown(nativeEvent) {\n      if (!nativeEvent.defaultPrevented) {\n        // IE11, Edge (prior to using Bink?) use 'Esc'\n        if (nativeEvent.key === 'Escape' || nativeEvent.key === 'Esc') {\n          // not calling `preventDefault` since we don't know if people may ignore this event e.g. a permanently open snackbar\n          if (onClose) {\n            onClose(nativeEvent, 'escapeKeyDown');\n          }\n        }\n      }\n    }\n    document.addEventListener('keydown', handleKeyDown);\n    return () => {\n      document.removeEventListener('keydown', handleKeyDown);\n    };\n  }, [exited, open, onClose]);\n\n  // So we only render active snackbars.\n  if (!open && exited) {\n    return null;\n  }\n  return /*#__PURE__*/_jsx(ClickAwayListener, _extends({\n    onClickAway: handleClickAway\n  }, ClickAwayListenerProps, {\n    children: /*#__PURE__*/_jsx(SnackbarRoot, _extends({\n      className: clsx(classes.root, className),\n      onBlur: handleBlur,\n      onFocus: handleFocus,\n      onMouseEnter: handleMouseEnter,\n      onMouseLeave: handleMouseLeave,\n      ownerState: ownerState,\n      ref: ref\n      // ClickAwayListener adds an `onClick` prop which results in the alert not being announced.\n      // See https://github.com/mui/material-ui/issues/29080\n      ,\n      role: \"presentation\"\n    }, other, {\n      children: /*#__PURE__*/_jsx(TransitionComponent, _extends({\n        appear: true,\n        in: open,\n        timeout: transitionDuration,\n        direction: vertical === 'top' ? 'down' : 'up',\n        onEnter: handleEnter,\n        onExited: handleExited\n      }, TransitionProps, {\n        children: children || /*#__PURE__*/_jsx(SnackbarContent, _extends({\n          message: message,\n          action: action\n        }, ContentProps))\n      }))\n    }))\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Snackbar.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * The action to display. It renders after the message, at the end of the snackbar.\n   */\n  action: PropTypes.node,\n  /**\n   * The anchor of the `Snackbar`.\n   * On smaller screens, the component grows to occupy all the available width,\n   * the horizontal alignment is ignored.\n   * @default { vertical: 'bottom', horizontal: 'left' }\n   */\n  anchorOrigin: PropTypes.shape({\n    horizontal: PropTypes.oneOf(['center', 'left', 'right']).isRequired,\n    vertical: PropTypes.oneOf(['bottom', 'top']).isRequired\n  }),\n  /**\n   * The number of milliseconds to wait before automatically calling the\n   * `onClose` function. `onClose` should then set the state of the `open`\n   * prop to hide the Snackbar. This behavior is disabled by default with\n   * the `null` value.\n   * @default null\n   */\n  autoHideDuration: PropTypes.number,\n  /**\n   * Replace the `SnackbarContent` component.\n   */\n  children: PropTypes.element,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * Props applied to the `ClickAwayListener` element.\n   */\n  ClickAwayListenerProps: PropTypes.object,\n  /**\n   * Props applied to the [`SnackbarContent`](/material-ui/api/snackbar-content/) element.\n   */\n  ContentProps: PropTypes.object,\n  /**\n   * If `true`, the `autoHideDuration` timer will expire even if the window is not focused.\n   * @default false\n   */\n  disableWindowBlurListener: PropTypes.bool,\n  /**\n   * When displaying multiple consecutive Snackbars from a parent rendering a single\n   * <Snackbar/>, add the key prop to ensure independent treatment of each message.\n   * e.g. <Snackbar key={message} />, otherwise, the message may update-in-place and\n   * features such as autoHideDuration may be canceled.\n   */\n  key: () => null,\n  /**\n   * The message to display.\n   */\n  message: PropTypes.node,\n  /**\n   * @ignore\n   */\n  onBlur: PropTypes.func,\n  /**\n   * Callback fired when the component requests to be closed.\n   * Typically `onClose` is used to set state in the parent component,\n   * which is used to control the `Snackbar` `open` prop.\n   * The `reason` parameter can optionally be used to control the response to `onClose`,\n   * for example ignoring `clickaway`.\n   *\n   * @param {React.SyntheticEvent<any> | Event} event The event source of the callback.\n   * @param {string} reason Can be: `\"timeout\"` (`autoHideDuration` expired), `\"clickaway\"`, or `\"escapeKeyDown\"`.\n   */\n  onClose: PropTypes.func,\n  /**\n   * @ignore\n   */\n  onFocus: PropTypes.func,\n  /**\n   * @ignore\n   */\n  onMouseEnter: PropTypes.func,\n  /**\n   * @ignore\n   */\n  onMouseLeave: PropTypes.func,\n  /**\n   * If `true`, the component is shown.\n   */\n  open: PropTypes.bool,\n  /**\n   * The number of milliseconds to wait before dismissing after user interaction.\n   * If `autoHideDuration` prop isn't specified, it does nothing.\n   * If `autoHideDuration` prop is specified but `resumeHideDuration` isn't,\n   * we default to `autoHideDuration / 2` ms.\n   */\n  resumeHideDuration: PropTypes.number,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The component used for the transition.\n   * [Follow this guide](/material-ui/transitions/#transitioncomponent-prop) to learn more about the requirements for this component.\n   * @default Grow\n   */\n  TransitionComponent: PropTypes.elementType,\n  /**\n   * The duration for the transition, in milliseconds.\n   * You may specify a single timeout for all transitions, or individually with an object.\n   * @default {\n   *   enter: theme.transitions.duration.enteringScreen,\n   *   exit: theme.transitions.duration.leavingScreen,\n   * }\n   */\n  transitionDuration: PropTypes.oneOfType([PropTypes.number, PropTypes.shape({\n    appear: PropTypes.number,\n    enter: PropTypes.number,\n    exit: PropTypes.number\n  })]),\n  /**\n   * Props applied to the transition element.\n   * By default, the element is based on this [`Transition`](http://reactcommunity.org/react-transition-group/transition/) component.\n   * @default {}\n   */\n  TransitionProps: PropTypes.object\n} : void 0;\nexport default Snackbar;"],"names":["getSnackbarContentUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","SnackbarContentRoot","styled","Paper","name","overridesResolver","props","styles","root","theme","emphasis","palette","mode","backgroundColor","emphasize","background","default","_extends","typography","body2","color","vars","SnackbarContent","getContrastText","bg","display","alignItems","flexWrap","padding","borderRadius","shape","flexGrow","breakpoints","up","minWidth","SnackbarContentMessage","message","SnackbarContentAction","action","marginLeft","paddingLeft","marginRight","React","inProps","ref","useThemeProps","className","role","other","_objectWithoutPropertiesLoose","ownerState","classes","composeClasses","useUtilityClasses","_jsxs","square","elevation","clsx","children","_jsx","getSnackbarUtilityClass","_excluded2","SnackbarRoot","capitalize","anchorOrigin","vertical","horizontal","zIndex","snackbar","position","left","right","justifyContent","top","bottom","transform","Snackbar","useTheme","defaultTransitionDuration","enter","transitions","duration","enteringScreen","exit","leavingScreen","autoHideDuration","ClickAwayListenerProps","ContentProps","disableWindowBlurListener","onBlur","onClose","onFocus","onMouseEnter","onMouseLeave","open","resumeHideDuration","TransitionComponent","Grow","transitionDuration","TransitionProps","onEnter","onExited","slots","timerAutoHide","exited","setExited","handleClose","useEventCallback","setAutoHideTimer","autoHideDurationParam","clearTimeout","current","setTimeout","handlePause","handleResume","window","addEventListener","removeEventListener","document","handleKeyDown","nativeEvent","defaultPrevented","key","ClickAwayListener","onClickAway","event","appear","in","timeout","direction","node","isAppearing"],"sourceRoot":""}