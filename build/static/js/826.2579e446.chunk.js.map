{"version":3,"file":"static/js/826.2579e446.chunk.js","mappings":"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","sources":["pages/Applications/EditInvestment.js","pages/Applications/StepForm.js","pages/Applications/NewInv.js","pages/Applications/investments.js"],"sourcesContent":["import {\r\n    Button,\r\n    Switch,\r\n    InputLabel,\r\n    MenuItem,\r\n    FormControl,\r\n    Select,\r\n    TextField,\r\n    autocompleteClasses,\r\n    Box,\r\n    Container,\r\n    Stack,\r\n    Grid,\r\n    Typography\r\n} from \"@mui/material\"\r\nimport axios from 'axios';\r\nimport { useState } from \"react\"\r\nimport { useForm } from \"react-hook-form\";\r\nimport { color } from \"@mui/system\";\r\nimport { SelectChangeEvent } from '@mui/material/Select';\r\nimport CustomerNames from \"./CustomersNames\";\r\n\r\nimport Notification from '../../components/Notifications';\r\n\r\n\r\nfunction EditInvestment(props) {\r\n    const { insertdata, recordForApp, setOpenPopup3 } = props\r\n    const { register, handleSubmit, formState: { errors } } = useForm({\r\n        mode: \"onBlur\"\r\n    });\r\n    const [notify, setNotify] = useState({ isOpen: false, message: '', type: '' })\r\n    const [amount, setAmount] = useState('')\r\n    const [profitamount, setProfit] = useState('')\r\n    const [total, setTotal] = useState('')\r\n    const [type, setType] = useState('');\r\n    const handleChangetype = (event: SelectChangeEvent) => {\r\n        setType(event.target.value);\r\n    };\r\n    const registerOptions = {\r\n        Account: \"\",\r\n        ApplicantName: \"\",\r\n        Address: \"\",\r\n        Postcode: \"\",\r\n        mobile: \"\",\r\n        teloffice: \"\",\r\n        natureofbusiness: \"\",\r\n        facilitytype: \"\",\r\n        dateofestablishment: \"\",\r\n        purpose: \"\",\r\n        cost: \"\",\r\n        contribution: \"\",\r\n        amount: \"\",\r\n        period: \"\",\r\n        security: \"\",\r\n        nameguarantor: \"\",\r\n        naturesecurity: \"\",\r\n        Addresssecurity: \"\",\r\n        phone: \"\",\r\n\r\n    }\r\n\r\n    const handleCancel = () => {\r\n        return setOpenPopup3(false)\r\n    }\r\n\r\n    const handleAmount = (event) => {\r\n        // 👇 Get input value from \"event\"\r\n        setAmount(event.target.value);\r\n    };\r\n\r\n    const handleProfit = (event) => {\r\n        // 👇 Get input value from \"event\"\r\n        setTotal(event.target.value + amount);\r\n\r\n        console.log(total)\r\n    };\r\n\r\n    function handleRegistration(values) {\r\n        insertdata(values)\r\n    }\r\n\r\n    function handleError(event) { }\r\n    const label = { inputProps: { 'aria-label': 'Switch demo' } };\r\n    return (\r\n        <Container maxWidth=\"lg\" sx={{ margin: 0 }}>\r\n            <Box sx={{ padding: '10px', borderRadius: '10px' }}>\r\n                <Stack direction=\"row\" spacing={2}>\r\n                    <Box flex={2}>\r\n                        <TextField\r\n                            id=\"Account\"\r\n                            label=\"Account\"\r\n                            variant=\"outlined\"\r\n                            placeholder=\"Account\"\r\n                            name=\"Account\"\r\n                            fullWidth\r\n                            margin=\"normal\"\r\n                            defaultValue={recordForApp.account}\r\n                            {...register('Account', registerOptions.Account)}\r\n                        />\r\n                    </Box>\r\n                    <Box flex={2} >\r\n                        <TextField\r\n                            id=\"ApplicantName\"\r\n                            label=\"Applicant Name\"\r\n                            variant=\"outlined\"\r\n                            placeholder=\"Applicant Name\"\r\n                            fullWidth\r\n                            name=\"ApplicantName\"\r\n                            defaultValue={recordForApp.applicantName}\r\n                            margin=\"normal\"\r\n                            {...register('ApplicantName', registerOptions.ApplicantName)}\r\n                        />\r\n\r\n                        <Typography sx={{ color: 'red' }}>{errors.purpose?.type === \"required\" && \"Purpose is required\"}</Typography>\r\n                    </Box>\r\n                    <Box flex={2}>\r\n                        <TextField\r\n                            id=\"address\"\r\n                            label=\"Full Address\"\r\n                            variant=\"outlined\"\r\n                            placeholder=\"Full Address\"\r\n                            fullWidth\r\n                            name=\"Address\"\r\n                            margin=\"normal\"\r\n                            defaultValue={recordForApp.address}\r\n                            {...register('Address', registerOptions.Address)}\r\n                        />\r\n\r\n                        <Typography sx={{ color: 'red' }}>{errors.amount?.type === \"required\" && \"Amount is required\"}</Typography>\r\n                    </Box>\r\n\r\n                </Stack>\r\n\r\n\r\n                <br />\r\n\r\n                <Stack direction=\"row\" spacing={2}>\r\n                    <Box flex={2} >\r\n                        <TextField\r\n                            id=\"mobile\"\r\n                            label=\"Mobile\"\r\n                            variant=\"outlined\"\r\n                            placeholder=\"Mobile\"\r\n                            fullWidth\r\n                            name=\"mobile\"\r\n                            margin=\"normal\"\r\n                            defaultValue={recordForApp.postcode}\r\n                            {...register('mobile', registerOptions.mobile)}\r\n                        />\r\n\r\n                        <Typography sx={{ color: 'red' }}>{errors.tenure?.type === \"required\" && \"Tenure is required\"}</Typography>\r\n                    </Box>\r\n\r\n                    <Box flex={2} >\r\n                        <TextField\r\n                            id=\"Postcode\"\r\n                            label=\"Post Code\"\r\n                            variant=\"outlined\"\r\n                            placeholder=\"Post Code\"\r\n                            fullWidth\r\n                            margin=\"normal\"\r\n                            defaultValue={recordForApp.mobile}\r\n                            name=\"Postcode\"\r\n                            {...register('Postcode', registerOptions.Postcode)}\r\n                        />\r\n                        <Typography sx={{ color: 'red' }}>{errors.profitamount?.type === \"required\" && \"Profit Amount is required\"}</Typography>\r\n                    </Box>\r\n                    <Box flex={2}>\r\n                        <TextField\r\n                            id=\"teloffice\"\r\n                            label=\"Tel Office\"\r\n                            variant=\"outlined\"\r\n                            placeholder=\"Tell Office\"\r\n                            fullWidth\r\n                            margin=\"normal\"\r\n                            defaultValue={recordForApp.teloffice}\r\n                            name=\"teloffice\"\r\n                            {...register('teloffice', registerOptions.teloffice)}\r\n                        />\r\n                        <Typography sx={{ color: 'red' }}>{errors.totalamount?.type === \"required\" && \"Total Amount is required\"}</Typography>\r\n                    </Box>\r\n\r\n                </Stack>\r\n\r\n                <br />\r\n\r\n                <Stack direction=\"row\" spacing={2}>\r\n                    <Box flex={2} >\r\n                        <TextField\r\n                            id=\"natureofbusiness\"\r\n                            label=\"Nature of Business\"\r\n                            variant=\"outlined\"\r\n                            placeholder=\"Nature of Business\"\r\n                            fullWidth\r\n                            margin=\"normal\"\r\n                            defaultValue={recordForApp.natureofbusiness}\r\n                            name=\"natureofbusiness\"\r\n                            {...register('natureofbusiness', registerOptions.natureofbusiness)}\r\n                        />\r\n                        <Typography sx={{ color: 'red' }}>{errors.monthlyinstallment?.type === \"required\" && \"Monthly installment is required\"}</Typography>\r\n                    </Box>\r\n                    <Box flex={2}>\r\n                        <TextField\r\n                            id=\"purpose\"\r\n                            label=\"Purpose of finance\"\r\n                            variant=\"outlined\"\r\n                            placeholder=\"Purpose of finance\"\r\n                            fullWidth\r\ndefaultValue={recordForApp.purpose}\r\n                            margin=\"normal\"\r\n                            {...register('purpose', registerOptions.purpose)}\r\n                        />\r\n                        <Typography sx={{ color: 'red' }}>{errors.sourceofpayment?.type === \"required\" && \"Source of Payment is required\"}</Typography>\r\n                    </Box>\r\n                    <Box flex={2} >\r\n                        <TextField\r\n                            id=\"totalcost\"\r\n                            label=\"Total Cost\"\r\n                            variant=\"outlined\"\r\n                            placeholder=\"Total Cost\"\r\n                            name=\"cost\"\r\n                            defaultValue={recordForApp.cost}\r\n                            margin=\"normal\"\r\n                          //  {...register('cost', registerOptions.cost)}\r\n                        />\r\n                        <Typography sx={{ color: 'red' }}>{errors.securitydetails?.type === \"required\" && \"Security detail is required\"}</Typography>\r\n                    </Box>\r\n\r\n                </Stack>\r\n\r\n                <br />\r\n\r\n                <Stack direction=\"row\" spacing={2}>\r\n                    <Box flex={2}>\r\n\r\n                        <FormControl fullWidth>\r\n                            <InputLabel id=\"demo-simple-select-label\">Type of Company</InputLabel>\r\n\r\n                            <Select\r\n                                labelId=\"demo-simple-select-label\"\r\n                                id=\"facilitytype\"\r\n\r\n                           \r\n                                label=\"Facility Type\"\r\n                                onChange={handleChangetype}\r\n                                size=\"medium\"\r\n                                defaultValue={recordForApp.type}\r\n                                name=\"facilitytype\"\r\n\r\n                            >\r\n                                <MenuItem value='Proprietorship'>Proprietorship</MenuItem>\r\n                                <MenuItem value='Partnership'>Partnership</MenuItem>\r\n                                <MenuItem value='Limited'>Limited</MenuItem>\r\n                            </Select>\r\n\r\n\r\n                        </FormControl>\r\n                        <Typography sx={{ color: 'red' }}>{errors.profitrate?.type === \"required\" && \"Profit rate is required\"}</Typography>\r\n                    </Box>\r\n                    <Box flex={2}>\r\n                        <TextField\r\n                            id=\"contribution\"\r\n                            label=\"Your Contribution\"\r\n                            variant=\"outlined\"\r\n                            placeholder=\"Your Contribution\"\r\n                            name=\"contribution\"\r\n                            defaultValue={recordForApp.contribution}\r\n                            {...register('facilitytype', registerOptions.contribution)}\r\n                        />\r\n                        <Typography sx={{ color: 'red' }}>{errors.securitydescription?.type === \"required\" && \"Security description is required\"}</Typography>\r\n                    </Box>\r\n                    <Box flex={2} >\r\n                        <TextField\r\n                            id=\"amountrequested\"\r\n                            label=\"Amount Requested\"\r\n                            variant=\"outlined\"\r\n                            placeholder=\"Amount Requested\"\r\n                            name=\"amount\"\r\n                            defaultValue={recordForApp.amount}\r\n                            {...register('amount', registerOptions.amount)}\r\n                        />\r\n                        <Typography sx={{ color: 'red' }}>{errors.value?.type === \"required\" && \"Value is required\"}</Typography>\r\n                    </Box>\r\n\r\n                </Stack>\r\n                <br />\r\n                <Stack direction=\"row\" spacing={1}>\r\n\r\n\r\n                    <Box flex={2} >\r\n                        <TextField\r\n                            id=\"period\"\r\n                            label=\"Finacing Period\"\r\n                            variant=\"outlined\"\r\n                            placeholder=\"Financing Period\"\r\n                            fullWidth\r\n                            name=\"period\"\r\n                            defaultValue={recordForApp.period}\r\n                            {...register('period', registerOptions.period)}\r\n\r\n                        />\r\n                        <Typography sx={{ color: 'red' }}>{errors.contribution?.type === \"required\" && \"Contribution is required\"}</Typography>\r\n                    </Box>\r\n                    <Box flex={2} >\r\n                        <TextField\r\n                            id=\"typeofsecurity\"\r\n                            label=\"Type of security/ colleteral offered\"\r\n                            variant=\"outlined\"\r\n                            placeholder=\"Type of security/ colleteral offered\"\r\n                            fullWidth\r\n                            name=\"security\"\r\n                            defaultValue={recordForApp.security}\r\n                            {...register('security', registerOptions.security)}\r\n\r\n\r\n                        />\r\n                        <Typography sx={{ color: 'red' }}>{errors.condition?.type === \"required\" && \"Conditions is required\"}</Typography>\r\n\r\n                    </Box>\r\n                    <Box flex={2} >\r\n                        <TextField\r\n                            id=\"nameofguarantor\"\r\n                            label=\"Name of guarantor ( in case of third party )\"\r\n                            variant=\"outlined\"\r\n                            placeholder=\"Name of guarantor ( in case of third party )\"\r\n                            fullWidth\r\n                            name=\"nameguarantor\"\r\n                            defaultValue={recordForApp.nameguarantor}\r\n                            {...register('nameguarantor', registerOptions.nameguarantor)}\r\n\r\n                        />\r\n                        <Typography sx={{ color: 'red' }}>{errors.RM?.type === \"required\" && \"RM is required\"}</Typography>\r\n\r\n                    </Box>\r\n                </Stack>\r\n                <br />\r\n\r\n                <Stack direction=\"row\" spacing={1}>\r\n\r\n\r\n                    <Box flex={2} >\r\n                        <TextField\r\n                            id=\"phone\"\r\n                            label=\"Phone\"\r\n                            variant=\"outlined\"\r\n                            placeholder=\"Phone\"\r\n                            name=\"phone\"\r\n                            defaultValue={recordForApp.phone}\r\n                            {...register('phone', registerOptions.phone)}\r\n                        />\r\n                        <Typography sx={{ color: 'red' }}>{errors.contribution?.type === \"required\" && \"Contribution is required\"}</Typography>\r\n                    </Box>\r\n                    <Box flex={2} >\r\n                        <TextField\r\n                            id=\"natureofbusiesssecurity\"\r\n                            label=\"Nature of business Security\"\r\n                            variant=\"outlined\"\r\n                            placeholder=\"Nature of business Security\"\r\n                            name=\"naturesecurity\"\r\n                            defaultValue={recordForApp.naturesecurity}\r\n                           {...register('naturesecurity', registerOptions.naturesecurity)}\r\n                        />\r\n                        <Typography sx={{ color: 'red' }}>{errors.condition?.type === \"required\" && \"Conditions is required\"}</Typography>\r\n\r\n                    </Box>\r\n                    <Box flex={2} >\r\n                        <TextField\r\n                            id=\"addresssecurity\"\r\n                            label=\"Address\"\r\n                            variant=\"outlined\"\r\n                            placeholder=\"Address\"\r\n                            name=\"Addresssecurity\"\r\n                            defaultValue={recordForApp.addresssecurity}\r\n                            {...register('Addresssecurity', registerOptions.Addresssecurity)}\r\n                        />\r\n                        <Typography sx={{ color: 'red' }}>{errors.RM?.type === \"required\" && \"RM is required\"}</Typography>\r\n\r\n                    </Box>\r\n                </Stack>\r\n                <br />\r\n\r\n                <Button variant=\"contained\"\r\n                    onClick={handleSubmit(handleRegistration, handleError)}\r\n                >Submit Application</Button>\r\n                <Button onClick={handleCancel}>Cancel</Button>\r\n            </Box>\r\n        </Container>\r\n\r\n\r\n    )\r\n}\r\nexport default EditInvestment\r\n","import { Helmet } from 'react-helmet-async';\r\n\r\n// components\r\n\r\nimport React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Typography,\r\n  TextField,\r\n  Container,\r\n  Box,\r\n  Stack,\r\n  Button,\r\n  Stepper,\r\n  InputLabel,\r\n  MenuItem,\r\n  Step,\r\n  StepLabel,\r\n  List,\r\n  Paper,\r\n  ListItem,\r\n  CssBaseline,\r\n  ListItemText,\r\n  FormGroup,\r\n  FormControl,\r\n  FormControlLabel,\r\n  Grid,\r\n  Checkbox,\r\n  Autocomplete\r\n} from \"@mui/material\";\r\n\r\nimport { experimentalStyled as styled } from '@mui/material/styles';\r\nimport Select, { SelectChangeEvent } from '@mui/material/Select';\r\nimport { makeStyles } from \"@mui/styles\";\r\nimport {\r\n  useForm,\r\n  Controller,\r\n  FormProvider,\r\n  useFormContext,\r\n} from \"react-hook-form\";\r\n\r\nimport axios from 'axios';\r\n\r\n\r\n\r\n\r\nimport VirtualizedSelect from 'react-virtualized-select'\r\n\r\nimport SearchIcon from '@mui/icons-material/ManageSearch';\r\n\r\nimport FindInPageIcon from '@mui/icons-material/FindInPage';\r\n\r\nimport { pink } from '@mui/material/colors';\r\n\r\nimport SearchBar from './SearchBar';\r\n\r\n\r\n\r\nimport { variables } from \"../../variables\";\r\n\r\nimport BookData from \"./Data.json\";\r\n\r\n\r\n\r\n\r\nimport { useSettingsContext } from '../../components/settings';\r\nimport Basic from './Basic';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  button: {\r\n    marginRight: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nfunction getSteps() {\r\n  return [\r\n   \r\n    \"Basic Information\",\r\n    \"Financing Details\",\r\n    \"Security / Collateral\",\r\n    \"Attached Documents\",\r\n  ];\r\n}\r\n\r\n\r\n\r\nconst Basicinfo = () => {\r\n  const { control } = useFormContext();\r\n  const [message, setMessage] = useState('')\r\n  const [rate, setRate] = useState('')\r\n  const [profitrate, setProfit] = useState('')\r\n  const [myOptions, setMyOptions] = useState([])\r\n  const [customer, setCustomer]=useState('')\r\n  const handleAmount = (event) => {\r\n    // 👇 Get input value from \"event\"\r\n    setMessage(event.target.value);\r\n  };\r\n  const [type, setType] = React.useState('');\r\n  const label = { inputProps: { 'aria-label': 'Checkbox demo' } };\r\n\r\n  const handleChangetype = (event: SelectChangeEvent) => {\r\n    setType(event.target.value);\r\n  };\r\n\r\n \r\n\r\n\r\n\r\n  return (\r\n    <>\r\n     <Grid container spacing={2}>\r\n     \r\n     <Grid item xs={6}>\r\n     <br/>\r\n      <Controller\r\n        control={control}\r\n        name=\"Account\"\r\n        render={({ field }) => (\r\n          <TextField\r\n            id=\"account\"\r\n            label=\"Account\"\r\n            variant=\"outlined\"\r\n            placeholder=\"Account\"\r\n            fullWidth\r\n            margin=\"normal\"\r\n            {...field}\r\n          />\r\n        )}\r\n      />\r\n   \r\n   <Controller\r\n        control={control}\r\n        name=\"Address\"\r\n        render={({ field }) => (\r\n          <TextField\r\n            id=\"address\"\r\n            label=\"Full Address\"\r\n            variant=\"outlined\"\r\n            placeholder=\"Full Address\"\r\n            fullWidth\r\n            margin=\"normal\"\r\n            {...field}\r\n          />\r\n        )}\r\n      />\r\n <Controller\r\n        control={control}\r\n        name=\"mobile\"\r\n        render={({ field }) => (\r\n          <TextField\r\n            id=\"mobile\"\r\n            label=\"Mobile\"\r\n            variant=\"outlined\"\r\n            placeholder=\"Mobile\"\r\n            fullWidth\r\n            margin=\"normal\"\r\n            {...field}\r\n          />\r\n        )}\r\n      />\r\n  \r\n          <FormControl fullWidth>\r\n            <InputLabel id=\"demo-simple-select-label\">Type of Company</InputLabel>\r\n            <Controller\r\n              control={control}\r\n              name=\"type\"\r\n              render={({ field }) => (\r\n                <Select\r\n                  labelId=\"demo-simple-select-label\"\r\n                  id=\"facilitytype\"\r\n                  name=\"type\"\r\n                  value={type}\r\n                  label=\"Facility Type\"\r\n                  onChange={handleChangetype}\r\n                  size=\"medium\"\r\n                >\r\n                  <MenuItem value='Proprietorship'>Proprietorship</MenuItem>\r\n                  <MenuItem value='Partnership'>Partnership</MenuItem>\r\n                  <MenuItem value='Limited'>Limited</MenuItem>\r\n                </Select>\r\n              )}\r\n            />\r\n          </FormControl>\r\n          <Controller\r\n            control={control}\r\n            name=\"dateofestablishment\"\r\n            render={({ field }) => (\r\n              <TextField\r\n              type=\"date\"\r\n                id=\"dateofestablishment\"\r\n                label=\"Date of Establishment\"\r\n                variant=\"outlined\"\r\n               \r\n                fullWidth\r\n                margin=\"normal\"\r\n                {...field}\r\n              />\r\n            )}\r\n          />\r\n      </Grid>\r\n      <Grid item xs={6}>\r\n          <br />\r\n          <Controller\r\n            control={control}\r\n            name=\"ApplicantName\"\r\n            render={({ field }) => (\r\n              <TextField\r\n                id=\"ApplicantName\"\r\n                label=\"Applicant Name\"\r\n                variant=\"outlined\"\r\n                placeholder=\"Applicant Name\"\r\n                fullWidth\r\n                margin=\"normal\"\r\n                {...field}\r\n              />\r\n            )}\r\n          />\r\n      <Controller\r\n        control={control}\r\n            name=\"Postcode\"\r\n        render={({ field }) => (\r\n          <TextField\r\n            id=\"Postcode\"\r\n            label=\"Post Code\"\r\n            variant=\"outlined\"\r\n            placeholder=\"Post Code\"\r\n            fullWidth\r\n            margin=\"normal\"\r\n            {...field}\r\n          />\r\n        )}\r\n      />\r\n \r\n <Controller\r\n        control={control}\r\n        name=\"teloffice\"\r\n      \r\n        render={({ field }) => (\r\n          <TextField\r\n            id=\"teloffice\"\r\n            label=\"Tel Office\"\r\n            variant=\"outlined\"\r\n            placeholder=\"Tell Office\"\r\n            fullWidth\r\n            margin=\"normal\"\r\n            {...field}\r\n          />\r\n        )}\r\n      />\r\n   \r\n     \r\n\r\n<Controller\r\n        control={control}\r\n        name=\"natureofbusiness\"\r\n        render={({ field }) => (\r\n          <TextField\r\n            id=\"natureofbusiness\"\r\n            label=\"Nature of Business\"\r\n            variant=\"outlined\"\r\n            placeholder=\"Nature of Business\"\r\n            fullWidth\r\n            margin=\"normal\"\r\n            {...field}\r\n          />\r\n        )}\r\n      />\r\n\r\n      </Grid>\r\n      \r\n      </Grid>\r\n    </>\r\n  );\r\n};\r\n\r\nconst FinancingDetails = () => {\r\n  const { control } = useFormContext();\r\n  const [agreement, setAgreement] = useState(false);\r\n  const [age, setAge] = React.useState('');\r\n  const label = { inputProps: { 'aria-label': 'Checkbox demo' } };\r\n  const handleChange = (event) => {\r\n    setAgreement(event.target.checked);\r\n  }\r\n\r\n\r\n  const handleChangeAge = (event: SelectChangeEvent) => {\r\n    setAge(event.target.value);\r\n  };\r\n\r\n  const Item = styled(Paper)(({ theme }) => ({\r\n    backgroundColor: theme.palette.mode === 'dark' ? '#1A2027' : '#fff',\r\n    ...theme.typography.body2,\r\n    padding: theme.spacing(2),\r\n    textAlign: 'center',\r\n    color: theme.palette.text.secondary,\r\n  }));\r\n  return (\r\n    <>\r\n  \r\n\r\n<Grid container spacing={{ xs: 2, md: 3 }} columns={{ xs: 4, sm: 4, md: 12 }}>\r\n  \r\n    <Grid item xs={2} sm={4} md={4} >\r\n      <Item>\r\n      <Controller\r\n        control={control}\r\n        name=\"purpose\"\r\n        render={({ field }) => (\r\n          <TextField\r\n            id=\"purpose\"\r\n            label=\"Purpose of finance\"\r\n            variant=\"outlined\"\r\n            placeholder=\"Purpose of finance\"\r\n            fullWidth\r\n           \r\n            margin=\"normal\"\r\n            {...field}\r\n          />\r\n        )}\r\n      />\r\n      <Controller\r\n        control={control}\r\n              name=\"cost\"\r\n        render={({ field }) => (\r\n          <TextField\r\n            id=\"totalcost\"\r\n            label=\"Total Cost\"\r\n            variant=\"outlined\"\r\n            placeholder=\"Total Cost\"\r\n            fullWidth\r\n            disabled={!agreement}\r\n            margin=\"normal\"\r\n            {...field}\r\n          />\r\n        )}\r\n      />\r\n      </Item>\r\n    </Grid>\r\n  \r\n    <Grid item xs={2} sm={4} md={4} >\r\n      <br/>\r\n      <Item>\r\n      <Controller\r\n        control={control}\r\n        name=\"contribution\"\r\n        render={({ field }) => (\r\n          <TextField\r\n            id=\"contribution\"\r\n            label=\"Your Contribution\"\r\n            variant=\"outlined\"\r\n            placeholder=\"Your Contribution\"\r\n            fullWidth\r\n            {...field}\r\n          />\r\n        )}\r\n      />\r\n      <Controller\r\n        control={control}\r\n              name=\"amount\"\r\n        render={({ field }) => (\r\n          <TextField\r\n            id=\"amountrequested\"\r\n            label=\"Amount Requested\"\r\n            variant=\"outlined\"\r\n            placeholder=\"Amount Requested\"\r\n            fullWidth\r\n      \r\n            margin=\"normal\"\r\n            {...field}\r\n          />\r\n        )}\r\n      />\r\n\r\n      </Item>\r\n    </Grid>\r\n   \r\n    <Grid item xs={2} sm={4} md={4} >\r\n      <br/>\r\n      <Item>\r\n      <Controller\r\n        control={control}\r\n        name=\"period\"\r\n        render={({ field }) => (\r\n          <TextField\r\n            id=\"period\"\r\n            label=\"Finacing Period\"\r\n            variant=\"outlined\"\r\n            placeholder=\"Financing Period\"\r\n            fullWidth\r\n     \r\n            {...field}\r\n          />\r\n        )}\r\n      />\r\n \r\n\r\n      </Item>\r\n    </Grid>\r\n   \r\n\r\n</Grid>\r\n    </>\r\n  );\r\n};\r\nconst Security = () => {\r\n  const { control } = useFormContext();\r\n  const [agreement, setAgreement] = useState(false);\r\n  const handleChange = (event) => {\r\n    setAgreement(event.target.checked);\r\n  }\r\n  const Item = styled(Paper)(({ theme }) => ({\r\n    backgroundColor: theme.palette.mode === 'dark' ? '#1A2027' : '#fff',\r\n    ...theme.typography.body2,\r\n    padding: theme.spacing(2),\r\n    textAlign: 'center',\r\n    color: theme.palette.text.secondary,\r\n  }));\r\n  return (\r\n    <>\r\n     \r\n<Grid container spacing={{ xs: 2, md: 3 }} columns={{ xs: 4, sm: 8, md: 8 }}>\r\n  \r\n    <Grid item xs={2} sm={4} md={4} >\r\n      <Item>\r\n      <Controller\r\n        control={control}\r\n        name=\"security\"\r\n        render={({ field }) => (\r\n          <TextField\r\n            id=\"typeofsecurity\"\r\n            label=\"Type of security/ colleteral offered\"\r\n            variant=\"outlined\"\r\n            placeholder=\"Type of security/ colleteral offered\"\r\n            fullWidth\r\n           \r\n          \r\n            {...field}\r\n          />\r\n        )}\r\n      />\r\n            <Controller\r\n              control={control}\r\n              name=\"nameguarantor\"\r\n              render={({ field }) => (\r\n                <TextField\r\n                  id=\"nameofguarantor\"\r\n                  label=\"Name of guarantor ( in case of third party )\"\r\n                  variant=\"outlined\"\r\n                  placeholder=\"Name of guarantor ( in case of third party )\"\r\n                  fullWidth\r\n\r\n                  {...field}\r\n                />\r\n              )}\r\n            />\r\n            <br/>\r\n            <Controller\r\n              control={control}\r\n              name=\"phone\"\r\n              render={({ field }) => (\r\n                <TextField\r\n                  id=\"phone\"\r\n                  label=\"Phone\"\r\n                  variant=\"outlined\"\r\n                  placeholder=\"Phone\"\r\n                  fullWidth\r\n\r\n                  {...field}\r\n                />\r\n              )}\r\n            />\r\n      </Item>\r\n    </Grid>\r\n  \r\n    <Grid item xs={2} sm={4} md={4} >\r\n      <Item>\r\n      <Controller\r\n        control={control}\r\n              name=\"naturesecurity\"\r\n        render={({ field }) => (\r\n          <TextField\r\n            id=\"natureofbusiesssecurity\"\r\n            label=\"Nature of business\"\r\n            variant=\"outlined\"\r\n            placeholder=\"Nature of business\"\r\n            fullWidth\r\n           \r\n            {...field}\r\n          />\r\n        )}\r\n      />\r\n      <br/>\r\n            <Controller\r\n              control={control}\r\n              name=\"Addresssecurity\"\r\n              render={({ field }) => (\r\n                <TextField\r\n                  id=\"addresssecurity\"\r\n                  label=\"Address\"\r\n                  variant=\"outlined\"\r\n                  placeholder=\"Address\"\r\n                  fullWidth\r\n\r\n                  {...field}\r\n                />\r\n              )}\r\n            />\r\n            <br />\r\n           \r\n      </Item>\r\n    </Grid>\r\n   \r\n\r\n</Grid>\r\n    </>\r\n  );\r\n};\r\n\r\nconst Documents = () => {\r\n  const { control } = useFormContext();\r\n  const Item = styled(Paper)(({ theme }) => ({\r\n    backgroundColor: theme.palette.mode === 'dark' ? '#1A2027' : '#fff',\r\n    ...theme.typography.body2,\r\n    padding: theme.spacing(1),\r\n    textAlign: 'center',\r\n    color: theme.palette.text.secondary,\r\n  }));\r\n  return (\r\n    <>\r\n   \r\n    <Grid container spacing={2}>\r\n\r\n  <Grid item xs={6} md={8}>\r\n \r\n   <br/>\r\n   <Typography>Note: After you submite this application you have to upload Documents listed in Annexure 'A'. </Typography>\r\n   \r\n\r\n\r\n   <br/>\r\n          <br />\r\n\r\n  </Grid>\r\n</Grid>\r\n    </>\r\n  );\r\n};\r\n\r\nfunction getStepContent(step) {\r\n  switch (step) {\r\n    case 0:\r\n      return <Basicinfo/>;\r\n\r\n \r\n    case 1:\r\n      return <FinancingDetails/>;\r\n    case 2:\r\n      return <Security/>;\r\n    case 3:\r\n      return <Documents/>;\r\n    default:\r\n      return \"unknown step\";\r\n  }\r\n}\r\n\r\nexport default function StepForm() {\r\n  const { themeStretch } = useSettingsContext();\r\n  const classes = useStyles();\r\n  const methods = useForm({\r\n    defaultValues: {\r\nAccount:\"\",\r\nApplicantName:\"\",\r\nAddress:\"\",\r\nPostcode :\"\",\r\nmobile:\"\",\r\nteloffice:\"\",\r\nnatureofbusiness:\"\",\r\ntype:\"\",\r\ndateofestablishment:\"\",\r\npurpose:\"\",\r\ncost :\"\",\r\ncontribution:\"\",\r\namount:\"\",\r\nperiod:\"\",\r\nsecurity:\"\",\r\nnameguarantor:\"\",\r\nnaturesecurity:\"\",\r\nAddresssecurity:\"\",\r\nphone:\"\",\r\n    },\r\n  });\r\n  const [activeStep, setActiveStep] = useState(0);\r\n  const [skippedSteps, setSkippedSteps] = useState([]);\r\n  const steps = getSteps();\r\n\r\n  const isStepOptional = (step) => {\r\n    return step === 1 || step === 2;\r\n  };\r\n\r\n  const isStepSkipped = (step) => {\r\n    return skippedSteps.includes(step);\r\n  };\r\n\r\n  const handleNext = (data) => {\r\n    console.log(data);\r\n    if (activeStep === steps.length - 1) {\r\n      const Endpoint = 'Investments'\r\n      axios.post(variables.API_URL+Endpoint,{\r\n        Account: data.Account,\r\n        ApplicantName: data.ApplicantName,\r\n        Address: data.Address,\r\n        Postcode: data.Postcode,\r\n        mobile: data.mobile,\r\n        teloffice: data.teloffice,\r\n        natureofbusiness: data.natureofbusiness,\r\n        type: data.type,\r\n        dateofestablishment: data.dateofestablishment,\r\n        purpose: data.purpose,\r\n        cost: data.cost,\r\n        contribution: data.contribution,\r\n        amount: data.amount,\r\n        period: data.period,\r\n        security: data.security,\r\n        nameguarantor: data.nameguarantor,\r\n        naturesecurity:data.naturesecurity,\r\n        Addresssecurity: data.Addresssecurity,\r\n        phone: data.phone,\r\n      })\r\n          .then((response) => {\r\n             console.log('created')\r\n             setActiveStep(activeStep + 1);\r\n              \r\n              \r\n          })\r\n          .catch((e) => {\r\n              console.log(\"Hello errors\")\r\n            \r\n          })\r\n    } else {\r\n      setActiveStep(activeStep + 1);\r\n      setSkippedSteps(\r\n        skippedSteps.filter((skipItem) => skipItem !== activeStep)\r\n      );\r\n    }\r\n  };\r\n\r\n  const handleBack = () => {\r\n    setActiveStep(activeStep - 1);\r\n  };\r\n\r\n  const handleSkip = () => {\r\n    if (!isStepSkipped(activeStep)) {\r\n      setSkippedSteps([...skippedSteps, activeStep]);\r\n    }\r\n    setActiveStep(activeStep + 1);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Stepper alternativeLabel activeStep={activeStep}>\r\n        {steps.map((step, index) => {\r\n          const labelProps = {};\r\n          const stepProps = {};\r\n          if (isStepOptional(index)) {\r\n            labelProps.optional = (\r\n              <Typography\r\n                variant=\"caption\"\r\n                align=\"center\"\r\n                style={{ display: \"block\" }}\r\n              >\r\n                optional\r\n              </Typography>\r\n            );\r\n          }\r\n          if (isStepSkipped(index)) {\r\n            stepProps.completed = false;\r\n          }\r\n          return (\r\n            <Step {...stepProps} key={index}>\r\n              <StepLabel {...labelProps}>{step}</StepLabel>\r\n            </Step>\r\n          );\r\n        })}\r\n      </Stepper>\r\n\r\n      {activeStep === steps.length ? (\r\n        <Typography variant=\"h3\" align=\"center\">\r\n          Thank You\r\n        </Typography>\r\n      ) : (\r\n        <>\r\n          <FormProvider {...methods}>\r\n            <form onSubmit={methods.handleSubmit(handleNext)}>\r\n              {getStepContent(activeStep)}\r\n\r\n              <Button\r\n                className={classes.button}\r\n                disabled={activeStep === 0}\r\n                onClick={handleBack}\r\n              >\r\n                back\r\n              </Button>\r\n              {isStepOptional(activeStep) && (\r\n                <Button\r\n                  className={classes.button}\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  onClick={handleSkip}\r\n                >\r\n                  skip\r\n                </Button>\r\n              )}\r\n              <Button\r\n                className={classes.button}\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                 onClick={handleNext}\r\n                type=\"submit\"\r\n              >\r\n                {activeStep === steps.length - 1 ? \"Finish\" : \"Next\"}\r\n              </Button>\r\n            </form>\r\n          </FormProvider>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import {\r\n    Button,\r\n    Switch,\r\n    InputLabel,\r\n    MenuItem,\r\n    FormControl,\r\n    Select,\r\n    TextField,\r\n    autocompleteClasses,\r\n    Box,\r\n    Container,\r\n    Stack,\r\n    Grid,\r\n    Typography\r\n} from \"@mui/material\"\r\nimport axios from 'axios';\r\nimport { useState } from \"react\"\r\nimport { useForm } from \"react-hook-form\";\r\nimport { color } from \"@mui/system\";\r\nimport { SelectChangeEvent } from '@mui/material/Select';\r\nimport CustomerNames from \"./CustomersNames\";\r\n\r\nimport Notification from '../../components/Notifications';\r\n\r\n\r\nfunction NewInv(props) {\r\n    const { insernewdata, setOpenPopup2 } = props\r\n    const { register, handleSubmit, formState: { errors } } = useForm({\r\n        mode: \"onBlur\"\r\n    });\r\n    const [notify, setNotify] = useState({ isOpen: false, message: '', type: '' })\r\n    const [amount, setAmount] = useState('')\r\n    const [profitamount, setProfit] = useState('')\r\n    const [total, setTotal] = useState('')\r\n    const [type, setType] = useState('');\r\n    const handleChangetype = (event: SelectChangeEvent) => {\r\n        setType(event.target.value);\r\n    };\r\n    const registerOptions = {\r\n        Account: \"\",\r\n        ApplicantName: \"\",\r\n        Address: \"\",\r\n        Postcode: \"\",\r\n        mobile: \"\",\r\n        teloffice: \"\",\r\n        natureofbusiness: \"\",\r\n        facilitytype: \"\",\r\n        dateofestablishment: \"\",\r\n        purpose: \"\",\r\n        cost: \"\",\r\n        contribution: \"\",\r\n        amount: \"\",\r\n        period: \"\",\r\n        security: \"\",\r\n        nameguarantor: \"\",\r\n        naturesecurity: \"\",\r\n        Addresssecurity: \"\",\r\n        phone: \"\",\r\n\r\n    }\r\n\r\n    const handleCancel = () => {\r\n        return setOpenPopup2(false)\r\n    }\r\n\r\n    const handleAmount = (event) => {\r\n        // 👇 Get input value from \"event\"\r\n        setAmount(event.target.value);\r\n    };\r\n\r\n    const handleProfit = (event) => {\r\n        // 👇 Get input value from \"event\"\r\n        setTotal(event.target.value + amount);\r\n\r\n        console.log(total)\r\n    };\r\n\r\n    function handleRegistration(values) {\r\n        insernewdata(values)\r\n    }\r\n\r\n    function handleError(event) { }\r\n    const label = { inputProps: { 'aria-label': 'Switch demo' } };\r\n    return (\r\n        <Container maxWidth=\"lg\" sx={{ margin: 0 }}>\r\n            <Box sx={{ padding: '10px', borderRadius: '10px' }}>\r\n                <Stack direction=\"row\" spacing={2}>\r\n                    <Box flex={2}>\r\n                        <TextField\r\n                            id=\"Account\"\r\n                            label=\"Account\"\r\n                            variant=\"outlined\"\r\n                            placeholder=\"Account\"\r\n                            name=\"Account\"\r\n                            fullWidth\r\n                            margin=\"normal\"\r\n                            {...register('Account', registerOptions.Account)}\r\n                        />\r\n                    </Box>\r\n                    <Box flex={2} >\r\n                        <TextField\r\n                            id=\"ApplicantName\"\r\n                            label=\"Applicant Name\"\r\n                            variant=\"outlined\"\r\n                            placeholder=\"Applicant Name\"\r\n                            fullWidth\r\n                            name=\"ApplicantName\"\r\n                            margin=\"normal\"\r\n                            {...register('ApplicantName', registerOptions.ApplicantName)}\r\n                        />\r\n                       \r\n                        <Typography sx={{ color: 'red' }}>{errors.purpose?.type === \"required\" && \"Purpose is required\"}</Typography>\r\n                    </Box>\r\n                    <Box flex={2}>\r\n                        <TextField\r\n                            id=\"address\"\r\n                            label=\"Full Address\"\r\n                            variant=\"outlined\"\r\n                            placeholder=\"Full Address\"\r\n                            fullWidth\r\n                            name=\"Address\"\r\n                            margin=\"normal\"\r\n                            {...register('Address', registerOptions.Address)}\r\n                        />\r\n                       \r\n                        <Typography sx={{ color: 'red' }}>{errors.amount?.type === \"required\" && \"Amount is required\"}</Typography>\r\n                    </Box>\r\n                    \r\n                </Stack>\r\n\r\n\r\n                <br />\r\n\r\n                <Stack direction=\"row\" spacing={2}>\r\n                    <Box flex={2} >\r\n                        <TextField\r\n                            id=\"mobile\"\r\n                            label=\"Mobile\"\r\n                            variant=\"outlined\"\r\n                            placeholder=\"Mobile\"\r\n                            fullWidth\r\n                            name=\"mobile\"\r\n                            margin=\"normal\"\r\n                            {...register('mobile', registerOptions.mobile)}\r\n                        />\r\n\r\n                        <Typography sx={{ color: 'red' }}>{errors.tenure?.type === \"required\" && \"Tenure is required\"}</Typography>\r\n                    </Box>\r\n                    \r\n                    <Box flex={2} >\r\n                        <TextField\r\n                            id=\"Postcode\"\r\n                            label=\"Post Code\"\r\n                            variant=\"outlined\"\r\n                            placeholder=\"Post Code\"\r\n                            fullWidth\r\n                            margin=\"normal\"\r\n                            name=\"Postcode\"\r\n                            {...register('Postcode', registerOptions.Postcode)}\r\n                        />\r\n                        <Typography sx={{ color: 'red' }}>{errors.profitamount?.type === \"required\" && \"Profit Amount is required\"}</Typography>\r\n                    </Box>\r\n                    <Box flex={2}>\r\n                        <TextField\r\n                            id=\"teloffice\"\r\n                            label=\"Tel Office\"\r\n                            variant=\"outlined\"\r\n                            placeholder=\"Tell Office\"\r\n                            fullWidth\r\n                            margin=\"normal\"\r\n                            name=\"teloffice\"\r\n                            {...register('teloffice', registerOptions.teloffice)}\r\n                        />\r\n                        <Typography sx={{ color: 'red' }}>{errors.totalamount?.type === \"required\" && \"Total Amount is required\"}</Typography>\r\n                    </Box>\r\n                   \r\n                </Stack>\r\n\r\n                <br />\r\n\r\n                <Stack direction=\"row\" spacing={2}>\r\n                    <Box flex={2} >\r\n                        <TextField\r\n                            id=\"natureofbusiness\"\r\n                            label=\"Nature of Business\"\r\n                            variant=\"outlined\"\r\n                            placeholder=\"Nature of Business\"\r\n                            fullWidth\r\n                            margin=\"normal\"\r\n                            name=\"natureofbusiness\"\r\n                            {...register('natureofbusiness', registerOptions.natureofbusiness)}\r\n                        />\r\n                        <Typography sx={{ color: 'red' }}>{errors.monthlyinstallment?.type === \"required\" && \"Monthly installment is required\"}</Typography>\r\n                    </Box>\r\n                    <Box flex={2}>\r\n                        <TextField\r\n                            id=\"purpose\"\r\n                            label=\"Purpose of finance\"\r\n                            variant=\"outlined\"\r\n                            placeholder=\"Purpose of finance\"\r\n                            fullWidth\r\n\r\n                            margin=\"normal\"\r\n                            {...register('purpose', registerOptions.purpose)}\r\n                        />\r\n                        <Typography sx={{ color: 'red' }}>{errors.sourceofpayment?.type === \"required\" && \"Source of Payment is required\"}</Typography>\r\n                    </Box>\r\n                    <Box flex={2} >\r\n                        <TextField\r\n                            id=\"totalcost\"\r\n                            label=\"Total Cost\"\r\n                            variant=\"outlined\"\r\n                            placeholder=\"Total Cost\"\r\n                            name=\"cost\"\r\n                            margin=\"normal\"\r\n                            {...register('cost', registerOptions.cost)}\r\n                        />\r\n                        <Typography sx={{ color: 'red' }}>{errors.securitydetails?.type === \"required\" && \"Security detail is required\"}</Typography>\r\n                    </Box>\r\n                    \r\n                </Stack>\r\n\r\n<br/>\r\n\r\n                <Stack direction=\"row\" spacing={2}>\r\n                    <Box flex={2}>\r\n\r\n                        <FormControl fullWidth>\r\n                            <InputLabel id=\"demo-simple-select-label\">Type of Company</InputLabel>\r\n\r\n                            <Select\r\n                                labelId=\"demo-simple-select-label\"\r\n                                id=\"facilitytype\"\r\n                         \r\n                                value={type}\r\n                                label=\"Facility Type\"\r\n                                onChange={handleChangetype}\r\n                                size=\"medium\"\r\n                                name=\"facilitytype\"\r\n                               \r\n                            >\r\n                                <MenuItem value='Proprietorship'>Proprietorship</MenuItem>\r\n                                <MenuItem value='Partnership'>Partnership</MenuItem>\r\n                                <MenuItem value='Limited'>Limited</MenuItem>\r\n                            </Select>\r\n\r\n\r\n                        </FormControl>\r\n                        <Typography sx={{ color: 'red' }}>{errors.profitrate?.type === \"required\" && \"Profit rate is required\"}</Typography>\r\n                    </Box>\r\n                    <Box flex={2}>\r\n                        <TextField\r\n                            id=\"contribution\"\r\n                            label=\"Your Contribution\"\r\n                            variant=\"outlined\"\r\n                            placeholder=\"Your Contribution\"\r\n                            name=\"contribution\"\r\n                            {...register('facilitytype', registerOptions.contribution)}\r\n                        />\r\n                        <Typography sx={{ color: 'red' }}>{errors.securitydescription?.type === \"required\" && \"Security description is required\"}</Typography>\r\n                    </Box>\r\n                    <Box flex={2} >\r\n                        <TextField\r\n                            id=\"amountrequested\"\r\n                            label=\"Amount Requested\"\r\n                            variant=\"outlined\"\r\n                            placeholder=\"Amount Requested\"\r\n                            name=\"amount\"\r\n                            {...register('amount', registerOptions.amount)}\r\n                        />\r\n                        <Typography sx={{ color: 'red' }}>{errors.value?.type === \"required\" && \"Value is required\"}</Typography>\r\n                    </Box>\r\n\r\n                </Stack>\r\n                <br />\r\n                <Stack direction=\"row\" spacing={1}>\r\n\r\n\r\n                    <Box flex={2} >\r\n                        <TextField\r\n                            id=\"period\"\r\n                            label=\"Finacing Period\"\r\n                            variant=\"outlined\"\r\n                            placeholder=\"Financing Period\"\r\n                            fullWidth\r\n                            name=\"period\"\r\n                            {...register('period', registerOptions.period)}\r\n\r\n                        />\r\n                        <Typography sx={{ color: 'red' }}>{errors.contribution?.type === \"required\" && \"Contribution is required\"}</Typography>\r\n                    </Box>\r\n                    <Box flex={2} >\r\n                        <TextField\r\n                            id=\"typeofsecurity\"\r\n                            label=\"Type of security/ colleteral offered\"\r\n                            variant=\"outlined\"\r\n                            placeholder=\"Type of security/ colleteral offered\"\r\n                            fullWidth\r\n                            name=\"security\"\r\n                            {...register('security', registerOptions.security)}\r\n\r\n\r\n                        />\r\n                        <Typography sx={{ color: 'red' }}>{errors.condition?.type === \"required\" && \"Conditions is required\"}</Typography>\r\n\r\n                    </Box>\r\n                    <Box flex={2} >\r\n                        <TextField\r\n                            id=\"nameofguarantor\"\r\n                            label=\"Name of guarantor ( in case of third party )\"\r\n                            variant=\"outlined\"\r\n                            placeholder=\"Name of guarantor ( in case of third party )\"\r\n                            fullWidth\r\n                            name=\"nameguarantor\"\r\n                            {...register('nameguarantor', registerOptions.nameguarantor)}\r\n                          \r\n                        />\r\n                        <Typography sx={{ color: 'red' }}>{errors.RM?.type === \"required\" && \"RM is required\"}</Typography>\r\n\r\n                    </Box>\r\n                </Stack>\r\n                <br />\r\n\r\n                <Stack direction=\"row\" spacing={1}>\r\n\r\n\r\n                    <Box flex={2} >\r\n                        <TextField\r\n                            id=\"phone\"\r\n                            label=\"Phone\"\r\n                            variant=\"outlined\"\r\n                            placeholder=\"Phone\"\r\n                            name=\"phone\"\r\n                            {...register('phone', registerOptions.phone)}\r\n                        />\r\n                        <Typography sx={{ color: 'red' }}>{errors.contribution?.type === \"required\" && \"Contribution is required\"}</Typography>\r\n                    </Box>\r\n                    <Box flex={2} >\r\n                        <TextField\r\n                            id=\"natureofbusiesssecurity\"\r\n                            label=\"Nature of business Security\"\r\n                            variant=\"outlined\"\r\n                            placeholder=\"Nature of business Security\"\r\n                            name=\"naturesecurity\"\r\n                            {...register('naturesecurity', registerOptions.naturesecurity)}\r\n                        />\r\n                        <Typography sx={{ color: 'red' }}>{errors.condition?.type === \"required\" && \"Conditions is required\"}</Typography>\r\n\r\n                    </Box>\r\n                    <Box flex={2} >\r\n                        <TextField\r\n                            id=\"addresssecurity\"\r\n                            label=\"Address\"\r\n                            variant=\"outlined\"\r\n                            placeholder=\"Address\"\r\n                            name=\"Addresssecurity\"\r\n                            {...register('Addresssecurity', registerOptions.Addresssecurity)}\r\n                        />\r\n                        <Typography sx={{ color: 'red' }}>{errors.RM?.type === \"required\" && \"RM is required\"}</Typography>\r\n\r\n                    </Box>\r\n                </Stack>\r\n                <br />\r\n\r\n                <Button variant=\"contained\"\r\n                    onClick={handleSubmit(handleRegistration, handleError)}\r\n                >Submit Application</Button>\r\n                <Button onClick={handleCancel}>Cancel</Button>\r\n            </Box>\r\n        </Container>\r\n\r\n    )\r\n}\r\nexport default NewInv\r\n","import { Helmet } from 'react-helmet-async';\r\nimport { filter } from 'lodash';\r\nimport { useNavigate } from \"react-router-dom\"\r\nimport { sentenceCase } from 'change-case';\r\nimport { useState, useEffect } from 'react';\r\n// @mui\r\nimport {\r\n    Card,\r\n    Table,\r\n    Stack,\r\n    Paper,\r\n    Avatar,\r\n    Button,\r\n    Popover,\r\n    Checkbox,\r\n    TableRow,\r\n    MenuItem,\r\n    TableBody,\r\n    TableCell,\r\n    Container,\r\n    Typography,\r\n    IconButton,\r\n    TableContainer,\r\n    TablePagination,\r\n} from '@mui/material';\r\n\r\n\r\n\r\nimport axios from 'axios';\r\n\r\nimport VisibilityIcon from '@mui/icons-material/Visibility';\r\nimport CloudUploadIcon from '@mui/icons-material/CloudUpload';\r\nimport LibraryAddIcon from '@mui/icons-material/LibraryAdd';\r\nimport EditIcon from '@mui/icons-material/ModeEditOutlineOutlined';\r\nimport { variables } from \"../../variables\";\r\n// components\r\nimport Label from '../../components/label';\r\nimport Iconify from '../../components/iconify';\r\nimport Scrollbar from '../../components/scrollbar';\r\n// sections\r\nimport { UserListHead, UserListToolbar } from '../../sections/@dashboard/user';\r\n// mock\r\nimport USERLIST from '../../_mock/user';\r\n\r\nimport Popup from '../../components/Popup';\r\nimport CustomizedDialogs from '../../components/Dialog/CustomizedDialogs'\r\nimport ExistingFacilities from './ExistingFacilities';\r\nimport NewUpload from './NewUpload';\r\nimport Notification from '../../components/Notifications';\r\nimport Edit from './EditInvestment';\r\nimport StepForm from './StepForm';\r\n\r\nimport { useAuthContext } from '../../auth/useAuthContext';\r\nimport Invest from './NewInv';\r\nimport NewVote from './NewVote';\r\n// ----------------------------------------------------------------------\r\n\r\nconst TABLE_HEAD = [\r\n    { id: 'account', label: 'Account', alignRight: false },\r\n    { id: 'applicant', label: 'Applicant Name', alignRight: false },\r\n    { id: 'purpose', label: 'Purpsoe', alignRight: false },\r\n    { id: 'amount', label: 'Amount', alignRight: false },\r\n    { id: 'period', label: 'Period', alignRight: false },\r\n    { id: 'status', label: 'Status', alignRight: false },\r\n    { id: 'action', label: 'Action', alignRight: false },\r\n];\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nfunction descendingComparator(a, b, orderBy) {\r\n    if (b[orderBy] < a[orderBy]) {\r\n        return -1;\r\n    }\r\n    if (b[orderBy] > a[orderBy]) {\r\n        return 1;\r\n    }\r\n    return 0;\r\n}\r\n\r\nfunction getComparator(order, orderBy) {\r\n    return order === 'desc'\r\n        ? (a, b) => descendingComparator(a, b, orderBy)\r\n        : (a, b) => -descendingComparator(a, b, orderBy);\r\n}\r\n\r\nfunction applySortFilter(array, comparator, query) {\r\n    const stabilizedThis = array.map((el, index) => [el, index]);\r\n    stabilizedThis.sort((a, b) => {\r\n        const order = comparator(a[0], b[0]);\r\n        if (order !== 0) return order;\r\n        return a[1] - b[1];\r\n    });\r\n    if (query) {\r\n        return filter(array, (_user) => _user.customername.toLowerCase().indexOf(query.toLowerCase()) !== -1);\r\n    }\r\n    return stabilizedThis.map((el) => el[0]);\r\n}\r\n\r\nexport default function UserPage() {\r\n    const [open, setOpen] = useState(null);\r\n    const { user } = useAuthContext();\r\n    const [page, setPage] = useState(0);\r\n\r\n    const [order, setOrder] = useState('asc');\r\n\r\n    const [selected, setSelected] = useState([]);\r\n\r\n    const [orderBy, setOrderBy] = useState('name');\r\n\r\n    const [filterName, setFilterName] = useState('');\r\n\r\n    const [recordForEdit, SetRecordForEdit] = useState(null)\r\n    const [notify, setNotify] = useState({ isOpen: false, message: '', type: '' })\r\n    const [recordForApp, setRecordForApp] = useState(false)\r\n    const [openPopup, setOpenPopup] = useState(false)\r\n    const [openEdit, setOpenUpdate] = useState(false)\r\n    const [openPopup2, setOpenPopup2] = useState(false)\r\n    const [openPopup3, setOpenPopup3] = useState(false)\r\n    const [openPopup4, setOpenPopup4] = useState(false)\r\n    const [openUpload, setUpload] = useState(false)\r\n    const [uploaddocuments, SetUploadDocuments] = useState(null)\r\n\r\n    const [rowsPerPage, setRowsPerPage] = useState(5);\r\n    const [rows, setRows] = useState([]);\r\n\r\n    const handleOpenMenu = (event) => {\r\n        setOpen(event.currentTarget);\r\n    };\r\n\r\n    const handleCloseMenu = () => {\r\n        setOpen(null);\r\n    };\r\n\r\n    const handleRequestSort = (event, property) => {\r\n        const isAsc = orderBy === property && order === 'asc';\r\n        setOrder(isAsc ? 'desc' : 'asc');\r\n        setOrderBy(property);\r\n    };\r\n\r\n    const handleSelectAllClick = (event) => {\r\n        if (event.target.checked) {\r\n            const newSelecteds = USERLIST.map((n) => n.name);\r\n            setSelected(newSelecteds);\r\n            return;\r\n        }\r\n        setSelected([]);\r\n    };\r\n\r\n    const handleClick = (event, name) => {\r\n        const selectedIndex = selected.indexOf(name);\r\n        let newSelected = [];\r\n        if (selectedIndex === -1) {\r\n            newSelected = newSelected.concat(selected, name);\r\n        } else if (selectedIndex === 0) {\r\n            newSelected = newSelected.concat(selected.slice(1));\r\n        } else if (selectedIndex === selected.length - 1) {\r\n            newSelected = newSelected.concat(selected.slice(0, -1));\r\n        } else if (selectedIndex > 0) {\r\n            newSelected = newSelected.concat(selected.slice(0, selectedIndex), selected.slice(selectedIndex + 1));\r\n        }\r\n        setSelected(newSelected);\r\n    };\r\n\r\n    const handleChangePage = (event, newPage) => {\r\n        setPage(newPage);\r\n    };\r\n\r\n    const handleChangeRowsPerPage = (event) => {\r\n        setPage(0);\r\n        setRowsPerPage(parseInt(event.target.value, 10));\r\n    };\r\n\r\n    const handleFilterByName = (event) => {\r\n        setPage(0);\r\n        setFilterName(event.target.value);\r\n    };\r\n\r\n    const emptyRows = page > 0 ? Math.max(0, (1 + page) * rowsPerPage - rows.length) : 0;\r\n\r\n    const filteredUsers = applySortFilter(rows, getComparator(order, orderBy), filterName);\r\n\r\n    const isNotFound = !filteredUsers.length && !!filterName;\r\n\r\n\r\n    const getinvestments = async () => {\r\n\r\n        try {\r\n        \r\n            const Endpoint = `Investments`\r\n                const data = await axios.get(variables.API_URL + Endpoint);\r\n\r\n                setRows(data.data);\r\n            \r\n\r\n        }\r\n        catch (e) {\r\n            console.log(e);\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n    // Displaying Data\r\n\r\n    useEffect(() => {\r\n        getinvestments();\r\n    }, []);\r\n\r\n\r\n    const openInPopup = row => {\r\n\r\n        setRecordForApp(row)\r\n        setOpenPopup3(true)\r\n\r\n    }\r\n\r\n    const openAddDetails = row => {\r\n\r\n        SetRecordForEdit(row)\r\n        setOpenPopup(true)\r\n\r\n    }\r\n\r\n    const openVote = row => {\r\n\r\n        SetRecordForEdit(row)\r\n        setOpenPopup4(true)\r\n\r\n    }\r\n\r\n    const openUploadForm = row => {\r\n        SetUploadDocuments(row)\r\n        setUpload(true)\r\n\r\n    }\r\n\r\n\r\n    const insernewdata = (values) => {\r\n\r\n        const Endpoint = 'Investments'\r\n        axios.post(variables.API_URL + Endpoint, {\r\n\r\n            account: values.Account,\r\n            applicantName: values.ApplicantName,\r\n            address: values.Address,\r\n            postcode: values.Postcode,\r\n            mobile: values.mobile,\r\n            teloffice: values.teloffice,\r\n            natureofbusiness: values.natureofbusiness,\r\n            type: values.facilitytype,\r\n           // dateofestablishment: values.dateofestablishment,\r\n            purpose: values.purpose,\r\n            cost: values.cost,\r\n            contribution: values.contribution,\r\n            amount: values.amount,\r\n            period: values.period,\r\n            security: values.security,\r\n            nameguarantor: values.nameguarantor,\r\n            naturesecurity: values.naturesecurity,\r\n            addresssecurity: values.Addresssecurity,\r\n            phone: values.phone,\r\n            status: \"Proposed\"\r\n\r\n\r\n        })\r\n            .then((response) => {\r\n\r\n                setNotify({\r\n                    isOpen: true,\r\n                    message: 'Application Successfuly Submited',\r\n                    type: 'success'\r\n                }\r\n\r\n                )\r\n\r\n                setOpenPopup2(false)\r\n\r\n            })\r\n            .catch((e) => {\r\n                console.log(\"Hello errors\")\r\n                setNotify({\r\n                    isOpen: true,\r\n                    message: 'Employee not hired',\r\n                    type: 'error'\r\n                }\r\n                )\r\n            })\r\n    }\r\n\r\n    const insertfacility = (values) => {\r\n\r\n        const Endpoint = 'Facilities'\r\n        axios.post(variables.API_URL + Endpoint, {\r\n\r\n            FacilityType: values.FacilityType,\r\n            Amountdisbursed: values.Amountdisbursed,\r\n            outstanding: values.outstanding,\r\n            profitrate: values.profitrate,\r\n            totalprofit: values.totalprofit,\r\n            maturitydate: values.maturitydate,\r\n            monthlyinstallment: values.monthlyinstallment,\r\n            Bank: values.Bank,\r\n            applicationid: values.applicationid,\r\n\r\n        })\r\n            .then((response) => {\r\n\r\n                setNotify({\r\n                    isOpen: true,\r\n                    message: 'Details Added',\r\n                    type: 'success'\r\n                }\r\n\r\n                )\r\n\r\n                setOpenPopup(false)\r\n\r\n            })\r\n            .catch((e) => {\r\n                console.log(\"Hello errors\")\r\n                setNotify({\r\n                    isOpen: true,\r\n                    message: 'Employee not hired',\r\n                    type: 'error'\r\n                }\r\n                )\r\n            })\r\n    }\r\n\r\n    const openInUpdate = row => {\r\n        setRecordForApp(row)\r\n        setOpenUpdate(true)\r\n    }\r\n\r\n    const updatedata = (values) => {\r\n        console.log(values)\r\n        const Endpoint = `IndividualApp`\r\n        axios.put(variables.API_URL + Endpoint, {\r\n            id: values.applicationid,\r\n            customerid: values.customerid,\r\n            purpose: values.purpose,\r\n            amount: values.amount,\r\n            tenure: values.tenure,\r\n            contribution: values.contribution,\r\n            profitrate: values.profitrate,\r\n            profitamount: values.profitamount,\r\n            totalamount: values.totalamount,\r\n            monthlyinstallment: values.monthlyinstallment,\r\n            securitydetails: values.securitydetails,\r\n            securitydescription: values.securitydescription,\r\n            sourceofpayment: values.sourceofpayment,\r\n            value: values.value,\r\n            condition: values.condition,\r\n            RM: values.RM,\r\n            status: values.status\r\n        })\r\n            .then((response) => {\r\n                setNotify({\r\n                    isOpen: true,\r\n                    message: 'Updated Successfully',\r\n                    type: 'success'\r\n                }\r\n                )\r\n                setOpenPopup3(false);\r\n            })\r\n            .catch((e) => {\r\n                console.log(\"Hello\")\r\n            })\r\n    }\r\n\r\n    const navigate = useNavigate();\r\n\r\n    const handleView = (row) => {\r\n        setRecordForApp(row)\r\n        navigate(\"/dashboard/application/views\");\r\n    }\r\n\r\n    const insertvote = (values) => {\r\n\r\n        const Endpoint = 'Voting/investment'\r\n        axios.post(variables.API_URL + Endpoint, {\r\n\r\n            recommendation: values.recommendation,\r\n            role: user.role,\r\n            fullname: user.fullname,\r\n            applicationid: values.id,\r\n            email: user?.userName,\r\n            status: values.status,\r\n        })\r\n            .then((response) => {\r\n\r\n                setNotify({\r\n                    isOpen: true,\r\n                    message: 'Recommended Added',\r\n                    type: 'success'\r\n                }\r\n\r\n                )\r\n\r\n                setOpenPopup4(false)\r\n\r\n            })\r\n            .catch((e) => {\r\n                console.log(\"Hello errors\")\r\n                setNotify({\r\n                    isOpen: true,\r\n                    message: 'Employee not hired',\r\n                    type: 'error'\r\n                }\r\n                )\r\n            })\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <Helmet>\r\n                <title> User | Minimal UI </title>\r\n            </Helmet>\r\n\r\n            <Container>\r\n                <Stack direction=\"row\" alignItems=\"center\" justifyContent=\"space-between\" mb={5}>\r\n                    <Typography variant=\"h4\" gutterBottom>\r\n                       Business Investments\r\n                    </Typography>\r\n                    <Button variant=\"contained\" onClick={() => setOpenPopup2(true)} startIcon={<Iconify icon=\"eva:plus-fill\" />}>\r\n                        New\r\n                    </Button>\r\n                </Stack>\r\n\r\n                <Card>\r\n                    <UserListToolbar numSelected={selected.length} filterName={filterName} onFilterName={handleFilterByName} />\r\n\r\n                    <Scrollbar>\r\n                        <TableContainer sx={{ minWidth: 800 }}>\r\n                            <Table>\r\n                                <UserListHead\r\n                                    order={order}\r\n                                    orderBy={orderBy}\r\n                                    headLabel={TABLE_HEAD}\r\n                                    rowCount={rows.length}\r\n                                    numSelected={selected.length}\r\n                                    onRequestSort={handleRequestSort}\r\n                                    onSelectAllClick={handleSelectAllClick}\r\n                                />\r\n                                <TableBody>\r\n                                    {filteredUsers.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row) => {\r\n                                        //  const { id,customername, mobile, status, purpose,amount,profitamount} = row;\r\n                                        const selectedUser = selected.indexOf(row.customername) !== -1;\r\n\r\n                                        return (\r\n                                            <TableRow hover key={row.id} tabIndex={-1} role=\"checkbox\" selected={selectedUser}>\r\n                                                <TableCell padding=\"checkbox\">\r\n                                                    <Checkbox checked={selectedUser} onChange={(event) => handleClick(event, row.customername)} />\r\n                                                </TableCell>\r\n\r\n                                                <TableCell component=\"th\" scope=\"row\" padding=\"none\">\r\n                                                    <Stack direction=\"row\" alignItems=\"center\" spacing={2}>\r\n                                                        <Avatar alt={row.applicantName} />\r\n                                                        <Typography variant=\"subtitle2\" noWrap>\r\n                                                            {row.account}\r\n                                                        </Typography>\r\n                                                    </Stack>\r\n                                                </TableCell>\r\n\r\n                                                <TableCell align=\"left\">{row.applicantName}</TableCell>\r\n                                                <TableCell align=\"left\">{row.purpose}</TableCell>\r\n                                                <TableCell align=\"left\">{row.amount}</TableCell>\r\n                                                <TableCell align=\"left\">{row.period}</TableCell>\r\n                                                <TableCell align=\"left\">\r\n                                                    <Label color={(row.status === 'Proposed' && 'info') || (row.status === 'Declined' && 'error') || (row.status === 'Approved' && 'success') || (row.status === 'Pending' && 'warning') || (row.status === 'Process' && 'success') || (row.status === 'Executed' && 'primary')} >{sentenceCase(row.status)}</Label>\r\n                                                </TableCell>\r\n\r\n                                                <TableCell align=\"right\">\r\n                                                    <Button variant='bg-green-500 mx-2' onClick={() => openInPopup(row)} startIcon={<EditIcon />} />\r\n                                                    <Button variant='bg-cayn-500 mx-2' onClick={() => navigate({\r\n                                                        pathname: `/dashboard/application/viewinvestments/${row.id}`\r\n                                                    })} startIcon={<VisibilityIcon />} color=\"info\" />\r\n                                                    \r\n                                                    {user?.role === \"COM\" && (\r\n                                                        <Button variant='bg-red-500 mx-2' onClick={() => openVote(row)} startIcon={<LibraryAddIcon />} color=\"error\" />\r\n                                                    )\r\n                                                    }\r\n\r\n                                                    {/* <IconButton size=\"large\" color=\"inherit\" onClick={handleOpenMenu}>\r\n                            <Iconify icon={'eva:more-vertical-fill'} ref />\r\n                          </IconButton> */}\r\n                                                </TableCell>\r\n                                            </TableRow>\r\n                                        );\r\n                                    })}\r\n                                    {emptyRows > 0 && (\r\n                                        <TableRow style={{ height: 53 * emptyRows }}>\r\n                                            <TableCell colSpan={6} />\r\n                                        </TableRow>\r\n                                    )}\r\n                                </TableBody>\r\n\r\n                                {isNotFound && (\r\n                                    <TableBody>\r\n                                        <TableRow>\r\n                                            <TableCell align=\"center\" colSpan={6} sx={{ py: 3 }}>\r\n                                                <Paper\r\n                                                    sx={{\r\n                                                        textAlign: 'center',\r\n                                                    }}\r\n                                                >\r\n                                                    <Typography variant=\"h6\" paragraph>\r\n                                                        Not found\r\n                                                    </Typography>\r\n\r\n                                                    <Typography variant=\"body2\">\r\n                                                        No results found for &nbsp;\r\n                                                        <strong>&quot;{filterName}&quot;</strong>.\r\n                                                        <br /> Try checking for typos or using complete words.\r\n                                                    </Typography>\r\n                                                </Paper>\r\n                                            </TableCell>\r\n                                        </TableRow>\r\n                                    </TableBody>\r\n                                )}\r\n                            </Table>\r\n                        </TableContainer>\r\n                    </Scrollbar>\r\n\r\n                    <TablePagination\r\n                        rowsPerPageOptions={[5, 10, 25]}\r\n                        component=\"div\"\r\n                        count={USERLIST.length}\r\n                        rowsPerPage={rowsPerPage}\r\n                        page={page}\r\n                        onPageChange={handleChangePage}\r\n                        onRowsPerPageChange={handleChangeRowsPerPage}\r\n                    />\r\n                </Card>\r\n            </Container>\r\n\r\n            <Popover\r\n                open={Boolean(open)}\r\n                anchorEl={open}\r\n                onClose={handleCloseMenu}\r\n                anchorOrigin={{ vertical: 'top', horizontal: 'left' }}\r\n                transformOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n                PaperProps={{\r\n                    sx: {\r\n                        p: 1,\r\n                        width: 140,\r\n                        '& .MuiMenuItem-root': {\r\n                            px: 1,\r\n                            typography: 'body2',\r\n                            borderRadius: 0.75,\r\n                        },\r\n                    },\r\n                }}\r\n            >\r\n\r\n\r\n                <MenuItem sx={{ color: 'error.main' }}  >\r\n                    <Iconify icon={'eva:edit-fill'} sx={{ mr: 2 }} />\r\n                    Edit\r\n                </MenuItem>\r\n                <MenuItem sx={{ color: 'error.main' }}>\r\n                    <Iconify icon={'eva:trash-2-outline'} sx={{ mr: 2 }} />\r\n                    Delete\r\n                </MenuItem>\r\n            </Popover>\r\n\r\n            <Popup\r\n                openPopup={openPopup3}\r\n                setOpenPopup={setOpenPopup3}\r\n                title=\"Edit Application\"\r\n            >\r\n                <Edit\r\n                    recordForApp={recordForApp}\r\n                    insertdata={updatedata}\r\n                    setOpenPopup3={setOpenPopup3}\r\n\r\n                />\r\n\r\n\r\n            </Popup>\r\n\r\n\r\n            <Popup\r\n                openPopup={openPopup}\r\n                setOpenPopup={setOpenPopup}\r\n                title=\"Existing Facilities\"\r\n            >\r\n                <Edit\r\n                    recordForEdit={recordForEdit}\r\n                    insertfacility={insertfacility}\r\n                    setOpenPopup={setOpenPopup}\r\n                />\r\n            </Popup>\r\n\r\n            <Popup\r\n                openPopup={openUpload}\r\n                setUpload={setUpload}\r\n                title=\"New Uploads\"\r\n            >\r\n                <NewUpload\r\n                    uploaddocuments={uploaddocuments}\r\n                    setUpload={setUpload}\r\n                />\r\n\r\n\r\n            </Popup>\r\n\r\n            <Popup\r\n                openPopup={openPopup2}\r\n                setOpenPopup={setOpenPopup2}\r\n                title=\"New Investment\"\r\n            >\r\n                <Invest insernewdata={insernewdata} setOpenPopup2={setOpenPopup2} />\r\n            </Popup>\r\n\r\n            <Popup\r\n                openPopup={openPopup4}\r\n                setOpenPopup4={setOpenPopup4}\r\n                title=\"Application Recommendation\"\r\n            >\r\n\r\n\r\n                <NewVote\r\n                    recordForEdit={recordForEdit}\r\n                    insertvote={insertvote}\r\n                    setOpenPopup4={setOpenPopup4}\r\n                />\r\n\r\n\r\n            </Popup>\r\n\r\n            <Notification\r\n                notify={notify}\r\n                setNotify={setNotify}\r\n            />\r\n\r\n        </>\r\n    );\r\n}\r\n"],"names":["props","insertdata","recordForApp","setOpenPopup3","useForm","mode","register","handleSubmit","errors","formState","useState","isOpen","message","type","setType","registerOptions","Container","maxWidth","sx","margin","padding","borderRadius","direction","spacing","flex","id","label","variant","placeholder","name","fullWidth","defaultValue","account","applicantName","color","purpose","address","amount","postcode","tenure","mobile","profitamount","teloffice","totalamount","natureofbusiness","monthlyinstallment","sourceofpayment","cost","securitydetails","labelId","onChange","event","target","value","size","profitrate","contribution","securitydescription","period","security","condition","nameguarantor","RM","phone","naturesecurity","addresssecurity","onClick","values","makeStyles","theme","button","marginRight","insernewdata","setOpenPopup2","TABLE_HEAD","alignRight","descendingComparator","a","b","orderBy","UserPage","open","setOpen","user","useAuthContext","page","setPage","order","setOrder","selected","setSelected","setOrderBy","filterName","setFilterName","recordForEdit","SetRecordForEdit","notify","setNotify","setRecordForApp","openPopup","setOpenPopup","openPopup2","openPopup3","openPopup4","setOpenPopup4","openUpload","setUpload","uploaddocuments","rowsPerPage","setRowsPerPage","rows","setRows","emptyRows","Math","max","length","filteredUsers","array","comparator","query","stabilizedThis","map","el","index","sort","filter","_user","customername","toLowerCase","indexOf","applySortFilter","getComparator","isNotFound","getinvestments","axios","variables","data","console","log","useEffect","navigate","useNavigate","alignItems","justifyContent","mb","gutterBottom","startIcon","icon","Card","numSelected","onFilterName","minWidth","headLabel","rowCount","onRequestSort","property","onSelectAllClick","checked","newSelecteds","USERLIST","n","slice","row","selectedUser","hover","tabIndex","role","Checkbox","selectedIndex","newSelected","concat","handleClick","component","scope","Avatar","alt","noWrap","align","status","sentenceCase","openInPopup","pathname","Visibility","openVote","LibraryAdd","style","height","colSpan","py","textAlign","paragraph","rowsPerPageOptions","count","onPageChange","newPage","onRowsPerPageChange","parseInt","Popover","Boolean","anchorEl","onClose","anchorOrigin","vertical","horizontal","transformOrigin","PaperProps","p","width","px","typography","mr","title","applicationid","customerid","then","response","catch","e","insertfacility","FacilityType","Amountdisbursed","outstanding","totalprofit","maturitydate","Bank","Account","ApplicantName","Address","Postcode","facilitytype","Addresssecurity","NewVote","insertvote","recommendation","fullname","email","userName"],"sourceRoot":""}