{"version":3,"file":"static/js/139.7ceba220.chunk.js","mappings":"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","sources":["components/Dialog/CustomizedDialogs.js","components/Notifications.js","components/Popup.js","components/tables/useTable.js","pages/Departments/NewDepartment.js","pages/Departments/Department.js","variables.js"],"sourcesContent":["import * as React from 'react';\r\nimport Button from '@mui/material/Button';\r\nimport { styled } from '@mui/material/styles';\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport DialogActions from '@mui/material/DialogActions';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport CloseIcon from '@mui/icons-material/Close';\r\nimport Typography from '@mui/material/Typography';\r\n\r\nconst BootstrapDialog = styled(Dialog)(({ theme }) => ({\r\n  '& .MuiDialogContent-root': {\r\n    padding: theme.spacing(2),\r\n  },\r\n  '& .MuiDialogActions-root': {\r\n    padding: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nexport interface DialogTitleProps {\r\n  id: string;\r\n  children?: React.ReactNode;\r\n  onClose: () => void;\r\n}\r\n\r\nfunction BootstrapDialogTitle(props: DialogTitleProps) {\r\n  const { children, onClose, ...other } = props;\r\n\r\n  return (\r\n    <DialogTitle sx={{ m: 0, p: 2 }} {...other}>\r\n      {children}\r\n      {onClose ? (\r\n        <IconButton\r\n          aria-label=\"close\"\r\n          onClick={onClose}\r\n          sx={{\r\n            position: 'absolute',\r\n            right: 8,\r\n            top: 8,\r\n            color: (theme) => theme.palette.grey[500],\r\n          }}\r\n        >\r\n          <CloseIcon />\r\n        </IconButton>\r\n      ) : null}\r\n    </DialogTitle>\r\n  );\r\n}\r\n\r\nexport default function CustomizedDialogs({children,title}) {\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Button variant=\"outlined\" onClick={handleClickOpen}>\r\n        New Building\r\n      </Button>\r\n      <BootstrapDialog\r\n        onClose={handleClose}\r\n        aria-labelledby=\"customized-dialog-title\"\r\n        open={open}\r\n      >\r\n        <BootstrapDialogTitle id=\"customized-dialog-title\" onClose={handleClose}>\r\n         {title}\r\n        </BootstrapDialogTitle>\r\n        <DialogContent dividers>\r\n         {children}\r\n        </DialogContent>\r\n        \r\n      </BootstrapDialog>\r\n    </div>\r\n  );\r\n}\r\n","import * as React from 'react';\r\n\r\nimport { Snackbar,Alert } from '@mui/material';\r\nimport vertical from './nav-section/vertical';\r\nimport horizontal from './nav-section/horizontal';\r\n\r\n\r\nexport default function Notifications(props) {\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n    const { notify, setNotify} = props\r\n\r\n    \r\n  const handleClose = (event?: React.SyntheticEvent | Event, reason?: string) => {\r\n    if (reason === 'clickaway') {\r\n      return;\r\n    }\r\n\r\n    setOpen(false);\r\n  };\r\n\r\n\r\n  return (\r\n   <Snackbar\r\n   open={notify.isOpen}\r\n   autoHideDuration={6000}\r\n   anchorOrigin={{vertical:'top', horizontal:'right'}}\r\n   >\r\n    <Alert severity={notify.type}>\r\n{notify.message}\r\n    </Alert>\r\n   </Snackbar>\r\n  \r\n\r\n  );\r\n}\r\n","import React from 'react'\r\nimport { Dialog,DialogTitle,DialogContent } from '@mui/material';\r\n\r\nexport default function Popup(props) {\r\n\r\n    const {title,children,openPopup,setOpenPopup} = props;\r\n  return (\r\n    <Dialog open={openPopup} \r\n    aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\"\r\n        maxWidth=\"lg\"\r\n        \r\n    >\r\n        <DialogTitle>\r\n            {title}\r\n        </DialogTitle>\r\n        <DialogContent>\r\n            {children}\r\n        </DialogContent>\r\n    </Dialog>\r\n  );\r\n}\r\n","import React from 'react'\r\n\r\nimport { Helmet } from 'react-helmet-async';\r\n// @mui\r\nimport { Container, Typography, Table, TableHead, TableRow, TableCell} from '@mui/material';\r\n\r\nimport { makeStyles  } from '@mui/styles'\r\n// components\r\n\r\n\r\nconst useStyles = makeStyles(theme=>({\r\n  table:{\r\n    marginTop: theme.spacing(3),\r\n    '& thead th': {\r\n      fontweight: '800',\r\n      color: theme.white,\r\n      backgroundColor: theme.palette.primary.black,\r\n    },\r\n\r\n    '& tbody td': {\r\n      fontweight: '300',\r\n\r\n    },\r\n\r\n    '& tbody tr:hover':{\r\n      backgroundColor:'#fffbf2',\r\n      cursor: 'pointer',\r\n    },\r\n  },\r\n}))\r\n\r\n\r\nexport default function useTable(records,headCells) {\r\n  const classes = useStyles();\r\n    const TblContainer = props=>\r\n    (\r\n        <Table className={classes.Table}>\r\n{props.children}\r\n        </Table>\r\n    )\r\n\r\n   const Tblhead = props => \r\n    (\r\n      <TableHead>\r\n         <TableRow>\r\n          {\r\n            headCells.map(headCell => (\r\n              <TableCell key={headCell.id}>\r\n                {headCell.label}\r\n              </TableCell>\r\n            ))\r\n          }\r\n         </TableRow>\r\n      </TableHead>\r\n    )\r\n   \r\n\r\n  return {\r\nTblContainer,\r\nTblhead\r\n  }\r\n}\r\n","import {React,useState  }from 'react'\r\nimport { Helmet } from 'react-helmet-async';\r\n// @mui\r\nimport { Container, Typography,Grid, Paper, Button, TextField } from '@mui/material';\r\nimport axios from 'axios';\r\nimport { Formik, Form, Field, ErrorMessage } from 'formik'\r\nimport * as Yup from 'yup'\r\nimport Notification from '../../components/Notifications';\r\n// components\r\nimport { useSettingsContext } from '../../components/settings';\r\n\r\n\r\n\r\n\r\nexport default function NewDepartment(props) {\r\n    const paperStyle = { padding: '0 15px 40px 15px', width: 500, }\r\n    const btnStyle = { marginTop: 10 }\r\n    const [notify, setNotify]=useState({isOpen:false, message:'', type:''})\r\n    const {inserdata,setOpenPopup}= props\r\n  \r\n    const initialValues = {\r\n        depName: '',\r\n    }\r\n    const validationSchema = Yup.object().shape({\r\n        depName: Yup.string().min(3, \"It's too short\").required(\"Required\"),\r\n        \r\n        \r\n    })\r\n    const onSubmit = (values, props) => {\r\n        inserdata(values)\r\n    }\r\n\r\n    const CancelHandel = ()=>\r\n    {\r\n        setOpenPopup(false)\r\n    }\r\n\r\n  return (\r\n    <>\r\n     <Grid>\r\n            <Paper elevation={0} style={paperStyle}>\r\n                <Grid align='center'>\r\n                    <Typography variant='caption'>Fill the form to an new Department</Typography>\r\n                </Grid>\r\n                <Formik initialValues={initialValues} validationSchema={validationSchema} onSubmit={onSubmit}>\r\n                    {(props) => (\r\n                        <Form noValidate>\r\n                         \r\n\r\n                            <Field as={TextField} name='depName' label='Department Name' fullWidth\r\n                                error={props.errors.depName && props.touched.depName}\r\n                                helperText={<ErrorMessage name='depName' />}  />\r\n\r\n\r\n\r\n                       \r\n                         \r\n\r\n                            \r\n\r\n\r\n                            <Button type='submit' style={btnStyle} variant='contained'\r\n                                color='primary' >Create</Button>\r\n                                <Button onClick={CancelHandel} color=\"error\">Cancel</Button>\r\n                        </Form>\r\n                    )}\r\n                </Formik>\r\n            </Paper>\r\n        </Grid>\r\n\r\n        <Notification\r\n        notify={notify}\r\n        setNotify={setNotify}\r\n        />\r\n    </>\r\n  );\r\n}\r\n","import { Helmet } from 'react-helmet-async';\r\n// @mui\r\n\r\n\r\n\r\nimport AddBox from '@mui/icons-material/AddBox';\r\n\r\n\r\n\r\n\r\nimport { Component,forwardRef, useState, useEffect } from \"react\";\r\n\r\nimport MaterialTable from \"material-table\";\r\n\r\n// Import Material Icons\r\n\r\nimport ArrowDownward from '@mui/icons-material/ArrowDownward';\r\nimport Check from '@mui/icons-material/Check';\r\nimport ChevronLeft from '@mui/icons-material/ChevronLeft';\r\nimport ChevronRight from '@mui/icons-material/ChevronRight';\r\nimport Clear from '@mui/icons-material/Clear';\r\nimport DeleteOutline from '@mui/icons-material/DeleteOutline';\r\nimport Edit from '@mui/icons-material/Edit';\r\nimport FilterList from '@mui/icons-material/FilterList';\r\nimport FirstPage from '@mui/icons-material/FirstPage';\r\nimport LastPage from '@mui/icons-material/LastPage';\r\nimport Remove from '@mui/icons-material/Remove';\r\nimport SaveAlt from '@mui/icons-material/SaveAlt';\r\n\r\nimport Search from '@mui/icons-material/Search';\r\nimport ViewColumn from '@mui/icons-material/ViewColumn';\r\n\r\nimport Refresh from '@mui/icons-material/Refresh';\r\nimport Delete from '@mui/icons-material/Delete';\r\nimport {Snackbar,Alert , Container,Button, TableContainer, Table, TableHead,TableBody,TableRow,TableCell,Paper, DialogTitle, DialogContent, makeStyles, colors } from '@mui/material';\r\nimport { margin, padding } from '@mui/system';\r\nimport { Label } from '@mui/icons-material';\r\nimport { blueGrey, red } from '@mui/material/colors';\r\nimport axios from 'axios';\r\nimport { ErrorMessage } from 'formik';\r\nimport Notification from '../../components/Notifications';\r\n\r\n\r\nimport Newdepartment from './NewDepartment';\r\n\r\nimport { useSettingsContext } from '../../components/settings';\r\n\r\nimport CustomizedDialogs  from '../../components/Dialog/CustomizedDialogs'\r\n\r\nimport useTable from '../../components/tables/useTable'\r\nimport Popup from '../../components/Popup';\r\nimport { variables } from \"../../variables\";\r\n\r\n\r\n\r\n\r\n\r\nconst tableIcons = {\r\n  Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\n  Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\n  Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n  Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\n  DetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n  Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\n  Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\n  Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\n  FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\n  LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\n  NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n  PreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\r\n  ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n  Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\n  SortArrow: forwardRef((props, ref) => <ArrowDownward {...props} ref={ref} />),\r\n  ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\n  ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\r\n};\r\n\r\n\r\n\r\n// Style\r\nconst columns = [\r\n  {title: \"id\", field: \"id\", hidden: true,},\r\n  {title: \"Name\", field: \"depName\",},\r\n]\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function Department() {\r\n  const { themeStretch } = useSettingsContext();\r\n \r\n  const [Departments, setDepartments] = useState([]);\r\n  const [iserror, setIserror] = useState(false)\r\n  const [errorMessages, setErrorMessages] = useState([])\r\n  const [notify, setNotify]=useState({isOpen:false, message:'', type:''})\r\n  const [openPopup, setOpenPopup]=useState(false)\r\nconst getBuildings = async()=>\r\n{\r\n  try \r\n  {\r\n    const Endpoint = `Department`\r\n    const data = await axios.get(variables.API_URL+Endpoint);\r\n  \r\n \r\n   setDepartments(data.data)\r\n    \r\n  }\r\n  catch (e){\r\n    console.log(e);\r\n  }\r\n}\r\n\r\nuseEffect(()=>{\r\n  getBuildings();\r\n},[]);\r\n\r\n\r\n// Update Row\r\n\r\nconst handleRowUpdate = (newData, oldData, resolve) => {\r\n  // validation\r\n  const errorList = []\r\n  if(newData.buildingName === \"\"){\r\n    errorList.push(\"Please enter department name\")\r\n  }\r\n\r\n  if(errorList.length < 1){\r\n //   api.patch(\"/users/\"+newData.id, newData)\r\n\r\n \r\n const Endpoint = `Department`\r\n\r\n axios.put(variables.API_URL+Endpoint,newData)\r\n    .then(res => {\r\n      const dataUpdate = [...Departments];\r\n      const index = oldData.tableData.id;\r\n      dataUpdate[index] = newData;\r\n      setDepartments([...dataUpdate]);\r\n      resolve()\r\n      setIserror(false)\r\n      setErrorMessages([])\r\n      setNotify({\r\n        isOpen:true,\r\n        message: 'Sucessfully Updated',\r\n        type: 'success'\r\n    },\r\n   \r\n        )\r\n    })\r\n    .catch(error => {\r\n      setErrorMessages([\"Dhib dhan serverka ah! Server error\"])\r\n      setIserror(true)\r\n      resolve()\r\n       \r\n    })\r\n  }else{\r\n    setErrorMessages(errorList)\r\n    setIserror(true)\r\n    resolve()\r\n\r\n  }\r\n   \r\n}\r\n\r\n\r\n// Delete Row\r\n\r\nconst handleRowDelete = (oldData, resolve) => {\r\n  const Endpoint = `Department/${oldData.id}`\r\n \r\n  axios.delete(variables.API_URL+Endpoint)\r\n      .then(res => {\r\n        const dataDelete = [...Departments];\r\n        const index = oldData.tableData.id;\r\n        dataDelete.splice(index, 1);\r\n        setDepartments([...dataDelete]);\r\n        resolve();\r\n        console.log(\"Hi\");\r\n        setNotify({\r\n          isOpen:true,\r\n          message: 'Sucessfully Deleted',\r\n          type: 'error'\r\n      } \r\n          )\r\n      })\r\n      .catch(error => {\r\n        setErrorMessages([\"Delete failed! Server error\"])\r\n        setIserror(true)\r\n        console.log(ErrorMessage)\r\n        resolve()\r\n      })\r\n  }\r\n\r\n\r\n  // Insert Data\r\n\r\n  const inserdata = (values)=>{\r\n  const data = {\r\n    records:[\r\n        {\r\n            fields:{\r\n                depName: values.depName,\r\n                \r\n            },\r\n        },\r\n    ],\r\n};\r\n\r\nconst axiosConfig = {\r\n    headers:{\r\n        'Content-Type':'application/json',\r\n    },\r\n   \r\n};\r\nconst Endpoint = `Department`\r\naxios.post(variables.API_URL+Endpoint,{depName: values.depName})\r\n.then((response)=>{\r\n    setNotify({\r\n        isOpen:true,\r\n        message: 'Submitted Successfully',\r\n        type: 'success'\r\n    } \r\n        );\r\n        setOpenPopup(false);\r\n})\r\n.catch((e)=>{\r\n    console.log(\"Hello\")\r\n})\r\n\r\n}\r\n\r\n\r\n\r\n\r\n \r\n\r\n// Table Data\r\n\r\n\r\n  return (\r\n\r\n    <>\r\n    <Helmet>\r\n      <title> HR- Buildings</title>\r\n    </Helmet>\r\n\r\n    <Container maxWidth={themeStretch ? false : 'x3'} sx={{margin:0}}>\r\n\r\n    \r\n    <Button variant=\"outlined\" onClick={()=>setOpenPopup(true)}>\r\n        New Department\r\n      </Button>\r\n        <div>\r\n        {errorMessages.map((msg, i) => {\r\n                      return <div key={i}>{msg}</div>\r\n                  })}\r\n        </div>\r\n        <MaterialTable mt={90}\r\n              title=\"Departments\"\r\n              columns={columns}\r\n              data={Departments}\r\n              icons={tableIcons}\r\n              options={{\r\n                \r\n    headerStyle: {\r\n      backgroundColor: \"#F4F6F8\",\r\n          color: \"#637381\",\r\n        \r\n    },\r\n    rowStyle: {\r\n      \r\n      border: '2px solid #eee'\r\n    },\r\n  \r\n              }}\r\n\r\n            \r\n\r\n              editable={{\r\n                onRowUpdate: (newData, oldData) =>\r\n                  new Promise((resolve) => {\r\n                      handleRowUpdate(newData, oldData, resolve);\r\n                       \r\n                  }),\r\n\r\n                  onRowDelete: (oldData) =>\r\n                  new Promise((resolve) => {\r\n                    handleRowDelete(oldData, resolve)\r\n                  }),\r\n                  \r\n                }}\r\n\r\n              \r\n\r\n\r\n              \r\n            />\r\n    </Container>\r\n\r\n    <Popup\r\nopenPopup={openPopup}\r\nsetOpenPopup={setOpenPopup}\r\ntitle=\"New Department\"\r\n>\r\n<Newdepartment inserdata={inserdata} setOpenPopup={setOpenPopup} />\r\n</Popup>\r\n\r\n    <Notification\r\n        notify={notify}\r\n        setNotify={setNotify}\r\n        />\r\n  </>\r\n\r\n\r\n  );\r\n}\r\n\r\n","export const variables ={\r\n    API_URL: \"https://localhost:7015/api/\",\r\n    \r\n}"],"names":["styled","Dialog","theme","padding","spacing","Notifications","props","React","notify","setNotify","open","isOpen","autoHideDuration","anchorOrigin","vertical","horizontal","severity","type","message","Popup","title","children","openPopup","setOpenPopup","maxWidth","makeStyles","table","marginTop","fontweight","color","white","backgroundColor","palette","primary","black","cursor","NewDepartment","btnStyle","useState","inserdata","validationSchema","Yup","shape","depName","min","required","CancelHandel","Grid","Paper","elevation","style","width","align","Typography","variant","initialValues","onSubmit","values","noValidate","as","TextField","name","label","fullWidth","error","errors","touched","helperText","Button","onClick","tableIcons","Add","forwardRef","ref","AddBox","Check","Clear","Delete","DeleteOutline","DetailPanel","ChevronRight","Edit","Export","SaveAlt","Filter","FilterList","FirstPage","LastPage","NextPage","PreviousPage","ChevronLeft","ResetSearch","Search","SortArrow","ArrowDownward","ThirdStateCheck","Remove","ViewColumn","columns","field","hidden","Department","themeStretch","useSettingsContext","Departments","setDepartments","setIserror","errorMessages","setErrorMessages","getBuildings","axios","variables","data","console","log","useEffect","Container","sx","margin","map","msg","i","mt","icons","options","headerStyle","rowStyle","border","editable","onRowUpdate","newData","oldData","Promise","resolve","errorList","buildingName","push","length","then","res","dataUpdate","tableData","id","catch","handleRowUpdate","onRowDelete","Endpoint","dataDelete","index","splice","ErrorMessage","handleRowDelete","response","e","API_URL"],"sourceRoot":""}