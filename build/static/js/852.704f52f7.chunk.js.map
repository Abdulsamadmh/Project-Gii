{"version":3,"file":"static/js/852.704f52f7.chunk.js","mappings":"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","sources":["components/Notifications.js","pages/Applications/CustomersNames.js","pages/Applications/NewApplication.js"],"sourcesContent":["import * as React from 'react';\r\n\r\nimport { Snackbar,Alert } from '@mui/material';\r\nimport vertical from './nav-section/vertical';\r\nimport horizontal from './nav-section/horizontal';\r\n\r\n\r\nexport default function Notifications(props) {\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n    const { notify, setNotify} = props\r\n\r\n    \r\n  const handleClose = (event?: React.SyntheticEvent | Event, reason?: string) => {\r\n    if (reason === 'clickaway') {\r\n      return;\r\n    }\r\n\r\n    setOpen(false);\r\n  };\r\n\r\n\r\n  return (\r\n   <Snackbar\r\n   open={notify.isOpen}\r\n   autoHideDuration={6000}\r\n   anchorOrigin={{vertical:'top', horizontal:'right'}}\r\n   >\r\n    <Alert severity={notify.type}>\r\n{notify.message}\r\n    </Alert>\r\n   </Snackbar>\r\n  \r\n\r\n  );\r\n}\r\n","import { useState, useEffect } from \"react\";\r\nimport axios from 'axios';\r\nimport {\r\n    FormControl,\r\n    Select,\r\n    InputLabel,\r\n    MenuItem,\r\n    Typography\r\n} from \"@mui/material\"\r\n\r\nfunction CustomerNames(props) {\r\n    const [position, setPosition] = useState([]);\r\n    const [myOptions, setMyOptions] = useState([])\r\n  const [customer, setCustomer]=useState('')\r\n    const {defaultValue} = props\r\n    console.log(defaultValue)\r\n\r\n    const getCustomers = async () => {\r\n        try {\r\n            const data = await axios.get(\"https://localhost:7015/api/Customer\");\r\n            setMyOptions(data.data)\r\n        }\r\n        catch (e) {\r\n            console.log(e);\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        getCustomers();\r\n    }, []);\r\n\r\n    const customername = myOptions.map(pos => {\r\n        return <MenuItem value={pos.id}>{pos.name}</MenuItem>\r\n    })\r\n\r\n    return (\r\n        <FormControl sx={{ width: '170px' }}>\r\n            <InputLabel id=\"possitionId-label\">Select Customer</InputLabel>\r\n            <Select\r\n                labelId=\"demo-simple-select-label\"\r\n                id=\"possitionId\"\r\n                label=\"Position\"\r\n                sx={{ width: '238px' }}\r\n                defaultValue={defaultValue}\r\n                {...props.register('customerid', {required: true})}\r\n            >\r\n                {customername}\r\n            </Select>\r\n            <Typography sx={{color:'red'}}>{props.errors.customerid?.type === \"required\" && \"Customer is required\"}</Typography>\r\n        </FormControl>\r\n    )\r\n}\r\nexport default CustomerNames","import {\r\n  Button,\r\n  Switch,\r\n  InputLabel,\r\n  MenuItem,\r\n  FormControl,\r\n  Select,\r\n  TextField,\r\n  autocompleteClasses,\r\n  Box,\r\n  Container,\r\n  Stack,\r\n  Grid,\r\n  Typography\r\n} from \"@mui/material\"\r\nimport axios from 'axios';\r\nimport { useState } from \"react\"\r\nimport { useForm } from \"react-hook-form\";\r\nimport { color } from \"@mui/system\";\r\nimport CustomerNames from \"./CustomersNames\";\r\n\r\nimport Notification from '../../components/Notifications';\r\n\r\n\r\nfunction NewApplication(props) {\r\n  const {insernewdata,setOpenPopup2} = props\r\n  const { register, handleSubmit, formState: { errors } } = useForm({\r\n      mode: \"onBlur\"\r\n  });\r\n  const [notify, setNotify] = useState({ isOpen: false, message: '', type: '' })\r\n  const [amount, setAmount]=useState('')\r\n  const [profitamount, setProfit]=useState('')\r\n  const [total, setTotal]=useState('')\r\n  const registerOptions = {\r\n      customerid: { required: \"Name is required\" },\r\n      purpose: { required: \"Purpose is required\" },\r\n      amount: { required: \"Amount is required\" },\r\n      tenure: { required: \"Tenure is required\" },\r\n      contribution: { required: \"Contribution is required\" },\r\n      profitrate: { required: \"Profit rate is required\" },\r\n      profitamount: { required: \"profit Amount is required\" },\r\n      totalamount: { required: \"Total Amount is required\" },\r\n      monthlyinstallment: { required: \"Monthly Installment is required\" },\r\n      securitydetails: { required: \"Security Details is required\" },\r\n      securitydescription: { required: \"Description is required\" },\r\n      sourceofpayment: { required: \"source of payment is required\" },\r\n      value: { required: \"value is required\" },\r\n      condition:{ required: \"Condition is required\" },\r\n      RM:{ required: \"RM recommendation is required\" },\r\n     \r\n      }\r\n  \r\n  const handleCancel = () => {\r\n      return setOpenPopup2(false)\r\n  }\r\n\r\n  const handleAmount = (event) => {\r\n    // 👇 Get input value from \"event\"\r\n    setAmount(event.target.value);\r\n  };\r\n\r\n  const handleProfit = (event) => {\r\n    // 👇 Get input value from \"event\"\r\n    setTotal(event.target.value+amount);\r\n\r\nconsole.log(total)\r\n  };\r\n\r\n  function handleRegistration(values) {\r\n      insernewdata(values)\r\n  }\r\n \r\n  function handleError(event) { }\r\n  const label = { inputProps: { 'aria-label': 'Switch demo' } };\r\n  return (\r\n    <Container maxWidth=\"lg\" sx={{ margin: 0 }}>\r\n        <Box sx={{ padding: '10px', borderRadius: '10px' }}>\r\n        <Stack direction=\"row\" spacing={2}>\r\n        <Box flex={2}>\r\n          <CustomerNames register={register} errors={errors}/>\r\n          </Box>\r\n          <Box flex={2} >\r\n          <TextField\r\n                                id=\"purpose\"\r\n                              \r\n                                label=\"Purpose\"\r\n                                name=\"purpose\"\r\n                                {...register('purpose', registerOptions.purpose)}\r\n                            />\r\n  <Typography sx={{color:'red'}}>{errors.purpose?.type === \"required\" && \"Purpose is required\"}</Typography>\r\n          </Box>\r\n          <Box flex={2}>\r\n<TextField\r\n                        id=\"amount\"\r\n                        sx={{ width: '230px' }}\r\n                        label=\"Amount\"\r\n                        name=\"amount\"\r\n                        onChange={handleAmount}\r\n                        {...register('amount', registerOptions.amount)}\r\n                    />\r\n                      <Typography sx={{color:'red'}}>{errors.amount?.type === \"required\" && \"Amount is required\"}</Typography>\r\n  </Box>\r\n  <Box flex={2} >\r\n  <TextField\r\n                        id=\"tenure\"\r\n                      \r\n                        label=\"Facility Period\"\r\n                        name=\"tenure\"\r\n                        {...register('tenure', registerOptions.tenure)}\r\n                    />\r\n  <Typography sx={{color:'red'}}>{errors.tenure?.type === \"required\" && \"Tenure is required\"}</Typography>\r\n  </Box>\r\n          </Stack>\r\n  \r\n\r\n  <br/>\r\n  \r\n  <Stack direction=\"row\" spacing={2}>\r\n\r\n<Box flex={2}>\r\n<TextField\r\n                id=\"profitrate\"\r\n                sx={{ width: '230px' }}\r\n                label=\"Profit Rate\"\r\n                name=\"profitrate\"\r\n                {...register('profitrate', registerOptions.profitrate)}\r\n            />\r\n              <Typography sx={{color:'red'}}>{errors.profitrate?.type === \"required\" && \"Profit rate is required\"}</Typography>\r\n</Box>\r\n<Box flex={2} >\r\n<TextField\r\n                id=\"profitamount\"\r\n                onChange={handleProfit}\r\n                label=\"Profit Amount\"\r\n                name=\"profitamount\"\r\n                {...register('profitamount', registerOptions.profitamount)}\r\n            />\r\n  <Typography sx={{color:'red'}}>{errors.profitamount?.type === \"required\" && \"Profit Amount is required\"}</Typography>\r\n</Box>\r\n<Box flex={2}>\r\n<TextField\r\n                id=\"totalamount\"\r\n                sx={{ width: '230px' }}\r\n                label=\"Total Amount\"\r\n                defaultValue={total}\r\n                name=\"totalamount\"\r\n                {...register('totalamount', registerOptions.totalamount)}\r\n            />\r\n              <Typography sx={{color:'red'}}>{errors.totalamount?.type === \"required\" && \"Total Amount is required\"}</Typography>\r\n</Box>\r\n<Box flex={2} >\r\n<TextField\r\n                id=\"monthlyinstallment\"\r\n              \r\n                label=\"Monthly Installment\"\r\n                name=\"monthlyinstallment\"\r\n                {...register('monthlyinstallment', registerOptions.monthlyinstallment)}\r\n            />\r\n  <Typography sx={{color:'red'}}>{errors.monthlyinstallment?.type === \"required\" && \"Monthly installment is required\"}</Typography>\r\n</Box>\r\n</Stack>\r\n\r\n<br/>\r\n  \r\n  <Stack direction=\"row\" spacing={2}>\r\n\r\n<Box flex={2}>\r\n<TextField\r\n                id=\"sourceofpayment\"\r\n                sx={{ width: '230px' }}\r\n                label=\"Source of Payment\"\r\n                name=\"sourceofpayment\"\r\n                {...register('sourceofpayment', registerOptions.sourceofpayment)}\r\n            />\r\n               <Typography sx={{color:'red'}}>{errors.sourceofpayment?.type === \"required\" && \"Source of Payment is required\"}</Typography>\r\n</Box>\r\n<Box flex={2} >\r\n<TextField\r\n                id=\"securitydetails\"\r\n              \r\n                label=\"Security details\"\r\n                name=\"securitydetails\"\r\n                {...register('securitydetails', registerOptions.securitydetails)}\r\n            />\r\n   <Typography sx={{color:'red'}}>{errors.securitydetails?.type === \"required\" && \"Security detail is required\"}</Typography>\r\n</Box>\r\n<Box flex={2}>\r\n<TextField\r\n                id=\"securitydescription\"\r\n                sx={{ width: '230px' }}\r\n                label=\"Security description\"\r\n                name=\"securitydescription\"\r\n                {...register('securitydescription', registerOptions.securitydescription)}\r\n            />\r\n               <Typography sx={{color:'red'}}>{errors.securitydescription?.type === \"required\" && \"Security description is required\"}</Typography>\r\n</Box>\r\n<Box flex={2} >\r\n<TextField\r\n                id=\"value\"\r\n              \r\n                label=\"Value\"\r\n                name=\"value\"\r\n                {...register('value', registerOptions.value)}\r\n            />\r\n   <Typography sx={{color:'red'}}>{errors.value?.type === \"required\" && \"Value is required\"}</Typography>\r\n</Box>\r\n</Stack>\r\n\r\n\r\n<br/>\r\n<Stack direction=\"row\" spacing={1}>\r\n\r\n\r\n<Box flex={2} >\r\n<TextField\r\n                id=\"contribution\"\r\n              \r\n                label=\"Contribution\"\r\n                name=\"contribution\"\r\n                {...register('contribution', registerOptions.contribution)}\r\n            />\r\n   <Typography sx={{color:'red'}}>{errors.contribution?.type === \"required\" && \"Contribution is required\"}</Typography>\r\n</Box>\r\n<Box flex={2} >\r\n<TextField\r\n                id=\"condition\"\r\n                sx={{ width: '230px' }}\r\n                label=\"Conditions/ Recommendations\"\r\n                name=\"condition\"\r\n                {...register('condition', registerOptions.condition)}\r\nmultiline\r\n                rows={5}\r\n            />\r\n   <Typography sx={{color:'red'}}>{errors.condition?.type === \"required\" && \"Conditions is required\"}</Typography>\r\n\r\n</Box>\r\n<Box flex={2} >\r\n<TextField\r\n                id=\"rm\"\r\n                sx={{ width: '230px' }}\r\n                label=\"RM recommendation\"\r\n                name=\"RM\"\r\n                {...register('RM', registerOptions.RM)}\r\nmultiline\r\n                rows={5}\r\n            />\r\n   <Typography sx={{color:'red'}}>{errors.RM?.type === \"required\" && \"RM is required\"}</Typography>\r\n\r\n</Box>\r\n</Stack>\r\n <br />\r\n\r\n \r\n\r\n                    <Button variant=\"contained\"\r\n                        onClick={handleSubmit(handleRegistration, handleError)}\r\n                    >Submit Application</Button>\r\n                    <Button onClick={handleCancel}>Cancel</Button>\r\n            </Box>\r\n    </Container>\r\n   \r\n  )\r\n}\r\nexport default NewApplication\r\n"],"names":["Notifications","props","React","notify","setNotify","open","isOpen","autoHideDuration","anchorOrigin","vertical","horizontal","severity","type","message","useState","myOptions","setMyOptions","defaultValue","console","log","getCustomers","axios","data","useEffect","customername","map","pos","value","id","name","sx","width","labelId","label","register","required","color","errors","customerid","insernewdata","setOpenPopup2","useForm","mode","handleSubmit","formState","amount","setAmount","total","setTotal","registerOptions","maxWidth","margin","padding","borderRadius","direction","spacing","flex","purpose","onChange","event","target","tenure","profitrate","profitamount","totalamount","monthlyinstallment","sourceofpayment","securitydetails","securitydescription","contribution","multiline","rows","condition","RM","variant","onClick","values"],"sourceRoot":""}